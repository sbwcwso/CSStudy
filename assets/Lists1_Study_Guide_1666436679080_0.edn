{:highlights [{:id #uuid "6353d188-a8c2-451d-92da-b649769167d0", :page 1, :position {:bounding {:x1 210.125, :y1 457.8125, :x2 619.7560424804688, :y2 479.8125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 210.125, :y1 457.8125, :x2 619.7560424804688, :y2 479.8125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Primitives are representations of information. "}, :properties {:color "blue"}} {:id #uuid "6353d1ad-5ccf-4ea4-909f-99420f0181e2", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 866.9635620117188, :y2 1315.234375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 819.7977294921875, :y1 1238.203125, :x2 866.9635620117188, :y2 1260.203125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1265.71875, :x2 827.76025390625, :y2 1287.71875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1293.234375, :x2 174.07940673828125, :y2 1315.234375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "when we assign a value with equals, we are just copying the bits from one memory box to another!"}, :properties {:color "blue"}} {:id #uuid "6353d208-ee71-49c4-b087-b034c52386f0", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 871.3445434570312, :y2 1100.125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 855.3053588867188, :y1 1049.359375, :x2 871.3445434570312, :y2 1071.359375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1078.125, :x2 491.7979736328125, :y2 1100.125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "A reference type is always a box of size 64 bits."}, :properties {:color "blue"}} {:id #uuid "6353d2b7-b7ec-49ee-a047-51b3c3aaf6a5", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 847.3019409179688, :y2 282.21875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 185.32630920410156, :y1 232.703125, :x2 847.3019409179688, :y2 258.703125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 260.21875, :x2 644.9763793945312, :y2 282.21875, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "This means declaring an array variable (i.e. int[] x; ) will create a 64-bit reference type variable that will hold the location of this array."}, :properties {:color "blue"}} {:id #uuid "6353d2d7-9ae1-4ea1-b28e-bb86866acacf", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 865.6405029296875, :y2 338.5, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 668.1581420898438, :y1 288.984375, :x2 865.6405029296875, :y2 310.984375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 316.5, :x2 759.237060546875, :y2 338.5, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "The new keyword for arrays will create the array and return the location of this array in memory. "}, :properties {:color "blue"}} {:id #uuid "6353d311-edd8-4d62-a963-d1f680580d22", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 858.192626953125, :y2 422.296875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 301.9901123046875, :y1 372.78125, :x2 858.192626953125, :y2 394.78125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 400.296875, :x2 383.5511779785156, :y2 422.296875, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Note that the size of the array was specified when the array was created, and cannot be changed!"}, :properties {:color "blue"}} {:id #uuid "6353d3d8-3724-4b7f-8993-56813d1888c1", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 886.40771484375, :y2 526.09375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 730.328125, :y1 449.0625, :x2 864.3370971679688, :y2 471.0625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 476.578125, :x2 886.40771484375, :y2 498.578125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 504.09375, :x2 196.94419860839844, :y2 526.09375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "IntLists are lists of integers that can change size (unlike arrays), and store an arbitrarily large number of integers."}, :properties {:color "blue"}}]}