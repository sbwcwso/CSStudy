{:highlights [{:id #uuid "6353cef4-8aa1-42da-a1e8-fadbcba66c1b", :page 1, :position {:bounding {:x1 98.328125, :y1 532.859375, :x2 811.7514038085938, :y2 554.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 532.859375, :x2 811.7514038085938, :y2 554.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "While Java does have a built-in List type, we're going to eschew using it for now. "}, :properties {:color "blue"}} {:id #uuid "6353d278-c8e0-4d8c-8975-50ff20f147ea", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 843.7055358886719, :y2 911.28125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 162.50668334960938, :y1 861.765625, :x2 843.7055358886719, :y2 883.765625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 889.28125, :x2 243.220703125, :y2 911.28125, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "the GRoE also applies to parameter passing. Copying the bits is usually called\"pass by value\". "}, :properties {:color "blue"}} {:id #uuid "6353d285-c51e-465e-9a51-3b12c537a1b4", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 542.005859375, :y2 911.28125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 243.20382690429688, :y1 889.28125, :x2 542.005859375, :y2 911.28125, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "In Java, we always pass by value."}, :properties {:color "green"}} {:id #uuid "6353d386-ea73-47c7-b5c9-63fdab4ba24a", :page 10, :position {:bounding {:x1 98.328125, :y1 148.921875, :x2 698.4268798828125, :y2 170.921875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 148.921875, :x2 698.4268798828125, :y2 170.921875, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "Objects can be lost if you lose the bits corresponding to the address. "}, :properties {:color "blue"}} {:id #uuid "6353d3a1-2b9f-4a40-94da-3b15608226f7", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 871.4640502929688, :y2 254.703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 424.19915771484375, :y1 205.203125, :x2 871.4640502929688, :y2 227.203125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 232.703125, :x2 868.8307495117188, :y2 254.703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "This isn't necessarily a bad thing, since you'll often decide you're done with an object, and thus it's safe to simply throw away the reference."}, :properties {:color "blue"}} {:id #uuid "6353d506-ca2c-4070-8ba3-c55ad8a6ddf6", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 878.9820861816406, :y2 1092.625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 319.8531799316406, :y1 1041.859375, :x2 878.9820861816406, :y2 1063.859375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1070.625, :x2 278.1182556152344, :y2 1092.625, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "For example, if we want to make a list of the numbers 5, 10, and15, we can either do:"}, :properties {:color "blue"}} {:id #uuid "6353d52f-86a4-40e9-a6eb-bcb68a27960b", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 822.01220703125, :y2 1255.203125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1205.6875, :x2 822.01220703125, :y2 1227.6875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1233.203125, :x2 252.10043334960938, :y2 1255.203125, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "Alternately, we could build our list backwards, yielding slightly nicer but harder to understand code:"}, :properties {:color "blue"}} {:id #uuid "6353d5b1-3152-4ba2-8dc4-d06a6198da13", :page 11, :position {:bounding {:x1 98.328125, :y1 265.21875, :x2 299.6277770996094, :y2 287.21875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 265.21875, :x2 299.6277770996094, :y2 287.21875, :width 991.5999333333333, :height 1403.1999666666666}), :page 11}, :content {:text "size and iterativeSize"}, :properties {:color "blue"}} {:id #uuid "6353d63f-6024-413f-81da-fce67d420176", :page 2, :position {:bounding {:x1 98.328125, :y1 1153.859375, :x2 441.1112365722656, :y2 1178.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 1153.859375, :x2 441.1112365722656, :y2 1178.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Declaring a Variable (Simplified)"}, :properties {:color "blue"}} {:id #uuid "6353d720-8ed5-466c-b9ec-0e4e34734106", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 873.5807495117188, :y2 814.984375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 622.2017822265625, :y1 764.21875, :x2 873.5807495117188, :y2 786.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 792.984375, :x2 570.9789428710938, :y2 814.984375, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "the exact memory address is below the level of abstraction accessible to us in Java. "}, :properties {:color "blue"}} {:id #uuid "6353d73f-a2a5-4223-b3be-ce607c7ec685", :page 3, :position {:bounding {:x1 98.328125, :y1 896.78125, :x2 394.2027893066406, :y2 918.78125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 896.78125, :x2 394.2027893066406, :y2 918.78125, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "This feature of Java is a tradeoff! "}, :properties {:color "blue"}} {:id #uuid "6353d754-4aa3-4c77-9062-9bcb5ec4a59e", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 863.9391479492188, :y2 946.296875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 394.1856689453125, :y1 896.78125, :x2 863.9391479492188, :y2 918.78125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 924.296875, :x2 791.9719848632812, :y2 946.296875, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "Hiding memory locations from the programmer gives you less control, which prevents you from doing certain types of optimizations."}, :properties {:color "green"}} {:id #uuid "6353d771-789d-4de4-a81a-472e64ce945b", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 881.4859008789062, :y2 975.0625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 797.3970336914062, :y1 924.296875, :x2 881.4859008789062, :y2 946.296875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 953.0625, :x2 639.7898559570312, :y2 975.0625, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "However, it also avoids a large class of very tricky programming errors. "}, :properties {:color "blue"}} {:id #uuid "6353d7a0-01bb-4db6-83da-8d912a7ff4da", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 856.8131561279297, :y2 1058.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 145.1074676513672, :y1 1008.09375, :x2 856.8131561279297, :y2 1030.09375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1036.859375, :x2 403.1766357421875, :y2 1058.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "\"We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil\"."}, :properties {:color "blue"}} {:id #uuid "6353d7e1-9283-4c08-ac50-752454cfa16f", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 849.5418090820312, :y2 1162.65625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1084.375, :x2 849.5418090820312, :y2 1106.375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1113.140625, :x2 838.6249389648438, :y2 1135.140625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1140.65625, :x2 482.4808349609375, :y2 1162.65625, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "As an analogy, you do not have direct control over your heartbeat. While this restricts your ability to optimize for certain situations, it also avoids the possibility of making stupid errors like accidentally turning it off."}, :properties {:color "blue"}} {:id #uuid "6353d876-9e11-4369-93ed-26d75d6e4827", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 867.9360961914062, :y2 742.453125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 814.090576171875, :y1 664.171875, :x2 867.9360961914062, :y2 686.171875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 692.9375, :x2 863.0421142578125, :y2 714.9375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 720.453125, :x2 177.48695373535156, :y2 742.453125, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "the 64 bit box contains not the data about the walrus, but instead the address of the Walrus in memory."}, :properties {:color "blue"}} {:id #uuid "6353da08-17db-4be3-a789-4a264fb31a0b", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 834.6492919921875, :y2 935.296875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 807.9249267578125, :y1 881.78125, :x2 834.6492919921875, :y2 903.78125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 100.56698608398438, :y1 909.296875, :x2 462.7537841796875, :y2 935.296875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 371.84375, :y1 912.34375, :x2 375.890625, :y2 930.359375, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "the address is returned by the new operator."}, :properties {:color "blue"}} {:id #uuid "6353da95-027d-4cf0-b39e-01af24e9616a", :page 8, :position {:bounding {:x1 98.328125, :y1 346.515625, :x2 458.1123352050781, :y2 368.515625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 346.515625, :x2 458.1123352050781, :y2 368.515625, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "Note that above, b is undefined, not null."}, :properties {:color "blue"}} {:id #uuid "6353dae4-2415-4cf8-929c-25862021a7cd", :page 10, :position {:bounding {:x1 98.328125, :y1 310.25, :x2 374.0181884765625, :y2 332.25, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 310.25, :x2 374.0181884765625, :y2 332.25, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "The Law of the Broken Futon"}, :properties {:color "blue"}} {:id #uuid "6353db95-fed5-4eec-82a6-561ed4212e02", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 878.8487548828125, :y2 402.28125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 352.765625, :x2 878.8487548828125, :y2 374.765625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 380.28125, :x2 182.47679138183594, :y2 402.28125, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "You might ask yourself why we spent so much time and space covering what seems like a triviality. "}, :properties {:color "blue"}} {:id #uuid "6353e2bc-735a-4c47-9072-0e8314a537bf", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 892.7737426757812, :y2 458.5625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 761.8460083007812, :y1 380.28125, :x2 878.0740356445312, :y2 402.28125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 409.046875, :x2 892.7737426757812, :y2 431.046875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 436.5625, :x2 728.6288452148438, :y2 458.5625, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "The reason is that it is very easy for a student to have a half-cocked understanding of this issue, allowing them to write code, but without true comprehension of what's going on."}, :properties {:color "green"}} {:id #uuid "6353e2d9-d5d6-437b-b9ce-752fa542de7a", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 871.4373779296875, :y2 534.84375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 484.078125, :x2 871.4373779296875, :y2 506.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 512.84375, :x2 622.3424682617188, :y2 534.84375, :width 991.5999333333333, :height 1403.1999666666666}), :page 10}, :content {:text "While this might be fine in the short term, in the long term, doing problems without full understanding may doom you to failure later down the line."}, :properties {:color "green"}} {:id #uuid "6353e3d9-7def-4f38-a15d-a3bed7384273", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 885.8367309570312, :y2 209.6875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 160.171875, :x2 885.8367309570312, :y2 182.171875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 187.6875, :x2 461.30548095703125, :y2 209.6875, :width 991.5999333333333, :height 1403.1999666666666}), :page 11}, :content {:text "While you could in principle use the IntList to store any list of integers, the resulting code would be rather ugly and prone to errors."}, :properties {:color "green"}} {:id #uuid "6353e442-0775-4a10-8625-0027e2273fa1", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 835.8524169921875, :y2 238.453125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 466.4285583496094, :y1 187.6875, :x2 789.1654663085938, :y2 209.6875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 216.453125, :x2 835.8524169921875, :y2 238.453125, :width 991.5999333333333, :height 1403.1999666666666}), :page 11}, :content {:text "We'll adopt the usual object oriented programming strategy of adding helper methods to our class to perform basic tasks."}, :properties {:color "blue"}} {:id #uuid "6353e454-9162-40ed-bbd4-805fe01691fa", :page 11, :position {:bounding {:x1 98.328125, :y1 740.453125, :x2 776.9298706054688, :y2 762.453125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 740.453125, :x2 776.9298706054688, :y2 762.453125, :width 991.5999333333333, :height 1403.1999666666666}), :page 11}, :content {:text "The key thing to remember about recursive code is that you need a base case."}, :properties {:color "blue"}} {:id #uuid "6353e4f6-543c-49aa-8979-2135f35b52da", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 831.34814453125, :y2 1046.34375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 528.1521606445312, :y1 968.0625, :x2 831.34814453125, :y2 990.0625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 996.828125, :x2 817.0125122070312, :y2 1022.828125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1024.34375, :x2 354.7298889160156, :y2 1046.34375, :width 991.5999333333333, :height 1403.1999666666666}), :page 11}, :content {:text " I recommend that when you write iterative data structure code that you use the name p to remind yourself that the variable is holding a pointer. "}, :properties {:color "yellow"}} {:id #uuid "6353e52c-0cf6-4e67-a1fb-b0072e016ebe", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 860.1082153320312, :y2 1073.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 354.7126770019531, :y1 1024.34375, :x2 860.1082153320312, :y2 1046.34375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1051.859375, :x2 147.33509826660156, :y2 1073.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 11}, :content {:text "You need that pointer because you can't reassign \"this\" in Java. "}, :properties {:color "blue"}}]}