{:highlights [{:id #uuid "63a963ed-dc39-4c08-8554-489018abdea8", :page 1, :position {:bounding {:x1 0, :y1 48, :x2 836.791748046875, :y2 457.84375, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 417.203125, :x2 836.791748046875, :y2 436.203125, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 438.84375, :x2 303.0110168457031, :y2 457.84375, :width 959.9999999999999, :height 1080}), :page 1}, :content {:text "The first half of the book (chapters 1–5) described and built a computer’s hardware platform."}, :properties {:color "yellow"}} {:id #uuid "63a96402-802e-4517-840d-9b3d86fa9515", :page 1, :position {:bounding {:x1 0, :y1 64, :x2 836.3872985839844, :y2 479.390625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 959.9999999999999, :height 1080} {:x1 307.3313903808594, :y1 438.84375, :x2 836.3872985839844, :y2 457.84375, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 460.390625, :x2 367.954833984375, :y2 479.390625, :width 959.9999999999999, :height 1080}), :page 1}, :content {:text "The second half of the book (chapters 6–12) focuses on the computer’s software hierarchy"}, :properties {:color "red"}} {:id #uuid "63a96409-ba9c-4dc4-a61f-f433210cdd14", :page 1, :position {:bounding {:x1 0, :y1 80, :x2 836.6784057617188, :y2 500.921875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 959.9999999999999, :height 1080} {:x1 377.16925048828125, :y1 460.390625, :x2 836.6784057617188, :y2 479.390625, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 481.921875, :x2 705.261474609375, :y2 500.921875, :width 959.9999999999999, :height 1080}), :page 1}, :content {:text "culminating in the development of a compiler and a basic operating system for a simple, object-based programming language. "}, :properties {:color "yellow"}} {:id #uuid "63a9646b-60fd-4302-9418-3e932a4a970a", :page 1, :position {:bounding {:x1 0, :y1 128, :x2 1004.1741333007812, :y2 704.3125, :width 1152, :height 1296}, :rects ({:x1 0, :y1 128, :x2 0, :y2 144, :width 1152, :height 1296} {:x1 0, :y1 144, :x2 0, :y2 160, :width 1152, :height 1296} {:x1 968.1849975585938, :y1 630.515625, :x2 1003.8458251953125, :y2 652.515625, :width 1152, :height 1296} {:x1 286.9375, :y1 656.46875, :x2 1004.1741333007812, :y2 678.46875, :width 1152, :height 1296} {:x1 286.9375, :y1 682.3125, :x2 692.0007934570312, :y2 704.3125, :width 1152, :height 1296}), :page 1}, :content {:text "This chapter describes how assemblers can systematically translate programs written in the former into programs written in the latter. "}, :properties {:color "yellow"}} {:id #uuid "63a96499-a0df-47c7-bb6c-07280578232d", :page 1, :position {:bounding {:x1 0, :y1 176, :x2 1004.0774536132812, :y2 756.125, :width 1152, :height 1296}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 1152, :height 1296} {:x1 445.109375, :y1 708.28125, :x2 1004.0774536132812, :y2 730.28125, :width 1152, :height 1296} {:x1 286.9375, :y1 734.125, :x2 740.6226196289062, :y2 756.125, :width 1152, :height 1296}), :page 1}, :content {:text "Hack assembler—a program that generates binary code that can run as is on the hardware platform built in chapter 5."}, :properties {:color "red"}} {:id #uuid "63a964ce-6ec6-4460-bdae-122ab078f087", :page 1, :position {:bounding {:x1 0, :y1 256, :x2 1004.0703125, :y2 911.546875, :width 1152, :height 1296}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 1152, :height 1296} {:x1 0, :y1 272, :x2 0, :y2 288, :width 1152, :height 1296} {:x1 863.60498046875, :y1 837.734375, :x2 1003.776611328125, :y2 859.734375, :width 1152, :height 1296} {:x1 286.9375, :y1 863.578125, :x2 1004.0703125, :y2 885.578125, :width 1152, :height 1296} {:x1 286.9375, :y1 889.546875, :x2 373.4254455566406, :y2 911.546875, :width 1152, :height 1296}), :page 1}, :content {:text "The assembler is expected to manage these user-defined symbols and resolve them to physical memory addresses"}, :properties {:color "yellow"}} {:id #uuid "63a964d6-eb0c-4a64-aa98-421fa51b31f9", :page 1, :position {:bounding {:x1 0, :y1 288, :x2 1004.1280517578125, :y2 937.390625, :width 1152, :height 1296}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 1152, :height 1296} {:x1 373.4107360839844, :y1 889.546875, :x2 1004.1280517578125, :y2 911.546875, :width 1152, :height 1296} {:x1 286.9375, :y1 915.390625, :x2 771.5322265625, :y2 937.390625, :width 1152, :height 1296}), :page 1}, :content {:text ". This task is normally done using a symbol table—a classical data structure that comes to play in many software translation projects."}, :properties {:color "red"}} {:id #uuid "63a966d4-9343-4f53-9f0d-3edda991ea3f", :page 2, :position {:bounding {:x1 147.671875, :y1 263.359375, :x2 307.466796875, :y2 288.359375, :width 1152, :height 1296}, :rects ({:x1 147.671875, :y1 263.359375, :x2 177.52047729492188, :y2 288.359375, :width 1152, :height 1296} {:x1 197.453125, :y1 263.359375, :x2 307.466796875, :y2 288.359375, :width 1152, :height 1296}), :page 2}, :content {:text "6.1 Background"}, :properties {:color "yellow"}} {:id #uuid "63a96730-ee4c-4abe-88aa-6b9b76576755", :page 2, :position {:bounding {:x1 0, :y1 192, :x2 1008.3486328125, :y2 597.75, :width 1152, :height 1296}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 1152, :height 1296} {:x1 0, :y1 208, :x2 0, :y2 224, :width 1152, :height 1296} {:x1 725.5691528320312, :y1 523.9375, :x2 1008.0733642578125, :y2 545.9375, :width 1152, :height 1296} {:x1 291.109375, :y1 549.890625, :x2 1008.3486328125, :y2 571.890625, :width 1152, :height 1296} {:x1 291.109375, :y1 575.75, :x2 526.1917724609375, :y2 597.75, :width 1152, :height 1296}), :page 2}, :content {:text "machine languages can be rather complex, involving many operation codes, different memory addressing modes, and various instruction formats."}, :properties {:color "yellow"}} {:id #uuid "63a96785-bc2c-4275-a33c-fd6360a7fbb7", :page 2, :position {:bounding {:x1 291.109375, :y1 860.703125, :x2 361.19818115234375, :y2 882.703125, :width 1152, :height 1296}, :rects ({:x1 291.109375, :y1 860.703125, :x2 361.19818115234375, :y2 882.703125, :width 1152, :height 1296}), :page 2}, :content {:text "Symbols"}, :properties {:color "yellow"}} {:id #uuid "63a967f1-5e6a-4f29-8387-d5dd48665a02", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 1004.1843872070312, :y2 177.328125, :width 1152, :height 1296}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1152, :height 1296} {:x1 538.8153076171875, :y1 129.484375, :x2 1004.1843872070312, :y2 151.484375, :width 1152, :height 1296} {:x1 286.921875, :y1 155.328125, :x2 524.961181640625, :y2 177.328125, :width 1152, :height 1296}), :page 3}, :content {:text " In general then, symbols are introduced into assembly programs from two sources:"}, :properties {:color "yellow"}} {:id #uuid "63a96843-d1fb-4036-84ac-4c1e1f4b37b1", :page 3, :position {:bounding {:x1 316.046875, :y1 195.25, :x2 395.32379150390625, :y2 217.25, :width 1152, :height 1296}, :rects ({:x1 316.046875, :y1 195.25, :x2 395.32379150390625, :y2 217.25, :width 1152, :height 1296}), :page 3}, :content {:text "Variables"}, :properties {:color "yellow"}} {:id #uuid "63a9684c-0c27-4f72-8528-deafc21b78cb", :page 3, :position {:bounding {:x1 0, :y1 32, :x2 1004.0548095703125, :y2 243.109375, :width 1152, :height 1296}, :rects ({:x1 0, :y1 32, :x2 0, :y2 48, :width 1152, :height 1296} {:x1 421.28125, :y1 195.25, :x2 1004.0548095703125, :y2 217.25, :width 1152, :height 1296} {:x1 286.921875, :y1 221.109375, :x2 816.1719970703125, :y2 243.109375, :width 1152, :height 1296}), :page 3}, :content {:text "The programmer can use symbolic variable names, and the translator will ‘‘automatically’’ assign them to memory addresses"}, :properties {:color "red"}} {:id #uuid "63a96851-387e-4477-aad3-96b69cf965d7", :page 3, :position {:bounding {:x1 316.046875, :y1 304.78125, :x2 371.44512939453125, :y2 326.78125, :width 1152, :height 1296}, :rects ({:x1 316.046875, :y1 304.78125, :x2 371.44512939453125, :y2 326.78125, :width 1152, :height 1296}), :page 3}, :content {:text "Labels"}, :properties {:color "yellow"}} {:id #uuid "63a96858-5eaa-4bd9-8312-7eb07ecd4d6d", :page 3, :position {:bounding {:x1 0, :y1 96, :x2 1004.0716552734375, :y2 352.75, :width 1152, :height 1296}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 1152, :height 1296} {:x1 397.34375, :y1 304.78125, :x2 1004.0716552734375, :y2 326.78125, :width 1152, :height 1296} {:x1 286.90625, :y1 330.75, :x2 327.3608703613281, :y2 352.75, :width 1152, :height 1296}), :page 3}, :content {:text "The programmer can mark various locations in the program with symbols."}, :properties {:color "red"}} {:id #uuid "63a968de-af55-41e6-ae0f-bcf9ca3547cc", :page 3, :position {:bounding {:x1 286.921875, :y1 655.4375, :x2 445.6687316894531, :y2 677.4375, :width 1152, :height 1296}, :rects ({:x1 286.921875, :y1 655.4375, :x2 445.6687316894531, :y2 677.4375, :width 1152, :height 1296}), :page 3}, :content {:text "Symbol Resolution"}, :properties {:color "yellow"}} {:id #uuid "63a9690b-734b-4064-aac2-dd50273b4696", :page 3, :position {:bounding {:x1 306.75, :y1 759.109375, :x2 695.4869995117188, :y2 781.109375, :width 1152, :height 1296}, :rects ({:x1 306.75, :y1 759.109375, :x2 695.4869995117188, :y2 781.109375, :width 1152, :height 1296}), :page 3}, :content {:text "We start by making two arbitrary game rules"}, :properties {:color "yellow"}} {:id #uuid "63a96968-d125-4ac9-9f65-1530c97fd768", :page 3, :position {:bounding {:x1 0, :y1 352, :x2 1003.6007690429688, :y2 806.953125, :width 1152, :height 1296}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 1152, :height 1296} {:x1 706.166015625, :y1 759.109375, :x2 1003.6007690429688, :y2 781.109375, :width 1152, :height 1296} {:x1 286.90625, :y1 784.953125, :x2 704.6898803710938, :y2 806.953125, :width 1152, :height 1296}), :page 3}, :content {:text "The translated code will be stored in the computer’s memory starting at address 0"}, :properties {:color "red"}} {:id #uuid "63a96979-8f31-4e5e-9fdc-d3c3e49f256c", :page 3, :position {:bounding {:x1 0, :y1 368, :x2 1004.1397705078125, :y2 858.765625, :width 1152, :height 1296}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 1152, :height 1296} {:x1 0, :y1 384, :x2 0, :y2 400, :width 1152, :height 1296} {:x1 754.7711181640625, :y1 784.953125, :x2 1004.1397705078125, :y2 806.953125, :width 1152, :height 1296} {:x1 286.90625, :y1 810.921875, :x2 1004.0169067382812, :y2 832.921875, :width 1152, :height 1296} {:x1 286.90625, :y1 836.765625, :x2 458.51885986328125, :y2 858.765625, :width 1152, :height 1296}), :page 3}, :content {:text "variables will be allocated to memory locations starting at address 1024 (these rules depend on the specific target hardware platform)."}, :properties {:color "yellow"}} {:id #uuid "63a9699b-dbd0-4c50-a27a-7ca008205e9c", :page 3, :position {:bounding {:x1 0, :y1 400, :x2 1004.1094360351562, :y2 936.40625, :width 1152, :height 1296}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 1152, :height 1296} {:x1 0, :y1 416, :x2 0, :y2 432, :width 1152, :height 1296} {:x1 0, :y1 432, :x2 0, :y2 448, :width 1152, :height 1296} {:x1 515.6920166015625, :y1 836.765625, :x2 1004.1094360351562, :y2 858.765625, :width 1152, :height 1296} {:x1 286.890625, :y1 862.71875, :x2 1003.9588623046875, :y2 884.71875, :width 1152, :height 1296} {:x1 286.875, :y1 888.5625, :x2 1004.0177612304688, :y2 910.5625, :width 1152, :height 1296} {:x1 286.875, :y1 914.40625, :x2 333.83636474609375, :y2 936.40625, :width 1152, :height 1296}), :page 3}, :content {:text "we build a symbol table, as follows. For each new symbol xxx encountered in the source code, we add a line ðxxx , nÞ to the symbol table, where n is the memory address associated with the symbol according to the game rules."}, :properties {:color "red"}} {:id #uuid "63a969b8-fd4a-4455-b010-50f959e1acc8", :page 3, :position {:bounding {:x1 0, :y1 448, :x2 1003.0057067871094, :y2 962.375, :width 1152, :height 1296}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 1152, :height 1296} {:x1 338.0863952636719, :y1 914.40625, :x2 1003.0057067871094, :y2 936.40625, :width 1152, :height 1296} {:x1 286.875, :y1 940.375, :x2 599.184326171875, :y2 962.375, :width 1152, :height 1296}), :page 3}, :content {:text "After completing the construction of the symbol table, we use it to translate the program into its symbol-less version."}, :properties {:color "yellow"}} {:id #uuid "63a969f1-33d0-4d33-a43a-955f8f92dab9", :page 4, :position {:bounding {:x1 117, :y1 119, :x2 1044, :y2 574, :width 1152, :height 1296}, :rects (), :page 4}, :content {:text "[:span]", :image 1672047087728}, :properties {:color "yellow"}} {:id #uuid "63a96a31-407c-4800-a155-774dd31094b6", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 941.1832885742188, :y2 618.671875, :width 1075.1999999999998, :height 1209.6}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1075.1999999999998, :height 1209.6} {:x1 0, :y1 16, :x2 0, :y2 32, :width 1075.1999999999998, :height 1209.6} {:x1 588.3927001953125, :y1 549.328125, :x2 941.1832885742188, :y2 570.328125, :width 1075.1999999999998, :height 1209.6} {:x1 271.6875, :y1 573.546875, :x2 941.1340942382812, :y2 594.546875, :width 1075.1999999999998, :height 1209.6} {:x1 271.6875, :y1 597.671875, :x2 315.8624572753906, :y2 618.671875, :width 1075.1999999999998, :height 1209.6}), :page 4}, :content {:text " First, note that the variable allocation assumption implies that the largest program that we can run is 1,024 instructions long. "}, :properties {:color "yellow"}} {:id #uuid "63b0d6fd-8bfd-4b8c-9a6d-e770b7866273", :page 4, :position {:bounding {:x1 0, :y1 48, :x2 840.3580932617188, :y2 595.59375, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 959.9999999999999, :height 1080} {:x1 727.7379760742188, :y1 555.0625, :x2 840.3580932617188, :y2 574.0625, :width 959.9999999999999, :height 1080} {:x1 242.578125, :y1 576.59375, :x2 798.4193725585938, :y2 595.59375, :width 959.9999999999999, :height 1080}), :page 4}, :content {:text "Second, the assumption that each source command is mapped on one word may be naı ̈ve."}, :properties {:color "yellow"}} {:id #uuid "63b0d779-f718-4534-ad54-36bd622a5999", :page 4, :position {:bounding {:x1 0, :y1 160, :x2 840.3444213867188, :y2 746.671875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 959.9999999999999, :height 1080} {:x1 259.234375, :y1 706.125, :x2 840.3444213867188, :y2 725.125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 727.671875, :x2 382.78790283203125, :y2 746.671875, :width 959.9999999999999, :height 1080}), :page 4}, :content {:text "Finally, the assumption that each variable is represented by a single memory location is also naı ̈ve."}, :properties {:color "yellow"}} {:id #uuid "63b0d7a7-0a4a-4108-afc4-2cdbed6082f3", :page 4, :position {:bounding {:x1 0, :y1 240, :x2 840.2516479492188, :y2 876.21875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 959.9999999999999, :height 1080} {:x1 0, :y1 256, :x2 0, :y2 272, :width 959.9999999999999, :height 1080} {:x1 800.7550048828125, :y1 814.046875, :x2 839.9907836914062, :y2 833.046875, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 835.59375, :x2 840.2516479492188, :y2 854.59375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 857.21875, :x2 701.2831420898438, :y2 876.21875, :width 959.9999999999999, :height 1080}), :page 4}, :content {:text "Thus, when allocating memory space for variables, the translator must take into account both their data types and the word width of the target hardware."}, :properties {:color "red"}} {:id #uuid "63b0d837-2489-4c23-b2ee-8e55b79ff534", :page 4, :position {:bounding {:x1 242.59375, :y1 900.40625, :x2 346.1921081542969, :y2 919.40625, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 900.40625, :x2 346.1921081542969, :y2 919.40625, :width 959.9999999999999, :height 1080}), :page 4}, :content {:text "The Assembler "}, :properties {:color "yellow"}} {:id #uuid "63b0d8b8-51f9-4164-b806-644dd347fe41", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 836.6754150390625, :y2 169.75, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 959.9999999999999, :height 1080} {:x1 0, :y1 16, :x2 0, :y2 32, :width 959.9999999999999, :height 1080} {:x1 537.6385498046875, :y1 107.578125, :x2 836.4747924804688, :y2 126.578125, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 129.109375, :x2 836.6754150390625, :y2 148.109375, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 150.75, :x2 278.1387023925781, :y2 169.75, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "The assembler takes as input a stream of assembly commands and generates as output a stream of equivalent binary instructions."}, :properties {:color "red"}} {:id #uuid "63b0d8cc-38d8-4637-8161-77afe7f3aeca", :page 5, :position {:bounding {:x1 0, :y1 64, :x2 836.8031005859375, :y2 234.453125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 959.9999999999999, :height 1080} {:x1 347.3672180175781, :y1 193.921875, :x2 836.8031005859375, :y2 212.921875, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 215.453125, :x2 445.5949401855469, :y2 234.453125, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "the assembler is essentially a text-processing program, designed to provide translation services"}, :properties {:color "yellow"}} {:id #uuid "63b0da2d-790a-41cc-91c7-8695706e0922", :page 5, :position {:bounding {:x1 0, :y1 112, :x2 836.7998046875, :y2 342.34375, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 959.9999999999999, :height 1080} {:x1 0, :y1 128, :x2 0, :y2 144, :width 959.9999999999999, :height 1080} {:x1 0, :y1 144, :x2 0, :y2 160, :width 959.9999999999999, :height 1080} {:x1 651.4757690429688, :y1 258.625, :x2 836.0513305664062, :y2 277.625, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 280.171875, :x2 836.7750244140625, :y2 299.171875, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 301.8125, :x2 836.7998046875, :y2 320.8125, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 323.34375, :x2 319.7499084472656, :y2 342.34375, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text " Following this contract— typically called machine language specification—it is not difficult to write a program that, for each symbolic command, carries out the following tasks (not necessarily in that order):"}, :properties {:color "yellow"}} {:id #uuid "63b0da31-31a8-4d55-babf-19b25d061047", :page 5, :position {:bounding {:x1 263.375, :y1 356.640625, :x2 650.14697265625, :y2 375.640625, :width 959.9999999999999, :height 1080}, :rects ({:x1 263.375, :y1 356.640625, :x2 650.14697265625, :y2 375.640625, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "Parse the symbolic command into its underlying fields."}, :properties {:color "red"}} {:id #uuid "63b0da34-0a7a-47a2-b17b-8c574f53d4d9", :page 5, :position {:bounding {:x1 248.39926147460938, :y1 381.953125, :x2 773.4267578125, :y2 402.1875, :width 959.9999999999999, :height 1080}, :rects ({:x1 248.39926147460938, :y1 381.953125, :x2 248.40530395507812, :y2 399.953125, :width 959.9999999999999, :height 1080} {:x1 263.375, :y1 383.1875, :x2 773.4267578125, :y2 402.1875, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "For each field, generate the corresponding bits in the machine language."}, :properties {:color "red"}} {:id #uuid "63b0da38-77bd-4e8e-a8d3-39228992c693", :page 5, :position {:bounding {:x1 0, :y1 208, :x2 836.6576538085938, :y2 450.28125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 208, :x2 0, :y2 224, :width 959.9999999999999, :height 1080} {:x1 263.375, :y1 409.75, :x2 836.6576538085938, :y2 428.75, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 431.28125, :x2 306.6462097167969, :y2 450.28125, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "Replace all symbolic references (if any) with numeric addresses of memory locations."}, :properties {:color "red"}} {:id #uuid "63b0da3c-1e73-4cfc-afdf-121f24f4531c", :page 5, :position {:bounding {:x1 248.39926147460938, :y1 456.703125, :x2 714.8709716796875, :y2 476.9375, :width 959.9999999999999, :height 1080}, :rects ({:x1 248.39926147460938, :y1 456.703125, :x2 248.40530395507812, :y2 474.703125, :width 959.9999999999999, :height 1080} {:x1 263.375, :y1 457.9375, :x2 714.8709716796875, :y2 476.9375, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "Assemble the binary codes into a complete machine instruction."}, :properties {:color "red"}} {:id #uuid "63b0dd23-e7c8-47c9-882d-f04046ce658b", :page 4, :position {:bounding {:x1 259.21875, :y1 490.25, :x2 379.8375244140625, :y2 509.25, :width 959.9999999999999, :height 1080}, :rects ({:x1 259.21875, :y1 490.25, :x2 379.8375244140625, :y2 509.25, :width 959.9999999999999, :height 1080}), :page 4}, :content {:text "Three comment"}, :properties {:color "yellow"}} {:id #uuid "63b0de18-5379-45f2-ad5d-6b2023e77427", :page 5, :position {:bounding {:x1 119.46875, :y1 646.84375, :x2 552.2509155273438, :y2 666.84375, :width 959.9999999999999, :height 1080}, :rects ({:x1 119.46875, :y1 646.84375, :x2 144.3400421142578, :y2 666.84375, :width 959.9999999999999, :height 1080} {:x1 160.953125, :y1 646.84375, :x2 552.2509155273438, :y2 666.84375, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "6.2 Hack Assembly-to-Binary Translation Specification"}, :properties {:color "yellow"}} {:id #uuid "63b0de3d-44c9-498a-912b-2b7380ecaf1e", :page 5, :position {:bounding {:x1 239.09375, :y1 798.28125, :x2 551.31298828125, :y2 817.28125, :width 959.9999999999999, :height 1080}, :rects ({:x1 239.09375, :y1 798.28125, :x2 274.6452331542969, :y2 817.28125, :width 959.9999999999999, :height 1080} {:x1 289.640625, :y1 798.28125, :x2 551.31298828125, :y2 817.28125, :width 959.9999999999999, :height 1080}), :page 5}, :content {:text "6.2.1 Syntax Conventions and File Formats"}, :properties {:color "yellow"}} {:id #uuid "63b0df96-75a7-4ff7-8a60-8a1958b98bdb", :page 6, :position {:bounding {:x1 242.59375, :y1 762.28125, :x2 373.9407043457031, :y2 781.28125, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 762.28125, :x2 278.2389831542969, :y2 781.28125, :width 959.9999999999999, :height 1080} {:x1 293.234375, :y1 762.28125, :x2 373.9407043457031, :y2 781.28125, :width 959.9999999999999, :height 1080}), :page 6}, :content {:text "6.2.2 Instructions"}, :properties {:color "yellow"}} {:id #uuid "63b0dfbb-b212-49a4-b4a7-6a521d1558cd", :page 7, :position {:bounding {:x1 211, :y1 93, :x2 875, :y2 921, :width 959.9999999999999, :height 1080}, :rects (), :page 7}, :content {:text "[:span]", :image 1672535994158}, :properties {:color "red"}} {:id #uuid "63b0dfc6-5369-432a-9bbc-f25508ae0494", :page 8, :position {:bounding {:x1 212, :y1 104, :x2 667, :y2 320, :width 959.9999999999999, :height 1080}, :rects (), :page 8}, :content {:text "[:span]", :image 1672536005063}, :properties {:color "red"}} {:id #uuid "63b0dfe0-4e56-4449-99ee-3021fba900d1", :page 8, :position {:bounding {:x1 242.59375, :y1 331.703125, :x2 351.6303405761719, :y2 350.703125, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 331.703125, :x2 278.2389831542969, :y2 350.703125, :width 959.9999999999999, :height 1080} {:x1 293.234375, :y1 331.703125, :x2 351.6303405761719, :y2 350.703125, :width 959.9999999999999, :height 1080}), :page 8}, :content {:text "6.2.3 Symbols"}, :properties {:color "yellow"}} {:id #uuid "63b0e01f-e4d6-4d8c-8b58-42400d935d64", :page 8, :position {:bounding {:x1 0, :y1 176, :x2 840.331787109375, :y2 437.0625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 959.9999999999999, :height 1080} {:x1 468.671875, :y1 396.421875, :x2 840.331787109375, :y2 415.421875, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 418.0625, :x2 298.3730773925781, :y2 437.0625, :width 959.9999999999999, :height 1080}), :page 8}, :content {:text "Symbols in assembly programs arise from three sources."}, :properties {:color "red"}} {:id #uuid "63b0e026-4dbc-4ded-a930-3d2fcd003230", :page 8, :position {:bounding {:x1 242.59375, :y1 461.25, :x2 382.4873046875, :y2 480.25, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 461.25, :x2 382.4873046875, :y2 480.25, :width 959.9999999999999, :height 1080}), :page 8}, :content {:text "Predefined Symbols "}, :properties {:color "yellow"}} {:id #uuid "63b0e06d-dc07-4172-8ac3-ef1aae4cc25d", :page 8, :position {:bounding {:x1 225, :y1 510, :x2 573, :y2 720, :width 959.9999999999999, :height 1080}, :rects (), :page 8}, :content {:text "[:span]", :image 1672536171815}, :properties {:color "yellow"}} {:id #uuid "63b0e075-6f17-42da-84a4-ab42099c3aa9", :page 8, :position {:bounding {:x1 242.59375, :y1 814.921875, :x2 347.1573486328125, :y2 833.921875, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 814.921875, :x2 347.1573486328125, :y2 833.921875, :width 959.9999999999999, :height 1080}), :page 8}, :content {:text "Label Symbols "}, :properties {:color "yellow"}} {:id #uuid "63b0e091-0814-4dd0-a662-7601a4adb5ae", :page 9, :position {:bounding {:x1 239.09375, :y1 107.578125, :x2 365.9743347167969, :y2 126.578125, :width 959.9999999999999, :height 1080}, :rects ({:x1 239.09375, :y1 107.578125, :x2 365.9743347167969, :y2 126.578125, :width 959.9999999999999, :height 1080}), :page 9}, :content {:text "Variable Symbols"}, :properties {:color "yellow"}} {:id #uuid "63b0e09a-06fa-412e-960f-5c970cd0d832", :page 8, :position {:bounding {:x1 0, :y1 448, :x2 840.3727416992188, :y2 898.625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 959.9999999999999, :height 1080} {:x1 0, :y1 464, :x2 0, :y2 480, :width 959.9999999999999, :height 1080} {:x1 758.1243896484375, :y1 836.453125, :x2 838.4581909179688, :y2 855.453125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 858.078125, :x2 840.3727416992188, :y2 877.078125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 879.625, :x2 450.51751708984375, :y2 898.625, :width 959.9999999999999, :height 1080}), :page 8}, :content {:text "A label can be defined only once and can be used anywhere in the assembly program, even before the line in which it is defined."}, :properties {:color "red"}} {:id #uuid "63b0e0bf-d033-44ad-883c-46ad49f4e800", :page 9, :position {:bounding {:x1 239.109375, :y1 215.46875, :x2 350.98419189453125, :y2 234.46875, :width 959.9999999999999, :height 1080}, :rects ({:x1 239.109375, :y1 215.46875, :x2 274.6452331542969, :y2 234.46875, :width 959.9999999999999, :height 1080} {:x1 289.640625, :y1 215.46875, :x2 350.98419189453125, :y2 234.46875, :width 959.9999999999999, :height 1080}), :page 9}, :content {:text "6.2.4 Example"}, :properties {:color "red"}} {:id #uuid "63b0e165-7d9b-43c8-901f-efed7391e334", :page 9, :position {:bounding {:x1 93, :y1 324, :x2 861, :y2 916, :width 959.9999999999999, :height 1080}, :rects (), :page 9}, :content {:text "[:span]", :image 1672536419728}, :properties {:color "yellow"}} {:id #uuid "63b0e57f-feb1-41b9-bebf-5153cc557a74", :page 10, :position {:bounding {:x1 123.0625, :y1 122.421875, :x2 282.70147705078125, :y2 142.421875, :width 959.9999999999999, :height 1080}, :rects ({:x1 123.0625, :y1 122.421875, :x2 150.8125, :y2 142.421875, :width 959.9999999999999, :height 1080} {:x1 164.53125, :y1 122.421875, :x2 282.70147705078125, :y2 142.421875, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text "6.3 Implementation"}, :properties {:color "yellow"}} {:id #uuid "63b0e5f6-5582-47ff-b7c1-3ea639614ac2", :page 10, :position {:bounding {:x1 259.21875, :y1 405.09375, :x2 720.6531372070312, :y2 424.09375, :width 959.9999999999999, :height 1080}, :rects ({:x1 259.21875, :y1 405.09375, :x2 720.6531372070312, :y2 424.09375, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text "We propose an assembler implementation based on four modules:"}, :properties {:color "yellow"}} {:id #uuid "63b0e5fd-783a-459f-8b24-0a7f5cd82706", :page 10, :position {:bounding {:x1 0, :y1 176, :x2 840.3734130859375, :y2 445.625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 959.9999999999999, :height 1080} {:x1 724.9918212890625, :y1 405.09375, :x2 840.3734130859375, :y2 424.09375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 426.625, :x2 393.4737854003906, :y2 445.625, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text "a Parser module that parses the input"}, :properties {:color "red"}} {:id #uuid "63b0e605-3107-4c0a-af1e-2a03cd18a0fa", :page 10, :position {:bounding {:x1 0, :y1 192, :x2 840.3362426757812, :y2 467.265625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 959.9999999999999, :height 1080} {:x1 402.7077941894531, :y1 426.625, :x2 840.3362426757812, :y2 445.625, :width 959.9999999999999, :height 1080} {:x1 242.625, :y1 448.265625, :x2 379.0744934082031, :y2 467.265625, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text "a Code module that provides the binary codes of all the assembly mnemonics"}, :properties {:color "yellow"}} {:id #uuid "63b0e616-f656-403a-8f5d-37706d761a44", :page 10, :position {:bounding {:x1 383.48822021484375, :y1 448.265625, :x2 715.2489624023438, :y2 467.265625, :width 959.9999999999999, :height 1080}, :rects ({:x1 383.48822021484375, :y1 448.265625, :x2 715.2489624023438, :y2 467.265625, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text " a SymbolTable module that handles symbols"}, :properties {:color "red"}} {:id #uuid "63b0e620-da1e-4459-93b7-96cf0862a2b4", :page 10, :position {:bounding {:x1 0, :y1 208, :x2 840.2755126953125, :y2 488.796875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 208, :x2 0, :y2 224, :width 959.9999999999999, :height 1080} {:x1 752.0187377929688, :y1 448.265625, :x2 840.2755126953125, :y2 467.265625, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 469.796875, :x2 567.2378540039062, :y2 488.796875, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text " a main program that drives the entire translation process"}, :properties {:color "yellow"}} {:id #uuid "63b0e6d7-2090-455a-9f30-0926d294d5f9", :page 10, :position {:bounding {:x1 242.53125, :y1 815.109375, :x2 428.3758239746094, :y2 834.109375, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.53125, :y1 815.109375, :x2 278.1921081542969, :y2 834.109375, :width 959.9999999999999, :height 1080} {:x1 293.1875, :y1 815.109375, :x2 428.3758239746094, :y2 834.109375, :width 959.9999999999999, :height 1080}), :page 10}, :content {:text "6.3.1 The Parser Module"}, :properties {:color "yellow"}} {:id #uuid "63b0e71a-4dc8-479e-a453-d4affe49c4e5", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 836.8152465820312, :y2 169.75, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 959.9999999999999, :height 1080} {:x1 0, :y1 16, :x2 0, :y2 32, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 107.578125, :x2 836.80615234375, :y2 126.578125, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 129.109375, :x2 836.8152465820312, :y2 148.109375, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 150.75, :x2 756.0386962890625, :y2 169.75, :width 959.9999999999999, :height 1080}), :page 11}, :content {:text "Parser: Encapsulates access to the input code. Reads an assembly language command, parses it, and provides convenient access to the command’s components(fields and symbols). In addition, removes all white space and comments."}, :properties {:color "red"}} {:id #uuid "63b0e7ac-4445-4ca2-a6c7-31a23e325e78", :page 11, :position {:bounding {:x1 229, :y1 170, :x2 848, :y2 871, :width 959.9999999999999, :height 1080}, :rects (), :page 11}, :content {:text "[:span]", :image 1672538032996}, :properties {:color "yellow"}} {:id #uuid "63b0e808-dbd3-47cd-8924-59683fae8a13", :page 12, :position {:bounding {:x1 223, :y1 102, :x2 854, :y2 386, :width 959.9999999999999, :height 1080}, :rects (), :page 12}, :content {:text "[:span]", :image 1672538119042}, :properties {:color "yellow"}} {:id #uuid "63b0e812-89fc-413c-beda-e653fbfcdbbd", :page 12, :position {:bounding {:x1 242.578125, :y1 401.90625, :x2 418.85333251953125, :y2 420.90625, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.578125, :y1 401.90625, :x2 278.2389831542969, :y2 420.90625, :width 959.9999999999999, :height 1080} {:x1 293.234375, :y1 401.90625, :x2 418.85333251953125, :y2 420.90625, :width 959.9999999999999, :height 1080}), :page 12}, :content {:text "6.3.2 The Code Module"}, :properties {:color "yellow"}} {:id #uuid "63b0e84a-dda9-4c31-9d96-7bd720e374f7", :page 12, :position {:bounding {:x1 242.578125, :y1 445.09375, :x2 756.59130859375, :y2 464.09375, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.578125, :y1 445.09375, :x2 756.59130859375, :y2 464.09375, :width 959.9999999999999, :height 1080}), :page 12}, :content {:text "Code: Translates Hack assembly language mnemonics into binary codes."}, :properties {:color "yellow"}} {:id #uuid "63b0e866-301a-4332-a438-e1941a4007a9", :page 12, :position {:bounding {:x1 235, :y1 465, :x2 849, :y2 663, :width 959.9999999999999, :height 1080}, :rects (), :page 12}, :content {:text "[:span]", :image 1672538220996}, :properties {:color "yellow"}} {:id #uuid "63b0e889-3910-4743-b23a-0b0c22e18bcc", :page 12, :position {:bounding {:x1 242.59375, :y1 680.921875, :x2 585.3787841796875, :y2 699.921875, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 680.921875, :x2 278.2389831542969, :y2 699.921875, :width 959.9999999999999, :height 1080} {:x1 293.234375, :y1 680.921875, :x2 585.3787841796875, :y2 699.921875, :width 959.9999999999999, :height 1080}), :page 12}, :content {:text "6.3.3 Assembler for Programs with No Symbols"}, :properties {:color "yellow"}} {:id #uuid "63b0e92f-439c-4c15-979f-2a96f806a87a", :page 13, :position {:bounding {:x1 239.109375, :y1 301.84375, :x2 471.04083251953125, :y2 320.84375, :width 959.9999999999999, :height 1080}, :rects ({:x1 239.109375, :y1 301.84375, :x2 274.6452331542969, :y2 320.84375, :width 959.9999999999999, :height 1080} {:x1 289.640625, :y1 301.84375, :x2 471.04083251953125, :y2 320.84375, :width 959.9999999999999, :height 1080}), :page 13}, :content {:text "6.3.4 The SymbolTable Module"}, :properties {:color "yellow"}} {:id #uuid "63b0e97f-7257-4a35-af34-e676c8dc1426", :page 13, :position {:bounding {:x1 0, :y1 192, :x2 834.9484252929688, :y2 450.28125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 959.9999999999999, :height 1080} {:x1 765.904052734375, :y1 409.75, :x2 834.9484252929688, :y2 428.75, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 431.28125, :x2 781.807861328125, :y2 450.28125, :width 959.9999999999999, :height 1080}), :page 13}, :content {:text " A natural data structure for representing such a relationship is the classical hash table. "}, :properties {:color "yellow"}} {:id #uuid "63b0e9b8-282f-4f75-85d6-8c17d2db8d7c", :page 13, :position {:bounding {:x1 0, :y1 272, :x2 836.7322387695312, :y2 569.875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 529.25, :x2 336.38128662109375, :y2 548.25, :width 959.9999999999999, :height 1080} {:x1 347.484375, :y1 529.25, :x2 412.6664123535156, :y2 548.25, :width 959.9999999999999, :height 1080} {:x1 423.640625, :y1 529.25, :x2 603.4459838867188, :y2 548.25, :width 959.9999999999999, :height 1080} {:x1 614.40625, :y1 529.25, :x2 730.2568359375, :y2 548.25, :width 959.9999999999999, :height 1080} {:x1 741.203125, :y1 529.25, :x2 836.7322387695312, :y2 548.25, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 550.875, :x2 309.2808837890625, :y2 569.875, :width 959.9999999999999, :height 1080}), :page 13}, :content {:text "SymbolTable: Keeps a correspondence between symbolic labels and numeric addresses."}, :properties {:color "red"}} {:id #uuid "63b0e9e3-da6b-4ee3-ad98-6055fe995c7c", :page 13, :position {:bounding {:x1 233, :y1 572, :x2 846, :y2 818, :width 959.9999999999999, :height 1080}, :rects (), :page 13}, :content {:text "[:span]", :image 1672538593344}, :properties {:color "yellow"}} {:id #uuid "63b0eab6-e699-4aee-a67f-0b699ab5e889", :page 13, :position {:bounding {:x1 239.109375, :y1 838.15625, :x2 555.6558837890625, :y2 857.15625, :width 959.9999999999999, :height 1080}, :rects ({:x1 239.109375, :y1 838.15625, :x2 274.6608581542969, :y2 857.15625, :width 959.9999999999999, :height 1080} {:x1 289.65625, :y1 838.15625, :x2 555.6558837890625, :y2 857.15625, :width 959.9999999999999, :height 1080}), :page 13}, :content {:text "6.3.5 Assembler for Programs with Symbols"}, :properties {:color "yellow"}} {:id #uuid "63b0eafb-4791-49d3-916c-f575bbbea0b6", :page 13, :position {:bounding {:x1 0, :y1 496, :x2 836.7508544921875, :y2 921.875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 496, :x2 0, :y2 512, :width 959.9999999999999, :height 1080} {:x1 239.109375, :y1 881.34375, :x2 836.7508544921875, :y2 900.34375, :width 959.9999999999999, :height 1080} {:x1 239.125, :y1 902.875, :x2 524.0718994140625, :y2 921.875, :width 959.9999999999999, :height 1080}), :page 13}, :content {:text "Assembly programs are allowed to use symbolic labels (destinations of goto commands) before the symbols are defined."}, :properties {:color "red"}} {:id #uuid "63b0eb09-191d-44a7-b4bc-5a406af71c2a", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 840.374267578125, :y2 169.75, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 959.9999999999999, :height 1080} {:x1 0, :y1 16, :x2 0, :y2 32, :width 959.9999999999999, :height 1080} {:x1 690.5779418945312, :y1 107.578125, :x2 838.3974609375, :y2 126.578125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 129.109375, :x2 840.374267578125, :y2 148.109375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 150.75, :x2 334.1273193359375, :y2 169.75, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text ". A common solution to this complication is to write a two-pass assembler that reads the code twice, from start to end. "}, :properties {:color "red"}} {:id #uuid "63b0eb14-e9be-4b7e-aa13-693fe573a89f", :page 14, :position {:bounding {:x1 0, :y1 32, :x2 840.2440185546875, :y2 191.28125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 32, :x2 0, :y2 48, :width 959.9999999999999, :height 1080} {:x1 338.6853942871094, :y1 150.75, :x2 840.2440185546875, :y2 169.75, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 172.28125, :x2 304.463134765625, :y2 191.28125, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "n the first pass, the assembler builds the symbol table and generates no code."}, :properties {:color "blue"}} {:id #uuid "63b0eb7f-56a7-4a07-9377-0f8cfb3b3351", :page 14, :position {:bounding {:x1 0, :y1 48, :x2 840.4571228027344, :y2 212.921875, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 959.9999999999999, :height 1080} {:x1 308.9268493652344, :y1 172.28125, :x2 840.4571228027344, :y2 191.28125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 193.921875, :x2 773.7335205078125, :y2 212.921875, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "In the second pass, all the label symbols encountered in the program have already been bound to memory locations and recorded in the symbol table. "}, :properties {:color "red"}} {:id #uuid "63b0ebd4-f61d-4ecd-84c0-6289e627741a", :page 14, :position {:bounding {:x1 0, :y1 128, :x2 840.06787109375, :y2 320.8125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 128, :x2 0, :y2 144, :width 959.9999999999999, :height 1080} {:x1 457.843505859375, :y1 280.171875, :x2 840.06787109375, :y2 299.171875, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 301.8125, :x2 383.78216552734375, :y2 320.8125, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "The symbol table should contain and handle all these symbols, as follows."}, :properties {:color "yellow"}} {:id #uuid "63b0ebeb-5c50-48eb-92f0-b1028bbd20f3", :page 14, :position {:bounding {:x1 242.59375, :y1 345, :x2 331.02557373046875, :y2 364, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 345, :x2 331.02557373046875, :y2 364, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "Initialization"}, :properties {:color "yellow"}} {:id #uuid "63b0ebfd-6ce1-4520-a036-4f5e4077aec6", :page 14, :position {:bounding {:x1 0, :y1 160, :x2 840.3289184570312, :y2 385.53125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 959.9999999999999, :height 1080} {:x1 347.65625, :y1 345, :x2 840.3289184570312, :y2 364, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 366.53125, :x2 452.2568054199219, :y2 385.53125, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "Initialize the symbol table with all the predefined symbols and their pre-allocated RAM addresses"}, :properties {:color "red"}} {:id #uuid "63b0ec12-a2af-48ce-95e8-ae2732e95c5b", :page 14, :position {:bounding {:x1 242.59375, :y1 409.71875, :x2 314.41156005859375, :y2 428.71875, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 409.71875, :x2 314.41156005859375, :y2 428.71875, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "First Pass"}, :properties {:color "yellow"}} {:id #uuid "63b0ec5f-2f80-4717-bb37-08f5f82418b6", :page 14, :position {:bounding {:x1 285.3526611328125, :y1 604, :x2 683.1013793945312, :y2 623, :width 959.9999999999999, :height 1080}, :rects ({:x1 285.3526611328125, :y1 604, :x2 683.1013793945312, :y2 623, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "The program’s variables are handled in the second pass."}, :properties {:color "yellow"}} {:id #uuid "63b0ec74-7aa4-4e26-906e-499b168d68c8", :page 14, :position {:bounding {:x1 0, :y1 224, :x2 840.194580078125, :y2 493.4375, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 452.890625, :x2 840.194580078125, :y2 471.890625, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 474.4375, :x2 425.7826843261719, :y2 493.4375, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "keep a running number recording the ROM address into which the current command will be eventually loaded. "}, :properties {:color "red"}} {:id #uuid "63b0ec8a-d936-451b-a930-0687d45def97", :page 14, :position {:bounding {:x1 0, :y1 272, :x2 840.4385986328125, :y2 579.828125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 959.9999999999999, :height 1080} {:x1 0, :y1 288, :x2 0, :y2 304, :width 959.9999999999999, :height 1080} {:x1 580.6871337890625, :y1 517.609375, :x2 840.4385986328125, :y2 536.609375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 539.28125, :x2 840.2719116210938, :y2 558.28125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 560.828125, :x2 721.169189453125, :y2 579.828125, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "Each time a pseudocommand (Xxx) is encountered, add a new entry to the symbol table, associating Xxx with the ROM address that will eventually store the next command in the program. "}, :properties {:color "yellow"}} {:id #uuid "63b0eca0-e145-48f9-b18b-2e42d0d8447f", :page 14, :position {:bounding {:x1 0, :y1 304, :x2 840.3926391601562, :y2 623, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 959.9999999999999, :height 1080} {:x1 0, :y1 320, :x2 0, :y2 336, :width 959.9999999999999, :height 1080} {:x1 721.154296875, :y1 560.828125, :x2 839.9891357421875, :y2 579.828125, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 582.46875, :x2 840.3926391601562, :y2 601.46875, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 604, :x2 285.3675537109375, :y2 623, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "This pass results in entering all the program’s labels along with their ROM addresses into the symbol table. "}, :properties {:color "red"}} {:id #uuid "63b0eca6-ab18-4784-a4c9-3a91eb049b38", :page 14, :position {:bounding {:x1 242.59375, :y1 647.1875, :x2 331.1089782714844, :y2 666.1875, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 647.1875, :x2 331.1089782714844, :y2 666.1875, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "Second Pass "}, :properties {:color "yellow"}} {:id #uuid "63b0ecd5-3d33-437e-a3d3-c6bdcf2d5c49", :page 14, :position {:bounding {:x1 0, :y1 352, :x2 840.376953125, :y2 709.375, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 959.9999999999999, :height 1080} {:x1 0, :y1 368, :x2 0, :y2 384, :width 959.9999999999999, :height 1080} {:x1 803.1954956054688, :y1 647.1875, :x2 840.3328247070312, :y2 666.1875, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 668.71875, :x2 840.376953125, :y2 689.71875, :width 959.9999999999999, :height 1080} {:x1 725.515625, :y1 672.4375, :x2 755.953125, :y2 687.375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 690.375, :x2 627.6846923828125, :y2 709.375, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "Each time a symbolic A-instruction is encountered, namely, @Xxx where Xxx is a symbol and not a number, look up Xxx in the symbol table."}, :properties {:color "yellow"}} {:id #uuid "63b0ecde-a756-438f-a690-7e7bcf94c50c", :page 14, :position {:bounding {:x1 0, :y1 384, :x2 840.380126953125, :y2 730.90625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 959.9999999999999, :height 1080} {:x1 627.6685791015625, :y1 690.375, :x2 840.380126953125, :y2 709.375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 711.90625, :x2 840.3302612304688, :y2 730.90625, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text " If the symbol is found in the table, replace it with its numeric meaning and complete the command’s translation."}, :properties {:color "red"}} {:id #uuid "63b0ece7-8f22-470b-a505-00b560d4c9d4", :page 14, :position {:bounding {:x1 242.59375, :y1 733.546875, :x2 812.664306640625, :y2 752.546875, :width 959.9999999999999, :height 1080}, :rects ({:x1 242.59375, :y1 733.546875, :x2 812.664306640625, :y2 752.546875, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "If the symbol is not found in the table, then it must represent a new variable"}, :properties {:color "yellow"}} {:id #uuid "63b0ecfb-b365-4007-8e77-b9bcdae482f3", :page 14, :position {:bounding {:x1 0, :y1 416, :x2 840.3483276367188, :y2 795.734375, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 959.9999999999999, :height 1080} {:x1 0, :y1 432, :x2 0, :y2 448, :width 959.9999999999999, :height 1080} {:x1 821.868896484375, :y1 733.546875, :x2 840.0035400390625, :y2 752.546875, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 755.09375, :x2 840.3483276367188, :y2 774.09375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 776.734375, :x2 676.2076416015625, :y2 795.734375, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "To handle it, add the pair (Xxx, n) to the symbol table, where n is the next available RAM address, and complete the command’s translation."}, :properties {:color "red"}} {:id #uuid "63b0ed16-9860-4b60-8120-f478435277c0", :page 14, :position {:bounding {:x1 0, :y1 448, :x2 840.3702392578125, :y2 838.90625, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 959.9999999999999, :height 1080} {:x1 0, :y1 464, :x2 0, :y2 480, :width 959.9999999999999, :height 1080} {:x1 686.59375, :y1 776.734375, :x2 840.274658203125, :y2 795.734375, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 798.265625, :x2 840.3702392578125, :y2 817.265625, :width 959.9999999999999, :height 1080} {:x1 242.59375, :y1 819.90625, :x2 502.200439453125, :y2 838.90625, :width 959.9999999999999, :height 1080}), :page 14}, :content {:text "The allocated RAM addresses are consecutive numbers, starting at address 16 ( just after the addresses allocated to the predefined symbols)."}, :properties {:color "green"}} {:id #uuid "63b0ef65-a327-4018-952e-45ce5941b28e", :page 15, :position {:bounding {:x1 119.46875, :y1 123, :x2 246.67474365234375, :y2 143, :width 959.9999999999999, :height 1080}, :rects ({:x1 119.46875, :y1 123, :x2 147.234375, :y2 143, :width 959.9999999999999, :height 1080} {:x1 160.953125, :y1 123, :x2 246.67474365234375, :y2 143, :width 959.9999999999999, :height 1080}), :page 15}, :content {:text "6.4 Perspective"}, :properties {:color "yellow"}} {:id #uuid "63b0effb-eb71-4b93-9201-103d12edd35a", :page 15, :position {:bounding {:x1 239.09375, :y1 468.6875, :x2 803.5933837890625, :y2 487.6875, :width 959.9999999999999, :height 1080}, :rects ({:x1 239.09375, :y1 468.6875, :x2 803.5933837890625, :y2 487.6875, :width 959.9999999999999, :height 1080}), :page 15}, :content {:text "First, assembly programs are rarely written by humans, but rather by compilers."}, :properties {:color "yellow"}} {:id #uuid "63b0f02a-8e9f-4a14-9577-ab09835cd1ae", :page 15, :position {:bounding {:x1 255.640625, :y1 447.046875, :x2 836.7491455078125, :y2 466.046875, :width 959.9999999999999, :height 1080}, :rects ({:x1 255.640625, :y1 447.046875, :x2 836.7491455078125, :y2 466.046875, :width 959.9999999999999, :height 1080}), :page 15}, :content {:text "We note in closing that stand-alone assemblers are rarely used in practice."}, :properties {:color "red"}} {:id #uuid "63b0f66c-12e0-4784-b857-f3b03ee24e7f", :page 15, :position {:bounding {:x1 0, :y1 288, :x2 836.763916015625, :y2 574.03125, :width 959.9999999999999, :height 1080}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 959.9999999999999, :height 1080} {:x1 282.87518310546875, :y1 533.390625, :x2 836.763916015625, :y2 552.390625, :width 959.9999999999999, :height 1080} {:x1 239.09375, :y1 555.03125, :x2 757.40478515625, :y2 574.03125, :width 959.9999999999999, :height 1080}), :page 15}, :content {:text "On the other hand, many high-level language compilers allow programmers to embed segments of assembly language code within high-level programs."}, :properties {:color "red"}} {:id #uuid "63b0f6f6-9f96-48ae-92f5-2dfdf9c04828", :page 15, :position {:bounding {:x1 119.46875, :y1 667.625, :x2 215.88623046875, :y2 687.625, :width 959.9999999999999, :height 1080}, :rects ({:x1 119.46875, :y1 667.625, :x2 144.3402099609375, :y2 687.625, :width 959.9999999999999, :height 1080} {:x1 160.953125, :y1 667.625, :x2 215.88623046875, :y2 687.625, :width 959.9999999999999, :height 1080}), :page 15}, :content {:text "6.5 Project"}, :properties {:color "yellow"}}], :extra {:page 16}}