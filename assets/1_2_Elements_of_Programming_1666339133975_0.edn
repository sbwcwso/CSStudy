{:highlights [{:id #uuid "63525180-70dd-49c5-85cf-f358bda107b5", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 862.58251953125, :y2 409.78125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 360.265625, :x2 862.58251953125, :y2 382.265625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 387.78125, :x2 757.647216796875, :y2 409.78125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "When we describe a language, we should pay particular attention to the means that the language provides for combining simple ideas to form more complex ideas."}, :properties {:color "yellow"}} {:id #uuid "635251c9-d818-49c4-a6b4-1e0709f372e0", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 814.6058349609375, :y2 437.296875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 763.0445556640625, :y1 387.78125, :x2 814.6058349609375, :y2 409.78125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 415.296875, :x2 514.6655883789062, :y2 437.296875, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Every powerful language has three such mechanisms:"}, :properties {:color "blue"}} {:id #uuid "635251e0-2c5f-4d9a-beb5-db19664784fc", :page 1, :position {:bounding {:x1 148.34375, :y1 464.078125, :x2 534.3389282226562, :y2 486.078125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 464.078125, :x2 534.3389282226562, :y2 486.078125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "primitive expressions and statements"}, :properties {:color "blue"}} {:id #uuid "635251f5-cc3d-4554-b5a4-80244d06c4e4", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 877.4835205078125, :y2 513.578125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 545.4356689453125, :y1 464.078125, :x2 877.4835205078125, :y2 486.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 491.578125, :x2 442.8010559082031, :y2 513.578125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "which represent the simplest building blocks that the language provides"}, :properties {:color "yellow"}} {:id #uuid "63525209-001c-4550-9480-f4793d40fc43", :page 1, :position {:bounding {:x1 148.34375, :y1 520.34375, :x2 377.78216552734375, :y2 542.34375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 520.34375, :x2 377.78216552734375, :y2 542.34375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "means of combination"}, :properties {:color "blue"}} {:id #uuid "63525219-4a2a-4241-9538-c786ac3d6665", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 849.5797729492188, :y2 569.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 388.7696838378906, :y1 520.34375, :x2 849.5797729492188, :y2 542.34375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 547.859375, :x2 189.38796997070312, :y2 569.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "by which compound elements are built from simpler ones"}, :properties {:color "yellow"}} {:id #uuid "63525237-b901-4f81-ad27-13d9ce2de302", :page 1, :position {:bounding {:x1 148.34375, :y1 575.375, :x2 364.3992614746094, :y2 597.375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 575.375, :x2 364.3992614746094, :y2 597.375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "means of abstraction"}, :properties {:color "blue"}} {:id #uuid "6352524c-f9dc-4e13-8322-6ea9f5a36f80", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 802.6973876953125, :y2 626.140625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 375.3973083496094, :y1 575.375, :x2 802.6973876953125, :y2 597.375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 604.140625, :x2 333.4610290527344, :y2 626.140625, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "by which compound elements can be named and manipulated as units"}, :properties {:color "yellow"}} {:id #uuid "6352526f-ebdc-4f76-8bee-49e27048a30c", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 837.5574951171875, :y2 729.9375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 595.1228637695312, :y1 680.421875, :x2 837.5574951171875, :y2 702.421875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 707.9375, :x2 729.440673828125, :y2 729.9375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "data is stuff that we want to manipulate, and functions describe the rules for manipulating the data. "}, :properties {:color "blue"}} {:id #uuid "635252a3-f84d-4b35-b057-c36a01489a7f", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 301.046142578125, :y2 867.46875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 842.46875, :x2 301.046142578125, :y2 867.46875, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "1.2.1 Expressions"}, :properties {:color "yellow"}} {:id #uuid "63525308-1bc6-439f-8bc1-f42ae503659f", :page 2, :position {:bounding {:x1 419.453125, :y1 72.625, :x2 542.7584838867188, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 419.453125, :y1 72.625, :x2 542.7584838867188, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text " infix notation"}, :properties {:color "blue"}} {:id #uuid "63525316-543f-41d4-8067-02dd568ca998", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 888.09375, :y2 123.390625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 778.96875, :y1 69.078125, :x2 790.078125, :y2 98.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 801.1875, :y1 69.078125, :x2 808.140625, :y2 98.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 823.40625, :y1 69.078125, :x2 832.75, :y2 98.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 869.421875, :y1 69.078125, :x2 877.265625, :y2 98.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 553.95166015625, :y1 72.625, :x2 780.5755004882812, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 790.96875, :y1 72.625, :x2 802.7916870117188, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 813.1875, :y1 72.625, :x2 825.0104370117188, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 835.40625, :y1 72.625, :x2 871.0286254882812, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 881.421875, :y1 72.625, :x2 888.09375, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 101.390625, :x2 491.918212890625, :y2 123.390625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "where the operator (e.g., +, -, *, or /) appears in between the operands (numbers)."}, :properties {:color "yellow"}} {:id #uuid "63527bde-8246-47b1-80bf-1bc8b80182c6", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 348.5902099609375, :y2 260.921875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 235.921875, :x2 348.5902099609375, :y2 260.921875, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "1.2.2 Call Expressions"}, :properties {:color "yellow"}} {:id #uuid "63527bfe-8ebb-44b2-92ab-71e951a8bf19", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 858.2357177734375, :y2 334.75, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 283.984375, :x2 858.2357177734375, :y2 305.984375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 312.75, :x2 350.3388366699219, :y2 334.75, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "The most important kind of compound expression is a call expression, which applies a function to some arguments."}, :properties {:color "blue"}} {:id #uuid "63527c6e-5d0c-4662-856c-55eff5bfe307", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 860.1765747070312, :y2 1032.59375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 981.828125, :x2 860.1765747070312, :y2 1003.828125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1010.59375, :x2 223.83383178710938, :y2 1032.59375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Function notation has three principal advantages over the mathematical convention of infix notation."}, :properties {:color "yellow"}} {:id #uuid "63527c7c-e2ec-4539-a4ca-715043f0df2e", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 754.406005859375, :y2 1032.59375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 223.8165283203125, :y1 1010.59375, :x2 754.406005859375, :y2 1032.59375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text " First, functions may take an arbitrary number of arguments"}, :properties {:color "blue"}} {:id #uuid "63527cac-c5e8-4f75-a839-2c96884e8ca0", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 877.6923828125, :y2 1221.4375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1170.671875, :x2 877.6923828125, :y2 1192.671875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1199.4375, :x2 555.5254516601562, :y2 1221.4375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Second, function notation extends in a straightforward way to nested expressions, where the elements are themselves compound expressions"}, :properties {:color "blue"}} {:id #uuid "63527d1e-9e12-4055-85a3-589360fa3795", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 893.19677734375, :y2 270.96875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 385.0198974609375, :y1 193.9375, :x2 893.19677734375, :y2 215.9375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 221.453125, :x2 861.822021484375, :y2 243.453125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 248.96875, :x2 649.5478515625, :y2 270.96875, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "An important role for you as a programmer is to structure expressions so that they remain interpretable by yourself, your programming partners, and other people who may read your expressions in the future."}, :properties {:color "blue"}} {:id #uuid "63527d90-9870-4855-ae85-63453dc82fe3", :page 3, :position {:bounding {:x1 98.328125, :y1 297.734375, :x2 603.387451171875, :y2 319.734375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 297.734375, :x2 603.387451171875, :y2 319.734375, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "Third, mathematical notation has a great variety of forms"}, :properties {:color "blue"}} {:id #uuid "63527d9a-61ee-40bc-86b9-b5a13607ccb7", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 691.2962646484375, :y2 376.015625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 330.74566650390625, :y1 354.015625, :x2 691.2962646484375, :y2 376.015625, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "Some of this notation is very hard to type"}, :properties {:color "blue"}} {:id #uuid "63527deb-12ab-4da1-9b76-72f323506a23", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 876.5518188476562, :y2 403.53125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 704.0195922851562, :y1 354.015625, :x2 876.5518188476562, :y2 376.015625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 381.53125, :x2 634.7501220703125, :y2 403.53125, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "However, all of this complexity can be unified via the notation of call expressions"}, :properties {:color "yellow"}} {:id #uuid "63527dfe-e5d2-4575-a1ed-25171ca10b69", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 467.3180236816406, :y2 513.53125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 488.53125, :x2 467.3180236816406, :y2 513.53125, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "1.2.3 Importing Library Functions"}, :properties {:color "blue"}} {:id #uuid "63527e3e-845d-4284-bb27-115961bce942", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 878.2915649414062, :y2 838.453125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 169.59375, :y1 809.453125, :x2 270.140625, :y2 838.453125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 136.93080139160156, :y1 813, :x2 171.2005157470703, :y2 835, :width 991.5999333333333, :height 1403.1999666666666} {:x1 265.65625, :y1 814.453125, :x2 878.2915649414062, :y2 834.46875, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "the operator module provides access to functions corresponding to infix operators"}, :properties {:color "yellow"}} {:id #uuid "63527f34-8609-4e37-ac0c-75f6304fcfd9", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 471.1273498535156, :y2 203.390625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 178.390625, :x2 471.1273498535156, :y2 203.390625, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "1.2.4 Names and the Environment"}, :properties {:color "blue"}} {:id #uuid "63527f45-2985-4f2b-830d-896b56c11393", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 853.8745727539062, :y2 304.734375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 370.7896423339844, :y1 255.21875, :x2 853.8745727539062, :y2 277.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 282.734375, :x2 260.0324401855469, :y2 304.734375, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "If a value has been given a name, we say that the name binds to the value."}, :properties {:color "blue"}} {:id #uuid "63527f75-d945-4425-97c0-e065c58ec369", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 864.09716796875, :y2 702.125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 136.84375, :y1 673.125, :x2 155.26930236816406, :y2 702.125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 676.671875, :x2 138.4505157470703, :y2 698.671875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 153.671875, :y1 676.671875, :x2 864.09716796875, :y2 698.671875, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "The = symbol is called the assignment operator in Python (and many other languages)."}, :properties {:color "blue"}} {:id #uuid "63527fb0-8f8d-491e-a481-8147b7149a12", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 874.90771484375, :y2 756.203125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 705.4375, :x2 874.90771484375, :y2 727.4375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 734.203125, :x2 480.13909912109375, :y2 756.203125, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "Assignment is our simplest means of abstraction, for it allows us to use simple names to refer to the results of compound operations"}, :properties {:color "yellow"}} {:id #uuid "63527fe4-c508-4356-9f73-af8efb9a08f0", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 873.8101806640625, :y2 813.734375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 802.956298828125, :y1 734.203125, :x2 858.9488525390625, :y2 756.203125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 762.96875, :x2 873.8101806640625, :y2 784.96875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 791.734375, :x2 318.96551513671875, :y2 813.734375, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "In this way, complex programs are constructed by building, step by step, computational objects of increasing complexity."}, :properties {:color "blue"}} {:id #uuid "6352801f-7047-44be-b380-5d93dcabd621", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 857.3530883789062, :y2 917.53125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 839.25, :x2 836.0184936523438, :y2 861.25, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 866.765625, :x2 857.3530883789062, :y2 888.765625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 895.53125, :x2 702.6875, :y2 917.53125, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "The possibility of binding names to values and later retrieving those values by name means that the interpreter must maintain some sort of memory that keeps track of the names, values, and bindings. This memory is called an environment."}, :properties {:color "blue"}} {:id #uuid "63528097-b394-450d-bb85-5a0d57308125", :page 7, :position {:bounding {:x1 0, :y1 0, :x2 862.81201171875, :y2 1312.71875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 481.68115234375, :y1 1233.203125, :x2 862.81201171875, :y2 1255.203125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1263.21875, :x2 862.2081298828125, :y2 1285.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1290.71875, :x2 183.66270446777344, :y2 1312.71875, :width 991.5999333333333, :height 1403.1999666666666}), :page 7}, :content {:text "Environments provide the context in which evaluation takes place, which plays an important role in our understanding of program execution"}, :properties {:color "yellow"}} {:id #uuid "635280d9-e5b1-4c0b-bda7-b957b6f04348", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 885.1004638671875, :y2 510.78125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 457.8125, :x2 885.1004638671875, :y2 479.8125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 481.78125, :x2 116.753662109375, :y2 510.78125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 115.15625, :y1 485.328125, :x2 576.984375, :y2 507.328125, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "When executing an assignment statement, Python evaluates the expression to the right of= before changing the binding to the name on the left. "}, :properties {:color "blue"}} {:id #uuid "635280e7-8f4f-410d-9f3a-025eff225685", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 880.38427734375, :y2 537.34375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 576.796875, :y1 485.328125, :x2 880.38427734375, :y2 507.328125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 515.34375, :x2 872.3848876953125, :y2 537.34375, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "Therefore, one can refer to a name in right-side expression, even if it is the name to be bound by the assignment statement."}, :properties {:color "yellow"}} {:id #uuid "63528106-3acc-4c88-bbb8-ecea4bd118b3", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 881.7467041015625, :y2 725.890625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 672.921875, :x2 881.7467041015625, :y2 694.921875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 214.578125, :y1 696.890625, :x2 233.003662109375, :y2 725.890625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 508.171875, :y1 696.890625, :x2 526.613037109375, :y2 725.890625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 700.4375, :x2 216.1822967529297, :y2 722.4375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 231.40625, :y1 700.4375, :x2 508.34375, :y2 722.4375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 520.1875, :y1 701.890625, :x2 753.937255859375, :y2 723.890625, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "We can also assign multiple values to multiple names in a single statement, where names on the left of = and expressions on the right of = are separated by commas."}, :properties {:color "blue"}} {:id #uuid "63528155-fb04-4db0-91b4-483e163b5fe9", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 834.0390014648438, :y2 1171.40625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 599.203125, :y1 1117.09375, :x2 617.628662109375, :y2 1146.09375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1120.640625, :x2 600.7942504882812, :y2 1142.640625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 616.015625, :y1 1120.640625, :x2 834.0390014648438, :y2 1142.640625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1149.40625, :x2 477.728759765625, :y2 1171.40625, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "With multiple assignment, all expressions to the right of = are evaluated before any names to the left are bound to those values."}, :properties {:color "blue"}} {:id #uuid "6352817e-2353-42da-825d-4a34c6983871", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 865.7496948242188, :y2 1198.921875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 481.9947509765625, :y1 1149.40625, :x2 865.7496948242188, :y2 1171.40625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1176.921875, :x2 630.1707763671875, :y2 1198.921875, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "As a result of this rule, swapping the values bound to two names can be performed in a single statement."}, :properties {:color "yellow"}} {:id #uuid "635281bc-80a1-489c-abc7-d1e602f9a896", :page 6, :position {:bounding {:x1 98.328125, :y1 381.53125, :x2 613.6604614257812, :y2 403.53125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 381.53125, :x2 613.6604614257812, :y2 403.53125, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "To evaluate a call expression, Python will do the following:"}, :properties {:color "blue"}} {:id #uuid "635281c9-e7bd-4b69-8e90-aa695c0243f3", :page 6, :position {:bounding {:x1 148.34375, :y1 429.0625, :x2 645.7615966796875, :y2 451.0625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 429.0625, :x2 645.7615966796875, :y2 451.0625, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "Evaluate the operator and operand subexpressions, then"}, :properties {:color "blue"}} {:id #uuid "635281e0-2b0c-4b99-9e8f-0e9b73e341d7", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 879.06640625, :y2 507.328125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 457.8125, :x2 879.06640625, :y2 479.8125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 485.328125, :x2 588.6806640625, :y2 507.328125, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "Apply the function that is the value of the operator subexpression to the arguments that are the values of the operand subexpressions."}, :properties {:color "blue"}} {:id #uuid "63528241-802d-4a8f-ae6e-995e51e96d80", :page 7, :position {:bounding {:x1 342.40625, :y1 557.875, :x2 482.567138671875, :y2 579.875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 342.40625, :y1 557.875, :x2 482.567138671875, :y2 579.875, :width 991.5999333333333, :height 1403.1999666666666}), :page 7}, :content {:text " expression tree"}, :properties {:color "blue"}} {:id #uuid "6352827f-b8c3-4bd8-b210-f69c93f5d861", :page 7, :position {:bounding {:x1 0, :y1 0, :x2 861.4861450195312, :y2 712.4375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 661.671875, :x2 861.4861450195312, :y2 683.671875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 690.4375, :x2 344.3880310058594, :y2 712.4375, :width 991.5999333333333, :height 1403.1999666666666}), :page 7}, :content {:text "Evaluating its root, the full expression at the top, requires first evaluating the branches that are its subexpressions. "}, :properties {:color "blue"}} {:id #uuid "6352829e-3266-4de1-a3ea-0a129fe96fd6", :page 7, :position {:bounding {:x1 0, :y1 0, :x2 808.0850830078125, :y2 739.953125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 342.78125, :y1 690.4375, :x2 808.0850830078125, :y2 712.4375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 717.953125, :x2 642.5654296875, :y2 739.953125, :width 991.5999333333333, :height 1403.1999666666666}), :page 7}, :content {:text "The leaf expressions (that is, nodes with no branches stemming from them) represent either functions or numbers. "}, :properties {:color "yellow"}} {:id #uuid "635282be-302a-4714-a003-f0d3f30c26e3", :page 7, :position {:bounding {:x1 0, :y1 0, :x2 890.4767456054688, :y2 796.21875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 642.5480346679688, :y1 717.953125, :x2 890.4767456054688, :y2 739.953125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 745.453125, :x2 855.3427734375, :y2 767.453125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 774.21875, :x2 198.57351684570312, :y2 796.21875, :width 991.5999333333333, :height 1403.1999666666666}), :page 7}, :content {:text "The interior nodes have two parts: the call expression to which our evaluation rule is applied, and the result of that expression."}, :properties {:color "blue"}} {:id #uuid "635284ac-058a-4046-81cd-032445c5751f", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 878.2667846679688, :y2 297.234375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 524.3125, :y1 246.46875, :x2 878.2667846679688, :y2 268.46875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 275.234375, :x2 748.4174194335938, :y2 297.234375, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "In general, statements are not evaluated but executed; they do not produce a value but instead make some change. "}, :properties {:color "blue"}} {:id #uuid "635284bc-0836-4480-b7e6-15a4d25453fb", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 473.54974365234375, :y2 538.546875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 513.546875, :x2 473.54974365234375, :y2 538.546875, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "1.2.6 The Non-Pure Print Function"}, :properties {:color "yellow"}} {:id #uuid "635284d7-4952-4ee1-8bec-b1cf9e1cb193", :page 8, :position {:bounding {:x1 98.328125, :y1 609.140625, :x2 250.4947509765625, :y2 631.140625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 609.140625, :x2 250.4947509765625, :y2 631.140625, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "Pure functions"}, :properties {:color "blue"}} {:id #uuid "635284e8-3a09-45b0-95c4-19fa908f0e91", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 876.7846069335938, :y2 659.90625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 257.046875, :y1 609.140625, :x2 876.7846069335938, :y2 631.140625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 637.90625, :x2 350.9424743652344, :y2 659.90625, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text " Functions have some input (their arguments) and return some output(the result of applying them)"}, :properties {:color "yellow"}} {:id #uuid "6352853a-0745-4569-9600-b5cf03d84382", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 875.1535034179688, :y2 880.015625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 684.9481201171875, :y1 829.25, :x2 875.1535034179688, :y2 851.25, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 858.015625, :x2 598.8431396484375, :y2 880.015625, :width 991.5999333333333, :height 1403.1999666666666}), :page 9}, :content {:text "pure functions can be composed more reliably into compound call expressions."}, :properties {:color "blue"}} {:id #uuid "63528551-9d79-4dde-a6db-f5437163dcb5", :page 9, :position {:bounding {:x1 173.76104736328125, :y1 993.078125, :x2 526.6084594726562, :y2 1015.078125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 173.76104736328125, :y1 993.078125, :x2 526.6084594726562, :y2 1015.078125, :width 991.5999333333333, :height 1403.1999666666666}), :page 9}, :content {:text "pure functions tend to be simpler to test."}, :properties {:color "blue"}} {:id #uuid "6352857e-14b2-4a57-aaff-9c02c9dcb421", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 868.0234375, :y2 1043.84375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 530.8524169921875, :y1 993.078125, :x2 868.0234375, :y2 1015.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1021.84375, :x2 758.1307373046875, :y2 1043.84375, :width 991.5999333333333, :height 1403.1999666666666}), :page 9}, :content {:text "A list of arguments will always lead to the same return value, which can be compared to the expected return value"}, :properties {:color "yellow"}} {:id #uuid "635285ba-289e-44da-93f6-4d66e8abb82f", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 856.860107421875, :y2 1147.640625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 158.40785217285156, :y1 1098.125, :x2 856.860107421875, :y2 1120.125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1125.640625, :x2 794.8524780273438, :y2 1147.640625, :width 991.5999333333333, :height 1403.1999666666666}), :page 9}, :content {:text "Chapter 4 will illustrate that pure functions are essential for writing concurrent programs, in which multiple call expressions may be evaluated simultaneously."}, :properties {:color "blue"}} {:id #uuid "635285ea-ffb9-43c7-9c55-e58504bd6e99", :page 8, :position {:bounding {:x1 98.328125, :y1 1035.609375, :x2 300.6075744628906, :y2 1057.609375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 1035.609375, :x2 300.6075744628906, :y2 1057.609375, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "Non-pure functions"}, :properties {:color "blue"}} {:id #uuid "63528607-910c-4add-b123-cdda08534ad1", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 892.8743896484375, :y2 1086.359375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 311.90625, :y1 1035.609375, :x2 892.8743896484375, :y2 1057.609375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1064.359375, :x2 889.83154296875, :y2 1086.359375, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "In addition to returning a value, applying a non-pure function can generate side effects, which make some change to the state of the interpreter or computer."}, :properties {:color "yellow"}} {:id #uuid "6352863f-62db-488a-ab75-f3c7538c6f5b", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 876.6115112304688, :y2 1146.09375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1091.875, :x2 876.6115112304688, :y2 1113.875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1117.09375, :x2 164.78492736816406, :y2 1146.09375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 158.359375, :y1 1122.09375, :x2 242.89120483398438, :y2 1144.09375, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "A common side effect is to generate additional output beyond the return value, using the print function."}, :properties {:color "blue"}} {:id #uuid "63528698-7800-4285-bd98-4e99a11e8043", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 849.2490844726562, :y2 1315.234375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 497.640625, :y1 1259.671875, :x2 562.171875, :y2 1288.671875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 715.578125, :y1 1259.671875, :x2 763.6239013671875, :y2 1288.671875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 366.8808288574219, :y1 1263.21875, :x2 499.24481201171875, :y2 1285.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 562.5, :y1 1263.21875, :x2 715.75, :y2 1285.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 763.609375, :y1 1263.21875, :x2 849.2490844726562, :y2 1285.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1293.234375, :x2 434.151123046875, :y2 1315.234375, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "The value that print returns is always None, a special Python value that represents nothing. "}, :properties {:color "blue"}} {:id #uuid "6352877a-48e7-4a33-b97b-554747d83374", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 538.66015625, :y2 127.703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 94.703125, :x2 538.66015625, :y2 127.703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "1.2 Elements of Programming"}, :properties {:color "yellow"}} {:id #uuid "63cb3cb7-d310-4f74-ba85-2432c457a8a5", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 369.3821716308594, :y2 187.65202528238297, :width 729, :height 1031.59826994072}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 729, :height 1031.59826994072} {:x1 72.2879638671875, :y1 169.3946095108986, :x2 369.3821716308594, :y2 187.65202528238297, :width 729, :height 1031.59826994072}), :page 6}, :content {:text "1.2.5 Evaluating Nested Expressions"}, :properties {:color "red"}}], :extra {:page 8}}