{:highlights [{:id #uuid "6275ea11-5d76-4f9e-b6c5-56a56a10cf7e", :page 21, :position {:bounding {:x1 86.86392211914062, :y1 85.89431762695312, :x2 340.24072265625, :y2 105.89431762695312, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.86392211914062, :y1 85.89431762695312, :x2 111.896240234375, :y2 105.89431762695312, :width 677.52, :height 902.4000000000001} {:x1 126.56607055664062, :y1 86.44261169433594, :x2 340.24072265625, :y2 105.44261169433594, :width 677.52, :height 902.4000000000001}), :page 21}, :content {:text "1.1 BASIC PROGRAMMING MODEL"}, :properties {:color "yellow"}} {:id #uuid "6275ea89-fe8f-44d1-8294-2b7f59805628", :page 22, :position {:bounding {:x1 60, :y1 80, :x2 579, :y2 775, :width 677.52, :height 902.4000000000001}, :rects (), :page 22}, :content {:text "[:span]", :image 1651894921461}, :properties {:color "yellow"}} {:id #uuid "6275eb5c-deb2-4684-bf33-375126f3742e", :page 185, :position {:bounding {:x1 86.86412048339844, :y1 85.89431762695312, :x2 315.0378112792969, :y2 105.89431762695312, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.86412048339844, :y1 85.89431762695312, :x2 113.24859619140625, :y2 105.89431762695312, :width 677.52, :height 902.4000000000001} {:x1 127.90225219726562, :y1 86.44261169433594, :x2 315.0378112792969, :y2 105.44261169433594, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "1.4  ANALYSIS OF ALGORITHMS"}, :properties {:color "yellow"}} {:id #uuid "6275eb99-00de-4039-9593-45dd060f1cbc", :page 185, :position {:bounding {:x1 86.870849609375, :y1 479.1165466308594, :x2 211.09320068359375, :y2 498.1165466308594, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.870849609375, :y1 479.1165466308594, :x2 211.09320068359375, :y2 498.1165466308594, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "  S c i e n t i fi c   m e t h o d  "}, :properties {:color "yellow"}} {:id #uuid "6275ebce-05fd-484b-843b-690825a45a6d", :page 185, :position {:bounding {:x1 86.86123657226562, :y1 481.7514953613281, :x2 594.3153076171875, :y2 515.7359008789062, :width 677.52, :height 902.4000000000001}, :rects ({:x1 227.77932739257812, :y1 481.7514953613281, :x2 594.3153076171875, :y2 497.7514953613281, :width 677.52, :height 902.4000000000001} {:x1 86.86123657226562, :y1 499.73590087890625, :x2 487.8670654296875, :y2 515.7359008789062, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "The very same approach that scientists use to understand the natural world is effective for studying the  running time of programs:"}, :properties {:color "yellow"}} {:id #uuid "6275ebdd-a057-431a-b153-265b7caae2d0", :page 185, :position {:bounding {:x1 118.87210083007812, :y1 517.7532348632812, :x2 589.0653076171875, :y2 533.7532348632812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.87210083007812, :y1 517.7532348632812, :x2 589.0653076171875, :y2 533.7532348632812, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "Observe some feature of the natural world, generally with precise measurements."}, :properties {:color "blue"}} {:id #uuid "6275ec5a-46c5-46d2-907d-c43874941044", :page 185, :position {:bounding {:x1 118.86215209960938, :y1 535.7551879882812, :x2 472.0817413330078, :y2 551.7551879882812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.86215209960938, :y1 535.7551879882812, :x2 472.0817413330078, :y2 551.7551879882812, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "Hypothesize a model that is consistent with the observations."}, :properties {:color "green"}} {:id #uuid "6275ec63-6d9c-473e-8a90-6ef6b495ea56", :page 185, :position {:bounding {:x1 118.87374877929688, :y1 553.7551879882812, :x2 324.8518981933594, :y2 569.7551879882812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.87374877929688, :y1 553.7551879882812, :x2 324.8518981933594, :y2 569.7551879882812, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "Predict events using the hypothesis."}, :properties {:color "red"}} {:id #uuid "6275ec6c-d935-4be8-847f-77d0efd90ad4", :page 185, :position {:bounding {:x1 118.86776733398438, :y1 571.7551879882812, :x2 435.2694549560547, :y2 587.7551879882812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.86776733398438, :y1 571.7551879882812, :x2 435.2694549560547, :y2 587.7551879882812, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "Ve r i f y the predictions by making further observations."}, :properties {:color "purple"}} {:id #uuid "6275ec96-a3fd-4f04-aa3c-97c289fc0090", :page 185, :position {:bounding {:x1 118.87387084960938, :y1 589.7551879882812, :x2 501.621826171875, :y2 605.7551879882812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.87387084960938, :y1 589.7551879882812, :x2 501.621826171875, :y2 605.7551879882812, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "Va l i d a t e by repeating until the hypothesis and observations agree."}, :properties {:color "yellow"}} {:id #uuid "6275ecd9-d236-45fe-8941-9603e2e58f87", :page 185, :position {:bounding {:x1 -0.0023345947265625, :y1 679.7259521484375, :x2 677.49609375, :y2 714.3822021484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 91.91282653808594, :y1 679.7259521484375, :x2 677.49609375, :y2 697.0384521484375, :width 677.52, :height 902.4000000000001} {:x1 -0.0023345947265625, :y1 697.0697021484375, :x2 154.93002319335938, :y2 714.3822021484375, :width 677.52, :height 902.4000000000001}), :page 185}, :content {:text "“No amount of experimentation can ever prove me right; a single experiment can prove me wrong”)"}, :properties {:color "purple"}} {:id #uuid "6275ecf4-1ffe-4baf-8c3b-091507d21d6b", :page 186, :position {:bounding {:x1 89.55203247070312, :y1 86.43890380859375, :x2 181.3093719482422, :y2 105.43890380859375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 89.55203247070312, :y1 86.43890380859375, :x2 181.3093719482422, :y2 105.43890380859375, :width 677.52, :height 902.4000000000001}), :page 186}, :content {:text "O b s e r v a t i o n s  "}, :properties {:color "purple"}} {:id #uuid "6275ed3c-9b0c-4e28-95d4-57af66f2d01a", :page 186, :position {:bounding {:x1 -0.008625030517578125, :y1 233.0540771484375, :x2 677.4979248046875, :y2 285.0384521484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 505.6539306640625, :y1 233.0540771484375, :x2 594.5579833984375, :y2 249.0540771484375, :width 677.52, :height 902.4000000000001} {:x1 -0.008625030517578125, :y1 250.3978271484375, :x2 677.4979248046875, :y2 267.7103271484375, :width 677.52, :height 902.4000000000001} {:x1 86.85916137695312, :y1 269.0384521484375, :x2 508.9393310546875, :y2 285.0384521484375, :width 677.52, :height 902.4000000000001}), :page 186}, :content {:text "Intuitively, the running  time  should  increase  with  problem  size,  but  the  question  of by  how  much  it increases naturally comes up every time we develop and run a program. "}, :properties {:color "purple"}} {:id #uuid "6275edc2-32b1-4c18-a8d0-c4efa8cbe39b", :page 187, :position {:bounding {:x1 -0.013957977294921875, :y1 473.5384521484375, :x2 418.8106575012207, :y2 561.5228271484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 325.4181823730469, :y1 473.5384521484375, :x2 377.3018493652344, :y2 489.5384521484375, :width 677.52, :height 902.4000000000001} {:x1 -0.013957977294921875, :y1 490.8822021484375, :x2 418.8106575012207, :y2 506.9759521484375, :width 677.52, :height 902.4000000000001} {:x1 -0.013957977294921875, :y1 507.6636657714844, :x2 418.6739387512207, :y2 526.1948852539062, :width 677.52, :height 902.4000000000001} {:x1 -0.013957977294921875, :y1 526.8822021484375, :x2 418.6678047180176, :y2 544.1947021484375, :width 677.52, :height 902.4000000000001} {:x1 86.85556030273438, :y1 545.5228271484375, :x2 328.10540771484375, :y2 561.5228271484375, :width 677.52, :height 902.4000000000001}), :page 187}, :content {:text "we  need accurate measurements to generate experimental data  that  we  can  use  to  formulate  and  to  check the validity of hypotheses about the relationship between running time and problem size. "}, :properties {:color "purple"}} {:id #uuid "6275edf6-4218-4bd4-9d18-2d1614b38808", :page 187, :position {:bounding {:x1 -0.01033782958984375, :y1 617.5697021484375, :x2 418.6897888183594, :y2 725.4290771484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 141.81748962402344, :y1 617.5697021484375, :x2 377.15625, :y2 633.5697021484375, :width 677.52, :height 902.4000000000001} {:x1 -0.0050048828125, :y1 634.4548950195312, :x2 418.6897888183594, :y2 652.2361450195312, :width 677.52, :height 902.4000000000001} {:x1 184.734375, :y1 639, :x2 322.0040588378906, :y2 651, :width 677.52, :height 902.4000000000001} {:x1 -0.010334014892578125, :y1 652.9290771484375, :x2 418.6641960144043, :y2 669.1165771484375, :width 677.52, :height 902.4000000000001} {:x1 -0.0103302001953125, :y1 669.7862548828125, :x2 418.6123504638672, :y2 688.2237548828125, :width 677.52, :height 902.4000000000001} {:x1 -0.01033782958984375, :y1 688.9134521484375, :x2 418.5903091430664, :y2 706.2259521484375, :width 677.52, :height 902.4000000000001} {:x1 -0.0103302001953125, :y1 706.9134521484375, :x2 284.8740539550781, :y2 725.4290771484375, :width 677.52, :height 902.4000000000001}), :page 187}, :content {:text "The  implementation  is  based  on  using the Java system’s currentTimeMillis() method, which  gives  the  current  time  in  milliseconds,  to save  the  time  when  the  constructor  is  invoked, then  uses  it  again  to  compute  the  elapsed  time when elapsedTime() is invoked. "}, :properties {:color "blue"}} {:id #uuid "6275ee5b-d39a-4ccb-80bf-f1d2c59405a2", :page 189, :position {:bounding {:x1 87.87251281738281, :y1 87.54592895507812, :x2 278.31005859375, :y2 104.54592895507812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 87.87251281738281, :y1 87.54592895507812, :x2 278.31005859375, :y2 104.54592895507812, :width 677.52, :height 902.4000000000001}), :page 189}, :content {:text "Analysis  of  experimental  data. "}, :properties {:color "blue"}} {:id #uuid "6275ee72-8a5c-4437-9cbd-b1f843e805f2", :page 189, :position {:bounding {:x1 87.86686706542969, :y1 286.0540771484375, :x2 595.1454467773438, :y2 320.0540771484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 489.8436279296875, :y1 286.0540771484375, :x2 595.1454467773438, :y2 302.0540771484375, :width 677.52, :height 902.4000000000001} {:x1 87.86686706542969, :y1 304.0540771484375, :x2 442.21531677246094, :y2 320.0540771484375, :width 677.52, :height 902.4000000000001}), :page 189}, :content {:text "running times on different computers are likely to differ by a constant factor. S"}, :properties {:color "yellow"}} {:id #uuid "6275eebe-eb0a-4a02-b58e-88aea4710772", :page 191, :position {:bounding {:x1 86.8665771484375, :y1 230.94036865234375, :x2 239.5028076171875, :y2 249.94036865234375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.8665771484375, :y1 230.94036865234375, :x2 239.5028076171875, :y2 249.94036865234375, :width 677.52, :height 902.4000000000001}), :page 191}, :content {:text " M a t h e m a t i c a l   m o d e l s  "}, :properties {:color "yellow"}} {:id #uuid "6275ef00-38bc-4a79-9964-a168aa2b81cc", :page 191, :position {:bounding {:x1 86.85968017578125, :y1 287.5697021484375, :x2 594.5103149414062, :y2 321.5697021484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 262.5320739746094, :y1 287.5697021484375, :x2 594.5103149414062, :y2 303.5697021484375, :width 677.52, :height 902.4000000000001} {:x1 86.85968017578125, :y1 305.5697021484375, :x2 371.8898010253906, :y2 321.5697021484375, :width 677.52, :height 902.4000000000001}), :page 191}, :content {:text "Knuth’s basic insight is simple: the total running time of a program is determined by two primary factors:"}, :properties {:color "yellow"}} {:id #uuid "6275ef0d-5eff-4a47-8a0d-2246ff1d133f", :page 191, :position {:bounding {:x1 118.86752319335938, :y1 323.5909729003906, :x2 333.9285888671875, :y2 339.5909729003906, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.86752319335938, :y1 323.5909729003906, :x2 333.9285888671875, :y2 339.5909729003906, :width 677.52, :height 902.4000000000001}), :page 191}, :content {:text "The cost of executing each statement"}, :properties {:color "blue"}} {:id #uuid "6275ef1c-25ac-4039-af59-139b7d582e52", :page 191, :position {:bounding {:x1 118.86405944824219, :y1 341.5833435058594, :x2 385.1179656982422, :y2 357.5833435058594, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.86405944824219, :y1 341.5833435058594, :x2 385.1179656982422, :y2 357.5833435058594, :width 677.52, :height 902.4000000000001}), :page 191}, :content {:text "The frequency of execution of each statement"}, :properties {:color "blue"}} {:id #uuid "6275ef37-3678-4a22-bf9b-4b6ea31cf485", :page 191, :position {:bounding {:x1 86.87139892578125, :y1 654.6353149414062, :x2 223.19879150390625, :y2 671.6353149414062, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.87139892578125, :y1 654.6353149414062, :x2 223.19879150390625, :y2 671.6353149414062, :width 677.52, :height 902.4000000000001}), :page 191}, :content {:text "   T i l d e   a p p r o x i m a t i o n s .  "}, :properties {:color "blue"}} {:id #uuid "6275eff4-804e-4ed6-8e8f-e5bee2e367d1", :page 192, :position {:bounding {:x1 -0.008998870849609375, :y1 159.59295654296875, :x2 459.59302139282227, :y2 229.5662841796875, :width 677.52, :height 902.4000000000001}, :rects ({:x1 313.8415222167969, :y1 159.59295654296875, :x2 365.0668029785156, :y2 175.59295654296875, :width 677.52, :height 902.4000000000001} {:x1 -0.008998870849609375, :y1 176.9290771484375, :x2 416.65625, :y2 194.2415771484375, :width 677.52, :height 902.4000000000001} {:x1 -0.008998870849609375, :y1 194.9134521484375, :x2 459.59302139282227, :y2 212.9290771484375, :width 677.52, :height 902.4000000000001} {:x1 86.86062622070312, :y1 213.5662841796875, :x2 199.5988006591797, :y2 229.5662841796875, :width 677.52, :height 902.4000000000001}), :page 192}, :content {:text "allow us to ignore insignificant terms and therefore sub-stantially  simplify  the  mathematical  formulas that we work with,"}, :properties {:color "yellow"}} {:id #uuid "6275f03e-7baf-4c12-8ea1-0b81da6a165a", :page 192, :position {:bounding {:x1 74, :y1 327, :x2 369, :y2 456, :width 677.52, :height 902.4000000000001}, :rects (), :page 192}, :content {:text "[:span]", :image 1651896382153}, :properties {:color "yellow"}} {:id #uuid "6275f051-4854-4e70-ab6f-0ec1ce493bab", :page 192, :position {:bounding {:x1 74, :y1 466, :x2 236, :y2 783, :width 677.52, :height 902.4000000000001}, :rects (), :page 192}, :content {:text "[:span]", :image 1651896401553}, :properties {:color "yellow"}} {:id #uuid "6275f091-79fe-4f9a-abe7-34633432f4c7", :page 192, :position {:bounding {:x1 233.01605224609375, :y1 602.6478271484375, :x2 677.509033203125, :y2 654.6478271484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 246.10690307617188, :y1 602.6478271484375, :x2 677.3670654296875, :y2 618.6478271484375, :width 677.52, :height 902.4000000000001} {:x1 233.01605224609375, :y1 619.124267578125, :x2 677.509033203125, :y2 637.311767578125, :width 677.52, :height 902.4000000000001} {:x1 246.09649658203125, :y1 638.6478271484375, :x2 314.77001953125, :y2 654.6478271484375, :width 677.52, :height 902.4000000000001}), :page 192}, :content {:text "When using the logarithm in the order of growth, we gener-ally do not specify the base, since the constant a can absorb that  detail.  "}, :properties {:color "blue"}} {:id #uuid "6275f0b4-8623-4b09-9243-48614b972e4e", :page 193, :position {:bounding {:x1 86.860595703125, :y1 87.5458984375, :x2 261.8303527832031, :y2 104.5458984375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.860595703125, :y1 87.5458984375, :x2 261.8303527832031, :y2 104.5458984375, :width 677.52, :height 902.4000000000001}), :page 193}, :content {:text "Approximate  running  time. "}, :properties {:color "blue"}} {:id #uuid "6275f0d8-affa-4464-b6e1-8de89a3af364", :page 193, :position {:bounding {:x1 -0.005001068115234375, :y1 340.0697021484375, :x2 677.5044593811035, :y2 392.7415771484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 184.54696655273438, :y1 340.0697021484375, :x2 589.3536987304688, :y2 356.0697021484375, :width 677.52, :height 902.4000000000001} {:x1 -0.005001068115234375, :y1 357.4134521484375, :x2 677.5044593811035, :y2 374.7259521484375, :width 677.52, :height 902.4000000000001} {:x1 -0.00499725341796875, :y1 375.4134521484375, :x2 385.6688537597656, :y2 392.7415771484375, :width 677.52, :height 902.4000000000001}), :page 193}, :content {:text "A key observation from this exercise is to note that only the instruc-tions  that  are  executed  the  most  frequently  play  a  role  in  the  final  total—we  refer  to these instructions as the    inner loop of the program. "}, :properties {:color "yellow"}} {:id #uuid "6275f138-f05e-4068-8fb8-99e45d6a4505", :page 193, :position {:bounding {:x1 86.87225341796875, :y1 430.0697021484375, :x2 594.0658569335938, :y2 464.0697021484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 346.9356384277344, :y1 430.0697021484375, :x2 594.0658569335938, :y2 446.0697021484375, :width 677.52, :height 902.4000000000001} {:x1 86.87225341796875, :y1 448.0697021484375, :x2 541.068115234375, :y2 464.0697021484375, :width 677.52, :height 902.4000000000001}), :page 193}, :content {:text "his behavior is typical: the running times of a great many programs depend only on a small subset of their instructions."}, :properties {:color "yellow"}} {:id #uuid "6275f15b-6393-4aca-af19-ebafe9e67a44", :page 193, :position {:bounding {:x1 86.86940002441406, :y1 664.1484985351562, :x2 677.5134887695312, :y2 712.8040771484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 322.921875, :y1 664.1484985351562, :x2 677.5134887695312, :y2 695.4609985351562, :width 677.52, :height 902.4000000000001} {:x1 86.87046813964844, :y1 678.8047485351562, :x2 594.16748046875, :y2 694.8047485351562, :width 677.52, :height 902.4000000000001} {:x1 86.86940002441406, :y1 696.8040771484375, :x2 316.63214111328125, :y2 712.8040771484375, :width 677.52, :height 902.4000000000001}), :page 193}, :content {:text "Throughout this book, we use the term  property to refer to a hypothesis that needs to be validated through experimentation. "}, :properties {:color "red"}} {:id #uuid "6275f17c-a3ea-4609-9621-99b177c5c2ec", :page 195, :position {:bounding {:x1 86.86982727050781, :y1 149.03955078125, :x2 229.06640625, :y2 166.03955078125, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.86982727050781, :y1 149.03955078125, :x2 229.06640625, :y2 166.03955078125, :width 677.52, :height 902.4000000000001}), :page 195}, :content {:text "Analysis  of  algorithms. "}, :properties {:color "yellow"}} {:id #uuid "6275f195-6d93-40e2-937c-7336da4656f1", :page 195, :position {:bounding {:x1 86.86672973632812, :y1 185.5697021484375, :x2 677.0265502929688, :y2 219.5697021484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.86672973632812, :y1 185.5697021484375, :x2 677.0265502929688, :y2 201.5697021484375, :width 677.52, :height 902.4000000000001} {:x1 86.86837768554688, :y1 203.5697021484375, :x2 326.283203125, :y2 219.5697021484375, :width 677.52, :height 902.4000000000001}), :page 195}, :content {:text "Wo r k i n g   w i t h   t h e   o r d e r   o f   g r o w t h   a l l o w s   u s   t o   t a k e   o n e   f u r t h e r   s t e p :   t o   s e p a r a t e   a   p r o-gram from the algorithm it implements. "}, :properties {:color "blue"}} {:id #uuid "6275f1ed-ec24-4628-9fcf-1f4b5cc79482", :page 195, :position {:bounding {:x1 86.87461853027344, :y1 481.03759765625, :x2 158.7776336669922, :y2 498.03759765625, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.87461853027344, :y1 481.03759765625, :x2 158.7776336669922, :y2 498.03759765625, :width 677.52, :height 902.4000000000001}), :page 195}, :content {:text "   C o s t   m o d e l .  "}, :properties {:color "blue"}} {:id #uuid "6275f216-bc2d-43b1-8901-f1510299c6b4", :page 195, :position {:bounding {:x1 -0.01033782958984375, :y1 476.6483154296875, :x2 411.59442138671875, :y2 551.5697021484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 389.62542724609375, :y1 476.6483154296875, :x2 409.37542724609375, :y2 498.3045654296875, :width 677.52, :height 902.4000000000001} {:x1 166.41799926757812, :y1 481.5858154296875, :x2 388.7867126464844, :y2 497.5858154296875, :width 677.52, :height 902.4000000000001} {:x1 -0.01033782958984375, :y1 498.98968505859375, :x2 411.59442138671875, :y2 516.2396850585938, :width 677.52, :height 902.4000000000001} {:x1 -0.0103302001953125, :y1 516.9134521484375, :x2 411.57383728027344, :y2 534.2259521484375, :width 677.52, :height 902.4000000000001} {:x1 86.86676025390625, :y1 535.5697021484375, :x2 280.3601379394531, :y2 551.5697021484375, :width 677.52, :height 902.4000000000001}), :page 195}, :content {:text "We   f o c u s   a t t e n t i o n   o n   p r o p e r t i e s   o f   a l-gorithms by articulating a cost model that defines the basic operations used by the algorithms we are study-ing to solve the problem at hand. "}, :properties {:color "green"}} {:id #uuid "6275f23a-cc39-410f-9b30-98326d85bf8a", :page 195, :position {:bounding {:x1 86.86721801757812, :y1 721.663330078125, :x2 677.4891357421875, :y2 768.9915771484375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 185.59375, :y1 721.663330078125, :x2 677.4891357421875, :y2 751.647705078125, :width 677.52, :height 902.4000000000001} {:x1 86.86924743652344, :y1 734.991455078125, :x2 249.37615966796875, :y2 750.991455078125, :width 677.52, :height 902.4000000000001} {:x1 86.86721801757812, :y1 752.9915771484375, :x2 178.85841369628906, :y2 768.9915771484375, :width 677.52, :height 902.4000000000001}), :page 195}, :content {:text "We   u s e   t h e   t e r m    proposition to refer to mathematical truths about algorithms in terms of a cost model."}, :properties {:color "yellow"}} {:id #uuid "6275f272-dc6a-4a47-84d7-e4015f888cfa", :page 197, :position {:bounding {:x1 86.8717041015625, :y1 87.54592895507812, :x2 148.90211486816406, :y2 104.54592895507812, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.8717041015625, :y1 87.54592895507812, :x2 148.90211486816406, :y2 104.54592895507812, :width 677.52, :height 902.4000000000001}), :page 197}, :content {:text "Summary."}, :properties {:color "yellow"}} {:id #uuid "6275f29a-f84d-4e49-9a10-13dc383a98eb", :page 197, :position {:bounding {:x1 86.87493896484375, :y1 88.08758544921875, :x2 594.0761260986328, :y2 122.08343505859375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 157.34877014160156, :y1 88.08758544921875, :x2 594.0761260986328, :y2 104.08758544921875, :width 677.52, :height 902.4000000000001} {:x1 86.87493896484375, :y1 106.08343505859375, :x2 262.7420349121094, :y2 122.08343505859375, :width 677.52, :height 902.4000000000001}), :page 197}, :content {:text "For  many  programs,  developing  a  mathematical  model  of  running  time reduces to the following steps:"}, :properties {:color "blue"}} {:id #uuid "6275f2ac-7bf9-4163-ba6a-4ebaf678eb5f", :page 197, :position {:bounding {:x1 118.87295532226562, :y1 124.08132934570312, :x2 508.9752197265625, :y2 141.39382934570312, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.87295532226562, :y1 124.08132934570312, :x2 508.9752197265625, :y2 141.39382934570312, :width 677.52, :height 902.4000000000001}), :page 197}, :content {:text "Develop an input model, including a definition of the problem size."}, :properties {:color "yellow"}} {:id #uuid "6275f2b9-c456-4ed4-9900-6a3539177115", :page 197, :position {:bounding {:x1 118.87158203125, :y1 142.08331298828125, :x2 251.11862182617188, :y2 158.08331298828125, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.87158203125, :y1 142.08331298828125, :x2 251.11862182617188, :y2 158.08331298828125, :width 677.52, :height 902.4000000000001}), :page 197}, :content {:text "Identify the inner loop."}, :properties {:color "blue"}} {:id #uuid "6275f2c8-87c6-47be-8a36-c780241b4475", :page 197, :position {:bounding {:x1 118.86190795898438, :y1 160.08331298828125, :x2 479.52301025390625, :y2 177.39581298828125, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.86190795898438, :y1 160.08331298828125, :x2 479.52301025390625, :y2 177.39581298828125, :width 677.52, :height 902.4000000000001}), :page 197}, :content {:text "Define a cost model that includes operations in the inner loop."}, :properties {:color "yellow"}} {:id #uuid "6275f2d5-512d-40b5-a620-ad57312d98f8", :page 197, :position {:bounding {:x1 118.86135864257812, :y1 178.08331298828125, :x2 576.4371948242188, :y2 194.08331298828125, :width 677.52, :height 902.4000000000001}, :rects ({:x1 118.86135864257812, :y1 178.08331298828125, :x2 576.4371948242188, :y2 194.08331298828125, :width 677.52, :height 902.4000000000001}), :page 197}, :content {:text "Determine the frequency of execution of those operations for the given input. "}, :properties {:color "red"}} {:id #uuid "6275f30d-adac-4f90-ab57-2f84a38748a4", :page 198, :position {:bounding {:x1 82, :y1 217, :x2 592, :y2 788, :width 677.52, :height 902.4000000000001}, :rects (), :page 198}, :content {:text "[:span]", :image 1651897101937}, :properties {:color "yellow"}} {:id #uuid "6275f351-4f65-4d15-83fe-052dd36040ae", :page 199, :position {:bounding {:x1 89.5169677734375, :y1 86.45074462890625, :x2 332.2710876464844, :y2 105.45074462890625, :width 677.52, :height 902.4000000000001}, :rects ({:x1 89.5169677734375, :y1 86.45074462890625, :x2 307.7559509277344, :y2 105.45074462890625, :width 677.52, :height 902.4000000000001} {:x1 324.46875, :y1 89.08001708984375, :x2 332.2710876464844, :y2 105.08001708984375, :width 677.52, :height 902.4000000000001}), :page 199}, :content {:text " O r d e r - o f - g r o w t h   c l a s s i fi c a t i o n s  W"}, :properties {:color "yellow"}} {:id #uuid "6275f38f-cd80-4d1d-8f05-48530569d23f", :page 200, :position {:bounding {:x1 63, :y1 94, :x2 649, :y2 741, :width 677.52, :height 902.4000000000001}, :rects (), :page 200}, :content {:text "[:span]", :image 1651897231962}, :properties {:color "yellow"}} {:id #uuid "6275f3b4-e862-4cbb-a4d8-d447ad1f1028", :page 202, :position {:bounding {:x1 86.87052917480469, :y1 86.43890380859375, :x2 287.7442626953125, :y2 105.43890380859375, :width 677.52, :height 902.4000000000001}, :rects ({:x1 86.87052917480469, :y1 86.43890380859375, :x2 287.7442626953125, :y2 105.43890380859375, :width 677.52, :height 902.4000000000001}), :page 202}, :content {:text "Designing faster algorithms "}, :properties {:color "yellow"}} {:id #uuid "627786c7-ceda-4ec6-8c82-8867bf317e79", :page 15, :position {:bounding {:x1 159.0985565185547, :y1 199.269287109375, :x2 524.3816375732422, :y2 270.269287109375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 159.0985565185547, :y1 199.269287109375, :x2 524.3816375732422, :y2 270.269287109375, :width 769.9090909090909, :height 1025.4545454545455}), :page 15}, :content {:text "Fundamentals"}, :properties {:color "yellow"}} {:id #uuid "6277870e-31d3-4943-a8cf-b8005e0322e6", :page 16, :position {:bounding {:x1 146.953125, :y1 376.328125, :x2 769.8892211914062, :y2 436.21875, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 146.953125, :y1 376.328125, :x2 675.0380859375, :y2 395.328125, :width 769.9090909090909, :height 1025.4545454545455} {:x1 146.953125, :y1 396.78125, :x2 769.8892211914062, :y2 415.78125, :width 769.9090909090909, :height 1025.4545454545455} {:x1 146.953125, :y1 417.21875, :x2 222.80030822753906, :y2 436.21875, :width 769.9090909090909, :height 1025.4545454545455}), :page 16}, :content {:text "he  objective  of  this  book  is  to  study  a  broad  variety  of  important  and  useful algorithms—methods for solving problems that are suited for computer imple-mentation. "}, :properties {:color "yellow"}} {:id #uuid "62778794-dc52-4996-ab14-65308c1297ba", :page 16, :position {:bounding {:x1 98.71875, :y1 417.21875, :x2 769.907470703125, :y2 456.671875, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 222.7843017578125, :y1 417.21875, :x2 769.907470703125, :y2 436.21875, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.71875, :y1 437.671875, :x2 643.5577392578125, :y2 456.671875, :width 769.9090909090909, :height 1025.4545454545455}), :page 16}, :content {:text "Algorithms go hand in hand with data structures—schemes for or-ganizing  data  that  leave  them  amenable  to  efficient  processing  by  an  algorithm.  "}, :properties {:color "blue"}} {:id #uuid "62778813-32c1-4864-9d3d-18b7e36a900d", :page 16, :position {:bounding {:x1 98.70276641845703, :y1 560.3739624023438, :x2 769.8853149414062, :y2 599.8270874023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 433.0439758300781, :y1 560.3739624023438, :x2 769.8853149414062, :y2 580.1552124023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.70276641845703, :y1 580.8270874023438, :x2 355.26358795166016, :y2 599.8270874023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 16}, :content {:text "define abstract data types (ADTs) in the service of modular programming. "}, :properties {:color "blue"}} {:id #uuid "62778839-fa0b-4675-946b-a67216055edc", :page 16, :position {:bounding {:x1 98.6938247680664, :y1 785.3270874023438, :x2 675.1643829345703, :y2 824.7802124023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 242.1989288330078, :y1 785.3270874023438, :x2 675.1643829345703, :y2 804.3270874023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.6938247680664, :y1 805.7802124023438, :x2 610.523078918457, :y2 824.7802124023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 16}, :content {:text "we develop hypotheses about performance, create mathematical models, and run experiments to test them, repeating the process as necessary."}, :properties {:color "blue"}} {:id #uuid "62778872-3685-4714-9475-3d40130139fb", :page 17, :position {:bounding {:x1 103.92575073242188, :y1 98.5079345703125, :x2 188.97344970703125, :y2 119.5079345703125, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 103.92575073242188, :y1 98.5079345703125, :x2 188.97344970703125, :y2 119.5079345703125, :width 769.9090909090909, :height 1025.4545454545455}), :page 17}, :content {:text "A l g o r i t h m s  "}, :properties {:color "blue"}} {:id #uuid "627788b5-9973-47b2-a27c-f50bad698a15", :page 17, :position {:bounding {:x1 -0.00700831413269043, :y1 161.73333740234375, :x2 769.8971054553986, :y2 221.62396240234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 619.9290161132812, :y1 161.73333740234375, :x2 675.1935424804688, :y2 180.73333740234375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.00700831413269043, :y1 182.28021240234375, :x2 769.8971054553986, :y2 202.06146240234375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.71755981445312, :y1 202.62396240234375, :x2 276.3714294433594, :y2 221.62396240234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 17}, :content {:text "It is the method, rather than the computer program itself, that specifies the steps that we can take to solve the problem. "}, :properties {:color "purple"}} {:id #uuid "627788e7-ce7d-4eb2-a08d-8d2b57ea7639", :page 17, :position {:bounding {:x1 98.73114013671875, :y1 652.5302124023438, :x2 675.701904296875, :y2 691.9833374023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 403.916748046875, :y1 652.5302124023438, :x2 675.701904296875, :y2 671.5302124023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.73114013671875, :y1 672.9833374023438, :x2 532.532958984375, :y2 691.9833374023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 17}, :content {:text "each  algorithm  is  a  method  suitable  for implementation on any computer in any programming language."}, :properties {:color "purple"}} {:id #uuid "6277892f-c8ad-484b-aa6d-6b031b459af7", :page 17, :position {:bounding {:x1 -0.00804990530014038, :y1 693.4208374023438, :x2 769.3562622070312, :y2 733.7645874023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 116.91018676757812, :y1 693.4208374023438, :x2 769.3562622070312, :y2 713.2020874023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.00804990530014038, :y1 713.9833374023438, :x2 413.9058532714844, :y2 733.7645874023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 17}, :content {:text "Most  algorithms  of  interest  involve  organizing  the  data  involved  in  the  computa-tion. Such organization leads to  data structures,"}, :properties {:color "purple"}} {:id #uuid "6277897f-6aa4-4213-9a91-923c085e307b", :page 17, :position {:bounding {:x1 240.1803436279297, :y1 734.3270874023438, :x2 572.0593109130859, :y2 753.3270874023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 240.1803436279297, :y1 734.3270874023438, :x2 572.0593109130859, :y2 753.3270874023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 17}, :content {:text "Algorithms and data structures go hand in hand. I"}, :properties {:color "yellow"}} {:id #uuid "627789a9-54ac-4aa2-92c5-6cc1a76a77d1", :page 17, :position {:bounding {:x1 -0.007010042667388916, :y1 775.2333374023438, :x2 769.8907560706139, :y2 835.1239624023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 622.4783935546875, :y1 775.2333374023438, :x2 674.7923583984375, :y2 794.2333374023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.007010042667388916, :y1 795.7802124023438, :x2 769.8907560706139, :y2 815.5614624023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.71019744873047, :y1 816.1239624023438, :x2 383.9230270385742, :y2 835.1239624023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 17}, :content {:text "Simple algorithms  can  give  rise  to  complicated  data  structures  and,  conversely,  complicated algorithms can use simple data structures. "}, :properties {:color "yellow"}} {:id #uuid "627789f0-c6b3-4f3c-87d9-eeab9f689f05", :page 18, :position {:bounding {:x1 -0.00596463680267334, :y1 200.92083740234375, :x2 769.9049850702286, :y2 260.82708740234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 116.88397979736328, :y1 200.92083740234375, :x2 675.354866027832, :y2 219.92083740234375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.00596463680267334, :y1 221.48333740234375, :x2 769.9049850702286, :y2 241.26458740234375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.68993377685547, :y1 241.82708740234375, :x2 265.24788665771484, :y2 260.82708740234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 18}, :content {:text "The  primary  reason  to  learn  about  algorithms  is  that  this  discipline  gives  us  the potential to reap huge savings, even to the point of enabling us to do tasks that would otherwise be impossible. "}, :properties {:color "purple"}} {:id #uuid "62778a51-da73-4d9b-8cfc-96a131edac46", :page 19, :position {:bounding {:x1 -0.0085221529006958, :y1 160.03021240234375, :x2 769.8860701322556, :y2 219.92083740234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 546.3143310546875, :y1 160.03021240234375, :x2 674.8833618164062, :y2 179.03021240234375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.0085221529006958, :y1 180.57708740234375, :x2 769.8860701322556, :y2 200.35833740234375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.7108383178711, :y1 200.92083740234375, :x2 533.563591003418, :y2 219.92083740234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 19}, :content {:text "We should not use an algorithm without having an idea of what resources it might consume, so we strive to be aware of how our algorithms might be expected to perform."}, :properties {:color "purple"}} {:id #uuid "62778b1b-48f8-4dc5-a76b-7a829b1bf8e1", :page 21, :position {:bounding {:x1 -0.005494594573974609, :y1 520.0145874023438, :x2 675.0332641601562, :y2 560.3583374023438, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 116.90576934814453, :y1 520.0145874023438, :x2 673.9143753051758, :y2 539.0145874023438, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.005494594573974609, :y1 540.5770874023438, :x2 675.0332641601562, :y2 560.3583374023438, :width 769.9090909090909, :height 1025.4545454545455}), :page 21}, :content {:text "We   r e f e r   t o   t h e   p r o g r a m m i n g   c o n s t r u c t s ,   s o f t w a r e   l i b r a r i e s ,   a n d   o p e r a t i n g   s y s t e m  features that we use to implement and describe algorithms as our programming model. "}, :properties {:color "purple"}} {:id #uuid "62778b98-cd56-4675-89f1-9cc6ab85d379", :page 23, :position {:bounding {:x1 98.71760559082031, :y1 98.50796508789062, :x2 370.3211212158203, :y2 119.5079345703125, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 98.71760559082031, :y1 98.50796508789062, :x2 370.3211212158203, :y2 119.5079345703125, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Basic structure of a Java program "}, :properties {:color "purple"}} {:id #uuid "62778bd3-d186-450b-ae5b-68bb380543b5", :page 23, :position {:bounding {:x1 -0.012591421604156494, :y1 84.97659301757812, :x2 769.8971557617188, :y2 160.28021240234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 504.09375, :y1 84.97659301757812, :x2 769.8971557617188, :y2 120.4609375, :width 769.9090909090909, :height 1025.4545454545455} {:x1 388.6873779296875, :y1 100.36721801757812, :x2 611.4508056640625, :y2 119.3671875, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.012591421604156494, :y1 121.14306640625, :x2 769.5970458984375, :y2 140.70556640625, :width 769.9090909090909, :height 1025.4545454545455} {:x1 98.74662780761719, :y1 141.28021240234375, :x2 526.7593841552734, :y2 160.28021240234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "A Java program ( class) is either a library of static methods (functions) or a data type definition. To create libraries of static methods and data-type definitions, we use the following five components,"}, :properties {:color "green"}} {:id #uuid "62778c37-9879-41ed-9cec-f6b4fcfa3adc", :page 23, :position {:bounding {:x1 -0.012778759002685547, :y1 182.1929931640625, :x2 769.355224609375, :y2 222.53021240234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.0665740966797, :y1 182.1929931640625, :x2 769.355224609375, :y2 201.9742431640625, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.012778759002685547, :y1 202.74896240234375, :x2 475.33319091796875, :y2 222.53021240234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Primitive data types precisely define the meaning of terms like integer, real num-ber, and boolean value within a computer program. "}, :properties {:color "blue"}} {:id #uuid "62778cb2-49c9-4d0a-955e-4bc509073b2e", :page 23, :position {:bounding {:x1 -0.012777626514434814, :y1 264.0054931640625, :x2 769.8783264160156, :y2 304.35833740234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.0738983154297, :y1 264.0054931640625, :x2 769.8783264160156, :y2 283.7867431640625, :width 769.9090909090909, :height 1025.4545454545455} {:x1 -0.012777626514434814, :y1 284.57708740234375, :x2 531.2177276611328, :y2 304.35833740234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Statements allow us to define a computation by creating and assigning values to variables, controlling execution flow, or causing side effects. "}, :properties {:color "green"}} {:id #uuid "62778cc3-cdd1-424e-b8c7-28b734bc6d31", :page 23, :position {:bounding {:x1 135.0773468017578, :y1 325.36712646484375, :x2 546.5824584960938, :y2 344.36712646484375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.0773468017578, :y1 325.36712646484375, :x2 546.5824584960938, :y2 344.36712646484375, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Arrays allow us to work with multiple values of the same type."}, :properties {:color "blue"}} {:id #uuid "62778cd5-ff02-4af4-9bfd-db972d1f8c1e", :page 23, :position {:bounding {:x1 135.0736083984375, :y1 345.8248291015625, :x2 769.8953704833984, :y2 385.28021240234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.07708740234375, :y1 345.8248291015625, :x2 769.8953704833984, :y2 365.6060791015625, :width 769.9090909090909, :height 1025.4545454545455} {:x1 135.0736083984375, :y1 366.28021240234375, :x2 352.3503723144531, :y2 385.28021240234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Static methods allow us to encapsulate and reuse code and to develop programs as a set of independent modules."}, :properties {:color "purple"}} {:id #uuid "62778ce8-1186-4de3-8eaf-651fa46a7f78", :page 23, :position {:bounding {:x1 135.07492065429688, :y1 386.744384765625, :x2 368.4627380371094, :y2 405.744384765625, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.07492065429688, :y1 386.744384765625, :x2 368.4627380371094, :y2 405.744384765625, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Strings are sequences of characters."}, :properties {:color "purple"}} {:id #uuid "62778d2a-9b00-4f05-a66d-998b6a33f31a", :page 23, :position {:bounding {:x1 135.0634002685547, :y1 407.1998291015625, :x2 659.4430541992188, :y2 426.1998291015625, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.0634002685547, :y1 407.1998291015625, :x2 659.4430541992188, :y2 426.1998291015625, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Input/output sets up communication between programs and the outside world."}, :properties {:color "purple"}} {:id #uuid "62778d3e-fbba-47cf-9697-3b6da756203f", :page 23, :position {:bounding {:x1 135.0511932373047, :y1 427.6529541015625, :x2 769.8985595703125, :y2 467.09271240234375, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 135.0726318359375, :y1 427.6529541015625, :x2 769.8985595703125, :y2 447.4342041015625, :width 769.9090909090909, :height 1025.4545454545455} {:x1 135.0511932373047, :y1 448.09271240234375, :x2 589.4575653076172, :y2 467.09271240234375, :width 769.9090909090909, :height 1025.4545454545455}), :page 23}, :content {:text "Data abstraction extends encapsulation and reuse to allow us to define non-primitive data types, thus supporting object-oriented programming."}, :properties {:color "red"}} {:id #uuid "62778dad-cd69-48d5-984a-fab20b1410bd", :page 24, :position {:bounding {:x1 98.71524047851562, :y1 98.5108642578125, :x2 390.0789489746094, :y2 119.5108642578125, :width 769.9090909090909, :height 1025.4545454545455}, :rects ({:x1 98.71524047851562, :y1 98.5108642578125, :x2 390.0789489746094, :y2 119.5108642578125, :width 769.9090909090909, :height 1025.4545454545455}), :page 24}, :content {:text "  P r i m i t i v e   d a t a   t y p e s   a n d   e x p r e s s i o n s  "}, :properties {:color "blue"}} {:id #uuid "627869e5-a971-416d-89c1-184bd4e76ec3", :page 24, :position {:bounding {:x1 88, :y1 438, :x2 716, :y2 934, :width 814, :height 1084.1799504073683}, :rects (), :page 24}, :content {:text "[:span]", :image 1652058597933}, :properties {:color "blue"}} {:id #uuid "62786a58-a258-46e3-92e0-97b58abf4296", :page 25, :position {:bounding {:x1 104.36833190917969, :y1 104.42678833007812, :x2 711.8766937255859, :y2 146.046875, :width 814, :height 1084.1799504073683}, :rects ({:x1 104.36833190917969, :y1 104.42678833007812, :x2 711.8766937255859, :y2 124.42678833007812, :width 814, :height 1084.1799504073683} {:x1 104.37234497070312, :y1 126.046875, :x2 197.44393920898438, :y2 146.046875, :width 814, :height 1084.1799504073683}), :page 25}, :content {:text "To   d e fi n e   a   d a t a   t y p e ,   w e   n e e d   o n l y   s p e c i f y   t h e   v a l u e s   a n d   t h e   s e t   o f   o p e r a t i o n s   o n  those values. "}, :properties {:color "yellow"}} {:id #uuid "62786b59-a330-423c-9464-c8538b2bf8ac", :page 25, :position {:bounding {:x1 87, :y1 450, :x2 719, :y2 939, :width 814, :height 1084.1799504073683}, :rects (), :page 25}, :content {:text "[:span]", :image 1652058969548}, :properties {:color "yellow"}} {:id #uuid "62786bb7-73a7-4183-9369-50920936a8b1", :page 26, :position {:bounding {:x1 106.95258331298828, :y1 105.3865966796875, :x2 193.23854064941406, :y2 125.3865966796875, :width 814, :height 1084.1799504073683}, :rects ({:x1 106.95258331298828, :y1 105.3865966796875, :x2 193.23854064941406, :y2 125.3865966796875, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "E x p r e s s i o n s .  "}, :properties {:color "yellow"}} {:id #uuid "62786be6-88d2-44e4-a159-fbebab8f6f93", :page 26, :position {:bounding {:x1 -0.00936179980635643, :y1 105.03268432617188, :x2 813.9741821289062, :y2 169.25, :width 814, :height 1084.1799504073683}, :rects ({:x1 639.8038330078125, :y1 105.03268432617188, :x2 710.0015869140625, :y2 125.03268432617188, :width 814, :height 1084.1799504073683} {:x1 -0.00936179980635643, :y1 126.72906494140625, :x2 813.9741821289062, :y2 147.63531494140625, :width 814, :height 1084.1799504073683} {:x1 -0.009355343878269196, :y1 148.28125, :x2 385.978986941278, :y2 169.25, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "ypical ex-pressions  are     infix:  a  literal  (or  an  expression),  followed  by  an  operator,  followed  by another  literal  (or  another  expression)."}, :properties {:color "blue"}} {:id #uuid "62786c79-0cdb-4321-8381-9adfe50a0570", :page 26, :position {:bounding {:x1 106.95523071289062, :y1 352.8692626953125, :x2 225.12896728515625, :y2 372.8692626953125, :width 814, :height 1084.1799504073683}, :rects ({:x1 106.95523071289062, :y1 352.8692626953125, :x2 225.12896728515625, :y2 372.8692626953125, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text " T y p e   c o n v e r s i o n .  "}, :properties {:color "green"}} {:id #uuid "62786cda-58bf-48f5-bd47-d8bdc417548c", :page 26, :position {:bounding {:x1 104.36807250976562, :y1 352.52642822265625, :x2 713.5935668945312, :y2 394.15093994140625, :width 814, :height 1084.1799504073683}, :rects ({:x1 234.83724975585938, :y1 352.52642822265625, :x2 713.5935668945312, :y2 372.52642822265625, :width 814, :height 1084.1799504073683} {:x1 104.36807250976562, :y1 374.15093994140625, :x2 242.4534912109375, :y2 394.15093994140625, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "Numbers are automatically promoted to a more inclusive type if no information is lost. "}, :properties {:color "green"}} {:id #uuid "62786d16-9328-47ed-ab73-63bd6df6d789", :page 26, :position {:bounding {:x1 -0.009355146437883377, :y1 395.7788391113281, :x2 814.008544921875, :y2 459.015625, :width 814, :height 1084.1799504073683}, :rects ({:x1 608.5888671875, :y1 395.7788391113281, :x2 814.008544921875, :y2 416.7788391113281, :width 814, :height 1084.1799504073683} {:x1 -0.009355146437883377, :y1 417.4038391113281, :x2 813.9679397754371, :y2 438.3882141113281, :width 814, :height 1084.1799504073683} {:x1 104.36157989501953, :y1 439.015625, :x2 276.81922149658203, :y2 459.015625, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "A  cast is a type name  in  parentheses  within  an  expression,  a  directive  to  convert  the  following  value into a value of that type. "}, :properties {:color "yellow"}} {:id #uuid "62786d30-728b-4565-8d67-6b8f54293760", :page 26, :position {:bounding {:x1 -0.012564510107040405, :y1 439.0372619628906, :x2 713.50341796875, :y2 481.6514587402344, :width 814, :height 1084.1799504073683}, :rects ({:x1 645.1983642578125, :y1 439.0372619628906, :x2 713.50341796875, :y2 459.0372619628906, :width 814, :height 1084.1799504073683} {:x1 -0.012564510107040405, :y1 460.6514587402344, :x2 464.5628967285156, :y2 481.6514587402344, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "Note that casting to an int is truncation instead of rounding"}, :properties {:color "yellow"}} {:id #uuid "62786d47-6509-4744-bbd1-7a9e106cb482", :page 26, :position {:bounding {:x1 276.8038635253906, :y1 439.015625, :x2 636.5646362304688, :y2 459.015625, :width 814, :height 1084.1799504073683}, :rects ({:x1 276.8038635253906, :y1 439.015625, :x2 636.5646362304688, :y2 459.015625, :width 814, :height 1084.1799504073683} {:x1 367.765625, :y1 443.921875, :x2 445.1171875, :y2 457.921875, :width 814, :height 1084.1799504073683} {:x1 463.46875, :y1 443.921875, :x2 472.15625, :y2 457.921875, :width 814, :height 1084.1799504073683} {:x1 506.140625, :y1 443.921875, :x2 592.1699829101562, :y2 457.921875, :width 814, :height 1084.1799504073683} {:x1 610.515625, :y1 443.921875, :x2 636.5646362304688, :y2 457.921875, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "For example (int) 3.7 is 3 and (double) 3 is 3.0"}, :properties {:color "purple"}} {:id #uuid "62786d5d-abe5-44a8-b035-030cf9ed3987", :page 26, :position {:bounding {:x1 107.16716766357422, :y1 535.4990844726562, :x2 205.6896514892578, :y2 555.4990844726562, :width 814, :height 1084.1799504073683}, :rects ({:x1 107.16716766357422, :y1 535.4990844726562, :x2 205.6896514892578, :y2 555.4990844726562, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "C o m p a r i s o n s .  "}, :properties {:color "purple"}} {:id #uuid "62786da7-146c-481a-922b-1ed0b10b190b", :page 26, :position {:bounding {:x1 -0.013772279024124146, :y1 535.15625, :x2 813.9920654296875, :y2 599.4038696289062, :width 814, :height 1084.1799504073683}, :rects ({:x1 214.9403533935547, :y1 535.15625, :x2 714.0460662841797, :y2 555.15625, :width 814, :height 1084.1799504073683} {:x1 -0.013772279024124146, :y1 556.8540649414062, :x2 813.9920654296875, :y2 577.8384399414062, :width 814, :height 1084.1799504073683} {:x1 344.953125, :y1 561.65625, :x2 362.3243408203125, :y2 575.65625, :width 814, :height 1084.1799504073683} {:x1 562.125, :y1 561.65625, :x2 570.8125, :y2 575.65625, :width 814, :height 1084.1799504073683} {:x1 -0.00135040283203125, :y1 578.4038696289062, :x2 494.9832458496094, :y2 599.4038696289062, :width 814, :height 1084.1799504073683} {:x1 110.890625, :y1 582.2703857421875, :x2 128.2618408203125, :y2 598.2703857421875, :width 814, :height 1084.1799504073683} {:x1 241.5625, :y1 582.28125, :x2 250.25, :y2 598.28125, :width 814, :height 1084.1799504073683} {:x1 459.875, :y1 582.28125, :x2 477.2462158203125, :y2 598.28125, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "The  following  operators  compare  two  values  of  the  same  type  and produce  a boolean  value: equal  (==), not  equal (!=), less  than  (<), less  than  or  equal (<=), greater  than  (>),  and  greater  than  or  equal  (>=).  "}, :properties {:color "purple"}} {:id #uuid "62786dec-9513-440f-a833-d1cebc4ac8b4", :page 26, :position {:bounding {:x1 104.36428833007812, :y1 674.8740844726562, :x2 269.603271484375, :y2 694.8740844726562, :width 814, :height 1084.1799504073683}, :rects ({:x1 104.36428833007812, :y1 674.8740844726562, :x2 269.603271484375, :y2 694.8740844726562, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "Other primitive types. "}, :properties {:color "yellow"}} {:id #uuid "62786e3e-5e1d-4969-adbb-9e762e4f66cb", :page 26, :position {:bounding {:x1 172.15185546875, :y1 761, :x2 640.2279663085938, :y2 781, :width 814, :height 1084.1799504073683}, :rects ({:x1 172.15185546875, :y1 761, :x2 640.2279663085938, :y2 781, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "To provide flexibility, Java has five additional primitive data types: "}, :properties {:color "purple"}} {:id #uuid "62786e66-0ca9-4c5e-84da-51becaf56df3", :page 26, :position {:bounding {:x1 142.8096923828125, :y1 782.6490478515625, :x2 491.859375, :y2 802.6490478515625, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.8096923828125, :y1 782.6490478515625, :x2 491.859375, :y2 802.6490478515625, :width 814, :height 1084.1799504073683} {:x1 451.265625, :y1 787.53125, :x2 485.9924011230469, :y2 801.53125, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "64-bit integers, with arithmetic operations ( long)"}, :properties {:color "green"}} {:id #uuid "62786e76-a383-4b40-8002-5b1108fb33ab", :page 26, :position {:bounding {:x1 142.8096923828125, :y1 804.2788696289062, :x2 500.53125, :y2 824.2788696289062, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.8096923828125, :y1 804.2788696289062, :x2 500.53125, :y2 824.2788696289062, :width 814, :height 1084.1799504073683} {:x1 451.265625, :y1 809.15625, :x2 494.6701965332031, :y2 823.15625, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "16-bit integers, with arithmetic operations ( short)"}, :properties {:color "red"}} {:id #uuid "62786e97-0078-4a18-af17-0ec51dde55e7", :page 26, :position {:bounding {:x1 142.8064422607422, :y1 825.9038696289062, :x2 508.078125, :y2 845.9038696289062, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.8064422607422, :y1 825.9038696289062, :x2 508.078125, :y2 845.9038696289062, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "16-bit characters, with arithmetic operations (char)"}, :properties {:color "purple"}} {:id #uuid "62786ead-33c8-4176-8f2e-53ada569992c", :page 26, :position {:bounding {:x1 142.8006134033203, :y1 847.5288696289062, :x2 483.390625, :y2 867.5288696289062, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.8006134033203, :y1 847.5288696289062, :x2 483.390625, :y2 867.5288696289062, :width 814, :height 1084.1799504073683} {:x1 442.8125, :y1 852.421875, :x2 477.5392761230469, :y2 866.421875, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "8-bit integers, with arithmetic operations ( byte)"}, :properties {:color "yellow"}} {:id #uuid "62786ebb-d020-4d13-b2b0-9f1ecb169570", :page 26, :position {:bounding {:x1 142.79693603515625, :y1 869.1538696289062, :x2 695.609375, :y2 889.1538696289062, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.79693603515625, :y1 869.1538696289062, :x2 695.609375, :y2 889.1538696289062, :width 814, :height 1084.1799504073683} {:x1 646.34375, :y1 874.046875, :x2 689.748291015625, :y2 888.046875, :width 814, :height 1084.1799504073683}), :page 26}, :content {:text "32-bit single-precision real numbers, again with arithmetic operations ( float)"}, :properties {:color "purple"}} {:id #uuid "62786ef4-48b0-4f04-b3d2-eeebde25ddd6", :page 24, :position {:bounding {:x1 104.36820983886719, :y1 127.85906982421875, :x2 813.9741821289062, :y2 169.46875, :width 814, :height 1084.1799504073683}, :rects ({:x1 299.3731994628906, :y1 127.85906982421875, :x2 813.9741821289062, :y2 148.62469482421875, :width 814, :height 1084.1799504073683} {:x1 104.36820983886719, :y1 149.46875, :x2 411.7063446044922, :y2 169.46875, :width 814, :height 1084.1799504073683}), :page 24}, :content {:text "We begin by considering the following four primitive data types that are the basis of the Java language:"}, :properties {:color "purple"}} {:id #uuid "62786f04-0460-4f60-a47c-671a05104a36", :page 24, :position {:bounding {:x1 142.79808044433594, :y1 171.1177978515625, :x2 434.296875, :y2 192.3209228515625, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.79808044433594, :y1 171.1177978515625, :x2 434.296875, :y2 192.3209228515625, :width 814, :height 1084.1799504073683}), :page 24}, :content {:text "Integers, with arithmetic operations (int)"}, :properties {:color "green"}} {:id #uuid "62786f11-7ee8-449c-86ce-cc97f4662e8c", :page 24, :position {:bounding {:x1 142.80181884765625, :y1 192.74761962890625, :x2 542.421875, :y2 213.93511962890625, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.80181884765625, :y1 192.74761962890625, :x2 542.421875, :y2 213.93511962890625, :width 814, :height 1084.1799504073683}), :page 24}, :content {:text "Real numbers, again with arithmetic operations (double)"}, :properties {:color "red"}} {:id #uuid "62786f1e-1410-4f55-a9c5-dfe437a1c375", :page 24, :position {:bounding {:x1 142.810302734375, :y1 214.37261962890625, :x2 655.890625, :y2 235.56011962890625, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.810302734375, :y1 214.37261962890625, :x2 655.890625, :y2 235.56011962890625, :width 814, :height 1084.1799504073683} {:x1 589.2644653320312, :y1 218.2391357421875, :x2 650.0245971679688, :y2 234.2391357421875, :width 814, :height 1084.1799504073683}), :page 24}, :content {:text "Booleans, the set of values { true, false } with logical operations (boolean)"}, :properties {:color "yellow"}} {:id #uuid "62786f45-b4a1-4233-a995-9ecd2abccb11", :page 24, :position {:bounding {:x1 142.8081512451172, :y1 235.99761962890625, :x2 664.328125, :y2 257.18511962890625, :width 814, :height 1084.1799504073683}, :rects ({:x1 142.8081512451172, :y1 235.99761962890625, :x2 664.328125, :y2 257.18511962890625, :width 814, :height 1084.1799504073683}), :page 24}, :content {:text "Characters, the alphanumeric characters and symbols that you type (char)"}, :properties {:color "purple"}} {:id #uuid "62786fae-64d2-459e-8fef-6c0b57aba4bd", :page 27, :position {:bounding {:x1 105.57373809814453, :y1 105.27435302734375, :x2 199.71388244628906, :y2 127.27435302734375, :width 814, :height 1084.1799504073683}, :rects ({:x1 105.57373809814453, :y1 105.27435302734375, :x2 199.71388244628906, :y2 127.27435302734375, :width 814, :height 1084.1799504073683}), :page 27}, :content {:text " S t a t e m e n t s  "}, :properties {:color "purple"}} {:id #uuid "627e553a-f11e-48f6-97b4-5b46c5ccfe40", :page 27, :position {:bounding {:x1 149.8304443359375, :y1 201.6123046875, :x2 729.992919921875, :y2 221.6123046875, :width 846.8999999999999, :height 1128}, :rects ({:x1 149.8304443359375, :y1 201.6123046875, :x2 729.992919921875, :y2 221.6123046875, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Declarations create variables of a specified type and name them with identifiers."}, :properties {:color "yellow"}} {:id #uuid "627e553d-491b-4fa8-b87d-cfac103925a4", :page 27, :position {:bounding {:x1 149.8304443359375, :y1 201.6123046875, :x2 729.992919921875, :y2 221.6123046875, :width 846.8999999999999, :height 1128}, :rects ({:x1 149.8304443359375, :y1 201.6123046875, :x2 729.992919921875, :y2 221.6123046875, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Declarations create variables of a specified type and name them with identifiers."}, :properties {:color "yellow"}} {:id #uuid "627e553e-9e7b-4eca-b13e-b2c6d0e791d4", :page 27, :position {:bounding {:x1 651.8389892578125, :y1 201.6123046875, :x2 725.4429931640625, :y2 221.6123046875, :width 846.8999999999999, :height 1128}, :rects ({:x1 651.8389892578125, :y1 201.6123046875, :x2 725.4429931640625, :y2 221.6123046875, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "identifiers"}, :properties {:color "yellow"}} {:id #uuid "627e553e-f821-402c-b4f4-66f1ac17f14f", :page 27, :position {:bounding {:x1 239.03125, :y1 201.6123046875, :x2 729.992919921875, :y2 221.6123046875, :width 846.8999999999999, :height 1128}, :rects ({:x1 239.03125, :y1 201.6123046875, :x2 729.992919921875, :y2 221.6123046875, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text " create variables of a specified type and name them with identifiers."}, :properties {:color "yellow"}} {:id #uuid "627e553f-6e8e-4bb1-9628-a960497e8799", :page 27, :position {:bounding {:x1 651.8389892578125, :y1 201.6123046875, :x2 725.4429931640625, :y2 221.6123046875, :width 846.8999999999999, :height 1128}, :rects ({:x1 651.8389892578125, :y1 201.6123046875, :x2 725.4429931640625, :y2 221.6123046875, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "identifiers"}, :properties {:color "yellow"}} {:id #uuid "627e55df-4867-434b-b4e4-01fc43231a43", :page 27, :position {:bounding {:x1 149.8370361328125, :y1 224.1197967529297, :x2 846.8722839355469, :y2 266.6066589355469, :width 846.8999999999999, :height 1128}, :rects ({:x1 149.83901977539062, :y1 224.1197967529297, :x2 846.8722839355469, :y2 244.11981201171875, :width 846.8999999999999, :height 1128} {:x1 149.8370361328125, :y1 246.60665893554688, :x2 187.63253784179688, :y2 266.6066589355469, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Assignments associate a data-type value (defined by an expression) with a vari-able. "}, :properties {:color "blue"}} {:id #uuid "627e560d-7b2a-4df4-80ed-f3fedc374103", :page 27, :position {:bounding {:x1 -0.0035400390625, :y1 246.60665893554688, :x2 846.9068603515625, :y2 311.6066589355469, :width 846.8999999999999, :height 1128}, :rects ({:x1 187.61767578125, :y1 246.60665893554688, :x2 846.9068603515625, :y2 266.6066589355469, :width 846.8999999999999, :height 1128} {:x1 -0.0035400390625, :y1 268.0285339355469, :x2 846.8770141601562, :y2 290.1847839355469, :width 846.8999999999999, :height 1128} {:x1 149.828125, :y1 291.6066589355469, :x2 270.9237060546875, :y2 311.6066589355469, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Java also has several implicit assignment idioms for changing the value of a data-type value relative to its current value, such as incrementing the value of an integer variable. "}, :properties {:color "yellow"}} {:id #uuid "627e5624-cae2-4671-8680-a447283f70c9", :page 27, :position {:bounding {:x1 139.3481903076172, :y1 313.0341796875, :x2 846.8858337402344, :y2 356.6066589355469, :width 846.8999999999999, :height 1128}, :rects ({:x1 144.6058349609375, :y1 313.0341796875, :x2 846.8858337402344, :y2 335.1904296875, :width 846.8999999999999, :height 1128} {:x1 139.3481903076172, :y1 319.1123046875, :x2 139.3666229248047, :y2 329.1123046875, :width 846.8999999999999, :height 1128} {:x1 149.85922241210938, :y1 336.6066589355469, :x2 650.6306762695312, :y2 356.6066589355469, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Conditionals provide for a simple change in the flow of execution—execute the statements in one of two blocks, depending on a specified condition."}, :properties {:color "blue"}} {:id #uuid "627e563d-aac0-48f0-9aa3-e5410f72857c", :page 27, :position {:bounding {:x1 149.83990478515625, :y1 359.1172790527344, :x2 846.8870239257812, :y2 401.6066589355469, :width 846.8999999999999, :height 1128}, :rects ({:x1 149.83990478515625, :y1 359.1172790527344, :x2 846.8870239257812, :y2 379.1172790527344, :width 846.8999999999999, :height 1128} {:x1 149.84320068359375, :y1 381.6066589355469, :x2 563.5397338867188, :y2 401.6066589355469, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Loops provide for a more profound change in the flow of execution—execute the statements in a block as long as a given condition is true."}, :properties {:color "yellow"}} {:id #uuid "627e5669-68ba-4f03-9121-5b671cccc0a7", :page 27, :position {:bounding {:x1 149.8363037109375, :y1 404.1172790527344, :x2 846.8760070800781, :y2 446.6066589355469, :width 846.8999999999999, :height 1128}, :rects ({:x1 149.83901977539062, :y1 404.1172790527344, :x2 846.8760070800781, :y2 426.2735290527344, :width 846.8999999999999, :height 1128} {:x1 149.8363037109375, :y1 426.6066589355469, :x2 539.02734375, :y2 446.6066589355469, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Calls and returns relate to static methods (see page 22), which provide another way to change the flow of execution and to organize code."}, :properties {:color "purple"}} {:id #uuid "627e5694-94c7-4907-a779-0888c4db6d2d", :page 27, :position {:bounding {:x1 109.83885192871094, :y1 449.1066589355469, :x2 743.5629730224609, :y2 491.606689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.83885192871094, :y1 449.1066589355469, :x2 743.5629730224609, :y2 469.1066589355469, :width 846.8999999999999, :height 1128} {:x1 109.84280395507812, :y1 471.6066589355469, :x2 287.6144104003906, :y2 491.606689453125, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "A  program  is  a  sequence  of  statements,  with  declarations,  assignments,  conditionals, loops, calls, and returns. "}, :properties {:color "yellow"}} {:id #uuid "627e56e4-6ae0-4862-9efd-d53218c17790", :page 27, :position {:bounding {:x1 -0.00292205810546875, :y1 471.6066589355469, :x2 846.9034423828125, :y2 536.591064453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 287.5992126464844, :y1 471.6066589355469, :x2 846.9034423828125, :y2 493.762939453125, :width 846.8999999999999, :height 1128} {:x1 -0.00292205810546875, :y1 493.012939453125, :x2 846.873908996582, :y2 515.169189453125, :width 846.8999999999999, :height 1128} {:x1 109.83059692382812, :y1 516.591064453125, :x2 151.26434326171875, :y2 536.591064453125, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Programs typically have a nested structure : a statement among the statements in a block within a conditional or a loop may itself be a conditional or a loop. "}, :properties {:color "blue"}} {:id #uuid "627e571c-ed84-4ae2-b6e3-178c601ac48f", :page 27, :position {:bounding {:x1 109.83837890625, :y1 570.9269409179688, :x2 211.44308471679688, :y2 591.9269409179688, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.83837890625, :y1 570.9269409179688, :x2 211.44308471679688, :y2 591.9269409179688, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "  D e c l a r a t i o n s .  "}, :properties {:color "blue"}} {:id #uuid "627e577c-420e-4367-af40-55a17b7593a9", :page 27, :position {:bounding {:x1 109.84492492675781, :y1 639.106689453125, :x2 846.9047241210938, :y2 681.591064453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 140.4923553466797, :y1 639.106689453125, :x2 846.9047241210938, :y2 661.262939453125, :width 846.8999999999999, :height 1128} {:x1 109.84492492675781, :y1 661.591064453125, :x2 196.3214111328125, :y2 681.591064453125, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Java  is  said  to  be  a     strongly  typed  language,  because  the  Java  compiler  checks  for consistency"}, :properties {:color "yellow"}} {:id #uuid "627e57da-5906-4d6c-ae10-b23899b8b5e1", :page 27, :position {:bounding {:x1 109.82467651367188, :y1 729.106689453125, :x2 743.7517700195312, :y2 771.591064453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 190.44805908203125, :y1 729.106689453125, :x2 743.7517700195312, :y2 749.106689453125, :width 846.8999999999999, :height 1128} {:x1 109.82467651367188, :y1 751.591064453125, :x2 492.9732666015625, :y2 771.591064453125, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "Generally the scope of a variable is composed of the statements that follow the declaration in the same block as the declaration. "}, :properties {:color "yellow"}} {:id #uuid "627e57ec-53e5-45a9-9746-f988677587ec", :page 27, :position {:bounding {:x1 109.84112548828125, :y1 783.43505859375, :x2 202.67999267578125, :y2 804.43505859375, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.84112548828125, :y1 783.43505859375, :x2 202.67999267578125, :y2 804.43505859375, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "  A s s i g n m e n t s ."}, :properties {:color "yellow"}} {:id #uuid "627e582d-797c-4fd3-a7fa-64a26d96f94d", :page 27, :position {:bounding {:x1 109.83001708984375, :y1 896.6041870117188, :x2 739.5755615234375, :y2 939.1041870117188, :width 846.8999999999999, :height 1128}, :rects ({:x1 538.3857421875, :y1 896.6041870117188, :x2 739.5755615234375, :y2 916.6041870117188, :width 846.8999999999999, :height 1128} {:x1 109.83001708984375, :y1 919.1041870117188, :x2 445.2725830078125, :y2 939.1041870117188, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text "The left-hand side of an as-signment statement must be a single variable"}, :properties {:color "yellow"}} {:id #uuid "627e5838-fc74-4de1-8f5a-d84a31a260c2", :page 27, :position {:bounding {:x1 109.83139038085938, :y1 919.1041870117188, :x2 744.323974609375, :y2 961.606689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 450.45306396484375, :y1 919.1041870117188, :x2 744.323974609375, :y2 939.1041870117188, :width 846.8999999999999, :height 1128} {:x1 109.83139038085938, :y1 941.606689453125, :x2 437.3963623046875, :y2 961.606689453125, :width 846.8999999999999, :height 1128}), :page 27}, :content {:text " the right-hand side can be an arbitrary expression that produces a value of the type. "}, :properties {:color "blue"}} {:id #uuid "627e5848-1e38-4370-9503-ee24b239eb19", :page 28, :position {:bounding {:x1 108.59317016601562, :y1 109.6832275390625, :x2 206.29306030273438, :y2 130.6832275390625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59317016601562, :y1 109.6832275390625, :x2 206.29306030273438, :y2 130.6832275390625, :width 846.8999999999999, :height 1128}), :page 28}, :content {:text "  C o n d i t i o n a l s ."}, :properties {:color "blue"}} {:id #uuid "627e58b1-9128-457d-9454-05d4acb807b8", :page 28, :position {:bounding {:x1 130, :y1 160, :x2 611, :y2 190, :width 846.8999999999999, :height 1128}, :rects (), :page 28}, :content {:text "[:span]", :image 1652447409618}, :properties {:color "blue"}} {:id #uuid "627e58c7-6c82-4860-9dfc-1f6cc9689609", :page 28, :position {:bounding {:x1 129, :y1 421, :x2 620, :y2 476, :width 846.8999999999999, :height 1128}, :rects (), :page 28}, :content {:text "[:span]", :image 1652447431402}, :properties {:color "yellow"}} {:id #uuid "627e58e1-c69a-4d3e-8975-416f50314dc3", :page 28, :position {:bounding {:x1 132, :y1 560, :x2 644, :y2 595, :width 846.8999999999999, :height 1128}, :rects (), :page 28}, :content {:text "[:span]", :image 1652447457417}, :properties {:color "yellow"}} {:id #uuid "627e5957-e446-400b-a24b-0938a7075744", :page 29, :position {:bounding {:x1 109.54063415527344, :y1 108.5634765625, :x2 281.822998046875, :y2 132.5634765625, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.54063415527344, :y1 108.5634765625, :x2 281.822998046875, :y2 132.5634765625, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text "Shortcut  notations "}, :properties {:color "yellow"}} {:id #uuid "627e59ec-67e5-4156-ac1f-e0e43f787330", :page 29, :position {:bounding {:x1 109.53817749023438, :y1 188.42445373535156, :x2 298.1648254394531, :y2 209.42445373535156, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.53817749023438, :y1 188.42445373535156, :x2 298.1648254394531, :y2 209.42445373535156, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text " I n i t i a l i z i n g   d e c l a r a t i o n s .  "}, :properties {:color "yellow"}} {:id #uuid "627e5a1d-b00c-4fe0-a819-406e47db13f6", :page 29, :position {:bounding {:x1 109.53526306152344, :y1 182.6957550048828, :x2 846.285400390625, :y2 231.6042938232422, :width 846.8999999999999, :height 1128}, :rects ({:x1 732.082275390625, :y1 182.6957550048828, :x2 846.285400390625, :y2 210.2738800048828, :width 846.8999999999999, :height 1128} {:x1 307.73223876953125, :y1 189.1176300048828, :x2 731.2236938476562, :y2 209.1176300048828, :width 846.8999999999999, :height 1128} {:x1 109.53526306152344, :y1 211.6042938232422, :x2 569.0127410888672, :y2 231.6042938232422, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text "We   c a n   c o m b i n e   a   d e c l a r a t i o n   w i t h   a n   a s s i g n m e n t   t o   i n i-tialize  a  variable  at  the  same  time  that  it  is  declared  (created)."}, :properties {:color "blue"}} {:id #uuid "627e5a7f-6f36-462f-aa29-74bd761340b2", :page 29, :position {:bounding {:x1 109.53865051269531, :y1 288.42694091796875, :x2 270.01239013671875, :y2 309.42694091796875, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.53865051269531, :y1 288.42694091796875, :x2 270.01239013671875, :y2 309.42694091796875, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text " I m p l i c i t   a s s i g n m e n t s . "}, :properties {:color "blue"}} {:id #uuid "627e5af9-944f-44f6-bc49-21686626b48a", :page 29, :position {:bounding {:x1 109.54397583007812, :y1 523.429443359375, :x2 293.2230224609375, :y2 544.429443359375, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.54397583007812, :y1 523.429443359375, :x2 293.2230224609375, :y2 544.429443359375, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text " S i n g l e - s t a t e m e n t   b l o c k s .  "}, :properties {:color "blue"}} {:id #uuid "627e5b20-324f-4779-b313-3a8ef10f4d4d", :page 29, :position {:bounding {:x1 109.54107666015625, :y1 578.4269409179688, :x2 209.80526733398438, :y2 599.4269409179688, :width 846.8999999999999, :height 1128}, :rects ({:x1 109.54107666015625, :y1 578.4269409179688, :x2 209.80526733398438, :y2 599.4269409179688, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text " F o r   n o t a t i o n .  "}, :properties {:color "blue"}} {:id #uuid "627e5b64-7c27-48a3-858e-916ba4b9a429", :page 29, :position {:bounding {:x1 85, :y1 671, :x2 683, :y2 930, :width 846.8999999999999, :height 1128}, :rects (), :page 29}, :content {:text "[:span]", :image 1652448104532}, :properties {:color "blue"}} {:id #uuid "627e5b75-2cbc-4b9f-80c1-b57fe6ec81ab", :page 30, :position {:bounding {:x1 410.3973388671875, :y1 937.891357421875, :x2 510.5018310546875, :y2 953.891357421875, :width 846.8999999999999, :height 1128}, :rects ({:x1 410.3973388671875, :y1 937.891357421875, :x2 510.5018310546875, :y2 953.891357421875, :width 846.8999999999999, :height 1128}), :page 30}, :content {:text "Java statements"}, :properties {:color "blue"}} {:id #uuid "627e5b9d-1672-4a6d-95f2-3afb8faf29af", :page 30, :position {:bounding {:x1 112, :y1 106, :x2 815, :y2 933, :width 846.8999999999999, :height 1128}, :rects (), :page 30}, :content {:text "[:span]", :image 1652448157528}, :properties {:color "blue"}} {:id #uuid "627f84fc-4fdf-48f7-ab62-43f85d3aa0a1", :page 28, :position {:bounding {:x1 111.15513610839844, :y1 512.179443359375, :x2 151.85540771484375, :y2 533.179443359375, :width 846.8999999999999, :height 1128}, :rects ({:x1 111.15513610839844, :y1 512.179443359375, :x2 151.85540771484375, :y2 533.179443359375, :width 846.8999999999999, :height 1128}), :page 28}, :content {:text "L o o p s ."}, :properties {:color "yellow"}} {:id #uuid "627f859c-2ce0-4072-81d8-72db775978f8", :page 29, :position {:bounding {:x1 109.54180908203125, :y1 524.1198120117188, :x2 743.1795043945312, :y2 566.6043090820312, :width 846.8999999999999, :height 1128}, :rects ({:x1 302.7815856933594, :y1 524.1198120117188, :x2 743.1795043945312, :y2 544.1198120117188, :width 846.8999999999999, :height 1128} {:x1 109.54180908203125, :y1 546.6043090820312, :x2 473.8189697265625, :y2 566.6043090820312, :width 846.8999999999999, :height 1128}), :page 29}, :content {:text "If a block of statements in a conditional or a loop has only a single statement, the curly braces may be omitted."}, :properties {:color "yellow"}} {:id #uuid "628623be-8bbe-4764-9129-b4e0fb62885d", :page 31, :position {:bounding {:x1 111.53950500488281, :y1 108.5634765625, :x2 165.9794921875, :y2 132.5634765625, :width 846.8999999999999, :height 1128}, :rects ({:x1 111.53950500488281, :y1 108.5634765625, :x2 165.9794921875, :y2 132.5634765625, :width 846.8999999999999, :height 1128}), :page 31}, :content {:text " A r r a y s  "}, :properties {:color "yellow"}} {:id #uuid "628623f4-1547-40b3-98f4-884dc14b7afa", :page 31, :position {:bounding {:x1 188.10711669921875, :y1 94.4337158203125, :x2 673.4689331054688, :y2 132.9180908203125, :width 846.8999999999999, :height 1128}, :rects ({:x1 214.34771728515625, :y1 94.4337158203125, :x2 252.7174072265625, :y2 132.9180908203125, :width 846.8999999999999, :height 1128} {:x1 188.10711669921875, :y1 111.6212158203125, :x2 673.4689331054688, :y2 131.6212158203125, :width 846.8999999999999, :height 1128}), :page 31}, :content {:text "An array stores a sequence of values that are all of the same type. "}, :properties {:color "yellow"}} {:id #uuid "62862419-9f5f-49e2-af82-e8edfb940675", :page 31, :position {:bounding {:x1 -0.00687408447265625, :y1 134.09954833984375, :x2 742.7670288085938, :y2 177.684814453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 589.6940307617188, :y1 134.09954833984375, :x2 742.7670288085938, :y2 154.09954833984375, :width 846.8999999999999, :height 1128} {:x1 -0.00687408447265625, :y1 155.52853393554688, :x2 720.998046875, :y2 177.684814453125, :width 846.8999999999999, :height 1128}), :page 31}, :content {:text "The method that we use to refer to individual values in an array is numbering and then indexing them."}, :properties {:color "yellow"}} {:id #uuid "6286246d-730a-4f0f-ace1-14d948c42c9f", :page 31, :position {:bounding {:x1 108.57998657226562, :y1 278.42694091796875, :x2 368.7562561035156, :y2 299.42694091796875, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.57998657226562, :y1 278.42694091796875, :x2 368.7562561035156, :y2 299.42694091796875, :width 846.8999999999999, :height 1128}), :page 31}, :content {:text "Creating and initializing an array."}, :properties {:color "yellow"}} {:id #uuid "628624c3-b472-4f28-925d-913b306cd895", :page 31, :position {:bounding {:x1 420, :y1 444, :x2 756, :y2 710, :width 846.8999999999999, :height 1128}, :rects (), :page 31}, :content {:text "[:span]", :image 1652958403792}, :properties {:color "yellow"}} {:id #uuid "628624df-6c61-402b-a7df-b7f2730df75e", :page 31, :position {:bounding {:x1 -0.0152130126953125, :y1 774.1173095703125, :x2 846.8847503662109, :y2 839.106689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 144.47119140625, :y1 774.1173095703125, :x2 741.8710327148438, :y2 794.1173095703125, :width 846.8999999999999, :height 1128} {:x1 -0.0152130126953125, :y1 795.528564453125, :x2 846.8847503662109, :y2 817.684814453125, :width 846.8999999999999, :height 1128} {:x1 108.56851196289062, :y1 819.106689453125, :x2 215.71636962890625, :y2 839.106689453125, :width 846.8999999999999, :height 1128}), :page 31}, :content {:text "When you begin to write code that uses an array, you must be sure that your code declares, creates, and initializes it. Omitting one of these steps is a common program-ming mistake. "}, :properties {:color "yellow"}} {:id #uuid "62862509-9cb1-48d9-a1ab-ba0ec2ea90a1", :page 31, :position {:bounding {:x1 108.5860595703125, :y1 850.9244384765625, :x2 190.7021484375, :y2 871.9244384765625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.5860595703125, :y1 850.9244384765625, :x2 190.7021484375, :y2 871.9244384765625, :width 846.8999999999999, :height 1128}), :page 31}, :content {:text "Short form"}, :properties {:color "yellow"}} {:id #uuid "6286253b-6a1f-41a7-84b3-3e60612de294", :page 32, :position {:bounding {:x1 -0.0152130126953125, :y1 109.74383544921875, :x2 742.497802734375, :y2 153.309814453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 573.9436645507812, :y1 109.74383544921875, :x2 742.497802734375, :y2 129.74383544921875, :width 846.8999999999999, :height 1128} {:x1 -0.0152130126953125, :y1 131.153564453125, :x2 504.48968505859375, :y2 153.309814453125, :width 846.8999999999999, :height 1128} {:x1 436.640625, :y1 136.3125, :x2 499.867431640625, :y2 151.3125, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "he default initial value is zero for numeric types and false for type boolean."}, :properties {:color "yellow"}} {:id #uuid "62862567-0a0c-44ab-99e7-5da71c8ce168", :page 32, :position {:bounding {:x1 108.58908081054688, :y1 209.0494384765625, :x2 226.53900146484375, :y2 230.0494384765625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.58908081054688, :y1 209.0494384765625, :x2 226.53900146484375, :y2 230.0494384765625, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "Using  an  array."}, :properties {:color "yellow"}} {:id #uuid "6286258c-4386-4576-a4a7-bdf6289f0e4d", :page 32, :position {:bounding {:x1 -0.0112457275390625, :y1 277.231689453125, :x2 741.0314331054688, :y2 321.137939453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 228.9503173828125, :y1 277.231689453125, :x2 741.0314331054688, :y2 297.231689453125, :width 846.8999999999999, :height 1128} {:x1 -0.0112457275390625, :y1 298.637939453125, :x2 468.75372314453125, :y2 321.137939453125, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "Once  we  create  an  array,  its  size  is  fixed. A  program  can  refer  to  the length  of  an  array a[]  with  the  code a.length."}, :properties {:color "yellow"}} {:id #uuid "628625f7-dc6e-45cc-bf70-bfab5f8f7ccc", :page 32, :position {:bounding {:x1 108.59007263183594, :y1 399.05194091796875, :x2 174.020263671875, :y2 420.05194091796875, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59007263183594, :y1 399.05194091796875, :x2 174.020263671875, :y2 420.05194091796875, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "   A l i a s i n g .  "}, :properties {:color "yellow"}} {:id #uuid "62862623-de68-47d0-a0a8-f573ca093890", :page 32, :position {:bounding {:x1 108.60205078125, :y1 393.6641845703125, :x2 846.88818359375, :y2 442.22930908203125, :width 846.8999999999999, :height 1128}, :rects ({:x1 326.4272766113281, :y1 393.6641845703125, :x2 846.88818359375, :y2 420.8985595703125, :width 846.8999999999999, :height 1128} {:x1 184.66375732421875, :y1 399.7451171875, :x2 325.78643798828125, :y2 419.7451171875, :width 846.8999999999999, :height 1128} {:x1 108.60205078125, :y1 422.22930908203125, :x2 523.4955444335938, :y2 442.22930908203125, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "Note  carefully  that an array name refers to the whole array—if we assign one array name to another, then both refer to the same array, "}, :properties {:color "yellow"}} {:id #uuid "62862653-92a1-40d5-8523-fa2856b0b07c", :page 32, :position {:bounding {:x1 108.58914184570312, :y1 726.5469360351562, :x2 298.4100646972656, :y2 747.5469360351562, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.58914184570312, :y1 726.5469360351562, :x2 298.4100646972656, :y2 747.5469360351562, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "  T w o - d i m e n s i o n a l   a r r a y s .  "}, :properties {:color "yellow"}} {:id #uuid "6286268f-4c9c-4eab-a873-af0dff5fbefc", :page 32, :position {:bounding {:x1 108.60595703125, :y1 720.8182373046875, :x2 846.8765869140625, :y2 769.7293090820312, :width 846.8999999999999, :height 1128}, :rects ({:x1 324.89459228515625, :y1 720.8182373046875, :x2 846.8765869140625, :y2 748.3963623046875, :width 846.8999999999999, :height 1128} {:x1 308.40087890625, :y1 727.2401123046875, :x2 738.7088623046875, :y2 747.2401123046875, :width 846.8999999999999, :height 1128} {:x1 108.60595703125, :y1 749.7293090820312, :x2 206.926513671875, :y2 769.7293090820312, :width 846.8999999999999, :height 1128}), :page 32}, :content {:text "A  two-dimensional array in Java is an array of one-dimen-sional arrays. "}, :properties {:color "yellow"}} {:id #uuid "628626f0-bb64-4323-811c-9ffac36b6d39", :page 34, :position {:bounding {:x1 331.74395751953125, :y1 929.849853515625, :x2 512.2850341796875, :y2 945.849853515625, :width 846.8999999999999, :height 1128}, :rects ({:x1 331.74395751953125, :y1 929.849853515625, :x2 512.2850341796875, :y2 945.849853515625, :width 846.8999999999999, :height 1128}), :page 34}, :content {:text " T y p i c a l   a r r a y - p r o c e s s i n g   c o d e"}, :properties {:color "yellow"}} {:id #uuid "6286275a-8dd8-43c8-82b7-18482dd8f863", :page 34, :position {:bounding {:x1 90, :y1 156, :x2 766, :y2 893, :width 846.8999999999999, :height 1128}, :rects (), :page 34}, :content {:text "[:span]", :image 1652959066120}, :properties {:color "yellow"}} {:id #uuid "62862795-c738-424c-9fee-de46d070c11f", :page 35, :position {:bounding {:x1 108.58895874023438, :y1 108.5634765625, :x2 241.74346923828125, :y2 132.5634765625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.58895874023438, :y1 108.5634765625, :x2 241.74346923828125, :y2 132.5634765625, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "    S t a t i c    m e t h o d s  "}, :properties {:color "yellow"}} {:id #uuid "628627ed-617e-4cd3-b8c5-60cd689a16da", :page 35, :position {:bounding {:x1 108.59576416015625, :y1 156.606689453125, :x2 846.8815307617188, :y2 199.106689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 201.50750732421875, :y1 156.606689453125, :x2 846.8815307617188, :y2 178.762939453125, :width 846.8999999999999, :height 1128} {:x1 108.59576416015625, :y1 179.106689453125, :x2 576.4158935546875, :y2 199.106689453125, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "Static methods are called functions in many programming languages, since they can behave like mathematical functions, as described next."}, :properties {:color "yellow"}} {:id #uuid "628627f9-b379-4bf0-af10-febd31e5b91e", :page 35, :position {:bounding {:x1 -0.00562286376953125, :y1 179.106689453125, :x2 846.8932418823242, :y2 245.169189453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 581.01025390625, :y1 179.106689453125, :x2 742.4226684570312, :y2 199.106689453125, :width 846.8999999999999, :height 1128} {:x1 -0.00562286376953125, :y1 200.512939453125, :x2 846.8932418823242, :y2 222.669189453125, :width 846.8999999999999, :height 1128} {:x1 -0.00562286376953125, :y1 223.012939453125, :x2 407.5986328125, :y2 245.169189453125, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "Each static method is a sequence of statements that are executed, one after the other, when the static method is called, in the manner described below. "}, :properties {:color "red"}} {:id #uuid "6286280e-7527-45f2-b776-d56720c1e3fb", :page 35, :position {:bounding {:x1 -0.00562286376953125, :y1 224.091064453125, :x2 846.8915405273438, :y2 267.669189453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 407.5830078125, :y1 224.091064453125, :x2 846.8915405273438, :y2 244.091064453125, :width 846.8999999999999, :height 1128} {:x1 -0.00562286376953125, :y1 245.512939453125, :x2 302.14349365234375, :y2 267.669189453125, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "The modifier static distinguishes these meth-ods from instance methods"}, :properties {:color "purple"}} {:id #uuid "6286288c-5050-4b28-9063-44e7cc7b4ab8", :page 35, :position {:bounding {:x1 108.58859252929688, :y1 300.9276123046875, :x2 303.3229064941406, :y2 321.9276123046875, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.58859252929688, :y1 300.9276123046875, :x2 303.3229064941406, :y2 321.9276123046875, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text " D e fi n i n g   a   s t a t i c   m e t h o d .  "}, :properties {:color "purple"}} {:id #uuid "628628c4-a462-4972-9c7f-4c34329fb681", :page 35, :position {:bounding {:x1 108.59814453125, :y1 295.1832275390625, :x2 846.8892822265625, :y2 344.10430908203125, :width 846.8999999999999, :height 1128}, :rects ({:x1 329.49041748046875, :y1 295.1832275390625, :x2 846.8892822265625, :y2 322.7769775390625, :width 846.8999999999999, :height 1128} {:x1 312.9007873535156, :y1 301.6207275390625, :x2 743.0101318359375, :y2 321.6207275390625, :width 846.8999999999999, :height 1128} {:x1 108.59814453125, :y1 324.10430908203125, :x2 284.10321044921875, :y2 344.10430908203125, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "A method encapsulates a computation that is defined as a sequence  of  statements.  "}, :properties {:color "yellow"}} {:id #uuid "628628d4-30ed-43f6-9e3a-a010aff2b9e6", :page 35, :position {:bounding {:x1 -0.00333404541015625, :y1 324.10430908203125, :x2 846.8905029296875, :y2 411.591064453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 295.32366943359375, :y1 324.10430908203125, :x2 846.8905029296875, :y2 346.18243408203125, :width 846.8999999999999, :height 1128} {:x1 -0.00333404541015625, :y1 345.528564453125, :x2 846.8802795410156, :y2 367.684814453125, :width 846.8999999999999, :height 1128} {:x1 -0.00333404541015625, :y1 368.028564453125, :x2 846.8864135742188, :y2 390.184814453125, :width 846.8999999999999, :height 1128} {:x1 108.59530639648438, :y1 391.591064453125, :x2 409.61810302734375, :y2 411.591064453125, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "  method  takes     arguments  (values  of  given  data  types)  and computes  a     return  value  of  some  data  type  that  depends  upon  the  arguments  (such as a value defined by a mathematical function) or causes a  side effect that depends on the arguments (such as printing a value)."}, :properties {:color "yellow"}} {:id #uuid "62862946-42cc-4b50-ade4-53b6f9142466", :page 35, :position {:bounding {:x1 15, :y1 425, :x2 418, :y2 695, :width 846.8999999999999, :height 1128}, :rects (), :page 35}, :content {:text "[:span]", :image 1652959558492}, :properties {:color "yellow"}} {:id #uuid "6286297d-ae6f-45ef-b65a-a838ab1a9a12", :page 35, :position {:bounding {:x1 426.350830078125, :y1 648.427490234375, :x2 607.9632568359375, :y2 669.427490234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 426.350830078125, :y1 648.427490234375, :x2 607.9632568359375, :y2 669.427490234375, :width 846.8999999999999, :height 1128}), :page 35}, :content {:text "I n v o k i n g   a    s t a t i c   m e t h o d ."}, :properties {:color "yellow"}} {:id #uuid "62862a50-d179-46fd-952c-f80773982fbf", :page 36, :position {:bounding {:x1 291.77960205078125, :y1 946.2626953125, :x2 554.4415893554688, :y2 962.2626953125, :width 846.8999999999999, :height 1128}, :rects ({:x1 291.77960205078125, :y1 946.2626953125, :x2 554.4415893554688, :y2 962.2626953125, :width 846.8999999999999, :height 1128}), :page 36}, :content {:text "Ty pic al imp le m e nt ations of s t atic m e tho ds"}, :properties {:color "yellow"}} {:id #uuid "62862a7e-488c-4ccc-bbb7-478480763695", :page 36, :position {:bounding {:x1 128, :y1 146, :x2 746, :y2 912, :width 846.8999999999999, :height 1128}, :rects (), :page 36}, :content {:text "[:span]", :image 1652959870096}, :properties {:color "yellow"}} {:id #uuid "62862aa5-13b1-4703-b9d2-2a5450670e63", :page 37, :position {:bounding {:x1 108.58891296386719, :y1 109.67852783203125, :x2 278.9246520996094, :y2 130.678466796875, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.58891296386719, :y1 109.67852783203125, :x2 278.9246520996094, :y2 130.678466796875, :width 846.8999999999999, :height 1128}), :page 37}, :content {:text " P r o p e r t i e s   o f   m e t h o d s .  "}, :properties {:color "yellow"}} {:id #uuid "62862ad5-7020-4b1c-88eb-694a0d19681f", :page 37, :position {:bounding {:x1 148.59228515625, :y1 155.3673095703125, :x2 372.25921630859375, :y2 175.3673095703125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59228515625, :y1 155.3673095703125, :x2 372.25921630859375, :y2 175.3673095703125, :width 846.8999999999999, :height 1128}), :page 37}, :content {:text "Arguments are    passed by value. "}, :properties {:color "yellow"}} {:id #uuid "62862bfc-882f-49c3-bd6a-bbaf3867376e", :page 37, :position {:bounding {:x1 148.582763671875, :y1 447.8673095703125, :x2 386.94427490234375, :y2 467.8673095703125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.582763671875, :y1 447.8673095703125, :x2 386.94427490234375, :y2 467.8673095703125, :width 846.8999999999999, :height 1128}), :page 37}, :content {:text "Method names can be   overloaded."}, :properties {:color "yellow"}} {:id #uuid "62862c4c-b94c-464d-866d-66405460005d", :page 37, :position {:bounding {:x1 148.5872802734375, :y1 560.3648071289062, :x2 688.638671875, :y2 580.3648071289062, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.5872802734375, :y1 560.3648071289062, :x2 688.638671875, :y2 580.3648071289062, :width 846.8999999999999, :height 1128}), :page 37}, :content {:text "A method has a single return value but may have multiple  return statements."}, :properties {:color "yellow"}} {:id #uuid "62862c83-9d01-43b8-9604-cd71bec55228", :page 37, :position {:bounding {:x1 148.59042358398438, :y1 717.8698120117188, :x2 364.7162170410156, :y2 737.8698120117188, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59042358398438, :y1 717.8698120117188, :x2 364.7162170410156, :y2 737.8698120117188, :width 846.8999999999999, :height 1128}), :page 37}, :content {:text "A method can have   side effects."}, :properties {:color "yellow"}} {:id #uuid "62862cd6-b1b9-4344-a4a7-1c0376c2e900", :page 37, :position {:bounding {:x1 148.584716796875, :y1 785.3516845703125, :x2 846.8853149414062, :y2 827.8541870117188, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.584716796875, :y1 785.3516845703125, :x2 846.8853149414062, :y2 805.3516845703125, :width 846.8999999999999, :height 1128} {:x1 148.58538818359375, :y1 807.8541870117188, :x2 730.2286987304688, :y2 827.8541870117188, :width 846.8999999999999, :height 1128}), :page 37}, :content {:text "A void static method is said to produce side effects (consume input, produce output, change entries in an array, or otherwise change the state of the system). "}, :properties {:color "yellow"}} {:id #uuid "62862d0f-63de-454e-8597-6c53464e698c", :page 38, :position {:bounding {:x1 108.58786010742188, :y1 109.6832275390625, :x2 188.65081787109375, :y2 130.6832275390625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.58786010742188, :y1 109.6832275390625, :x2 188.65081787109375, :y2 130.6832275390625, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "   R e c u r s i o n .  "}, :properties {:color "yellow"}} {:id #uuid "62862dbd-77a8-45f4-ab22-6a4944e283ac", :page 38, :position {:bounding {:x1 -0.011871337890625, :y1 177.86480712890625, :x2 846.75, :y2 242.856689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 363.1777648925781, :y1 177.86480712890625, :x2 742.1485595703125, :y2 197.86480712890625, :width 846.8999999999999, :height 1128} {:x1 -0.011871337890625, :y1 199.27853393554688, :x2 846.75, :y2 221.434814453125, :width 846.8999999999999, :height 1128} {:x1 108.57058715820312, :y1 222.856689453125, :x2 531.1508178710938, :y2 242.856689453125, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "We often use recursive implementations of methods because they can lead to compact, elegant code that is easier to understand than a cor-responding  implementation  that  does  not  use  recursion. "}, :properties {:color "yellow"}} {:id #uuid "62862e7f-65a8-45a8-950b-fd034486831a", :page 38, :position {:bounding {:x1 108.5479736328125, :y1 312.841064453125, :x2 742.252197265625, :y2 355.325439453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 328.6851806640625, :y1 312.841064453125, :x2 742.252197265625, :y2 332.841064453125, :width 846.8999999999999, :height 1128} {:x1 108.5479736328125, :y1 335.325439453125, :x2 253.1258544921875, :y2 355.325439453125, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "There are three important rules of thumb in developing recursive programs:"}, :properties {:color "yellow"}} {:id #uuid "62862e9f-265b-4736-a703-f34274a75dbc", :page 38, :position {:bounding {:x1 -0.00624847412109375, :y1 357.867919921875, :x2 846.89013671875, :y2 401.434814453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59234619140625, :y1 357.867919921875, :x2 846.89013671875, :y2 380.039794921875, :width 846.8999999999999, :height 1128} {:x1 -0.00624847412109375, :y1 379.278564453125, :x2 505.375, :y2 401.434814453125, :width 846.8999999999999, :height 1128} {:x1 446.59375, :y1 384.4375, :x2 500.77490234375, :y2 399.4375, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "The recursion has a  base case—we always include a conditional statement as the first statement in the program that has a return."}, :properties {:color "yellow"}} {:id #uuid "62862ef3-9c8b-4c41-8745-877ca982f666", :page 38, :position {:bounding {:x1 148.58392333984375, :y1 402.8673095703125, :x2 846.8949584960938, :y2 445.356689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.58392333984375, :y1 402.8673095703125, :x2 846.8949584960938, :y2 422.8673095703125, :width 846.8999999999999, :height 1128} {:x1 148.5845947265625, :y1 425.356689453125, :x2 473.9461669921875, :y2 445.356689453125, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "Recursive calls must address subproblems that are smaller in some sense, so that recursive calls converge to the base case."}, :properties {:color "purple"}} {:id #uuid "62862f30-d3d2-49af-876d-0cf6d7a35393", :page 38, :position {:bounding {:x1 148.59228515625, :y1 470.36474609375, :x2 589.6299438476562, :y2 490.36474609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59228515625, :y1 470.36474609375, :x2 589.6299438476562, :y2 490.36474609375, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "Recursive calls should not address subproblems that overlap."}, :properties {:color "red"}} {:id #uuid "62862f80-f6b8-4d59-a9e6-8f72ea9df128", :page 38, :position {:bounding {:x1 108.59112548828125, :y1 515.356689453125, :x2 742.23876953125, :y2 557.856689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59130859375, :y1 515.356689453125, :x2 742.23876953125, :y2 535.356689453125, :width 846.8999999999999, :height 1128} {:x1 108.59112548828125, :y1 537.856689453125, :x2 254.56781005859375, :y2 557.856689453125, :width 846.8999999999999, :height 1128}), :page 38}, :content {:text "Violating any of these guidelines is likely to lead to incorrect results or a spectacularly inefficient  program "}, :properties {:color "red"}} {:id #uuid "62862ff1-9dee-47be-b69e-c653dda1fc55", :page 39, :position {:bounding {:x1 108.59292602539062, :y1 109.67852783203125, :x2 314.84808349609375, :y2 130.678466796875, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59292602539062, :y1 109.67852783203125, :x2 314.84808349609375, :y2 130.678466796875, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Basic programming model."}, :properties {:color "red"}} {:id #uuid "62863017-8564-4048-96c2-d117dc3230e4", :page 39, :position {:bounding {:x1 -0.00958251953125, :y1 93.5435791015625, :x2 846.8989868164062, :y2 198.934814453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 341.5087585449219, :y1 93.5435791015625, :x2 846.8856201171875, :y2 131.5279541015625, :width 846.8999999999999, :height 1128} {:x1 324.94622802734375, :y1 110.3717041015625, :x2 742.6417236328125, :y2 130.3717041015625, :width 846.8999999999999, :height 1128} {:x1 -0.00958251953125, :y1 131.85430908203125, :x2 846.8916625976562, :y2 153.93243408203125, :width 846.8999999999999, :height 1128} {:x1 -0.00457763671875, :y1 154.27606201171875, :x2 846.8989868164062, :y2 176.43231201171875, :width 846.8999999999999, :height 1128} {:x1 -0.00458526611328125, :y1 176.778564453125, :x2 471.50830078125, :y2 198.934814453125, :width 846.8999999999999, :height 1128} {:x1 345.609375, :y1 181.9375, :x2 390.7650451660156, :y2 196.9375, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "A library of static methods is a set of static methods that are defined in a Java class, by creating a file with the keywords public class followed by the class name, followed by the static methods, enclosed in braces, kept in a file with the same name as the class and a .java extension. "}, :properties {:color "yellow"}} {:id #uuid "628630c7-d582-408f-a9a1-f3fd0d9fbe67", :page 39, :position {:bounding {:x1 108.59219360351562, :y1 434.6744384765625, :x2 293.1986083984375, :y2 455.6744384765625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59219360351562, :y1 434.6744384765625, :x2 293.1986083984375, :y2 455.6744384765625, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Modular programming. "}, :properties {:color "yellow"}} {:id #uuid "628630f9-9230-4bdd-bac4-ffc192e90172", :page 39, :position {:bounding {:x1 -0.01457977294921875, :y1 435.36767578125, :x2 846.899658203125, :y2 522.856689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 299.2630615234375, :y1 435.36767578125, :x2 738.6063232421875, :y2 455.36767578125, :width 846.8999999999999, :height 1128} {:x1 -0.01457977294921875, :y1 456.85430908203125, :x2 846.8809814453125, :y2 478.93243408203125, :width 846.8999999999999, :height 1128} {:x1 -0.01457977294921875, :y1 479.278564453125, :x2 846.899658203125, :y2 501.434814453125, :width 846.8999999999999, :height 1128} {:x1 108.5704345703125, :y1 502.856689453125, :x2 177.1282958984375, :y2 522.856689453125, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Of critical importance in this model is that libraries of stat-ic  methods  enable     modular  programming  where  we  build  libraries  of  static  methods (modules) and a static method in one library can call static methods defined in other libraries. "}, :properties {:color "yellow"}} {:id #uuid "6286313c-0e44-4df9-a2e3-2d47dea446c2", :page 39, :position {:bounding {:x1 177.11273193359375, :y1 502.856689453125, :x2 627.9400634765625, :y2 522.856689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 177.11273193359375, :y1 502.856689453125, :x2 627.9400634765625, :y2 522.856689453125, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "This approach has many important advantages. It allows us to"}, :properties {:color "red"}} {:id #uuid "62863151-8f17-4bbd-ae11-095268fa349b", :page 39, :position {:bounding {:x1 148.5860595703125, :y1 525.3623046875, :x2 682.2213745117188, :y2 567.856689453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59027099609375, :y1 525.3623046875, :x2 682.2213745117188, :y2 545.3623046875, :width 846.8999999999999, :height 1128} {:x1 148.5860595703125, :y1 547.856689453125, :x2 264.7752990722656, :y2 567.856689453125, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Wo r k   w i t h   m o d u l e s   o f   r e a s o n a b l e   s i z e ,   e v e n   i n   p r o g r a m   i n v o l v i n g   a   l a r g e  amount of code"}, :properties {:color "red"}} {:id #uuid "628631d6-792d-4b4d-a160-0d416e9856bf", :page 39, :position {:bounding {:x1 148.5899658203125, :y1 570.3673095703125, :x2 550.8486328125, :y2 590.3673095703125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.5899658203125, :y1 570.3673095703125, :x2 550.8486328125, :y2 590.3673095703125, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Share and reuse code without having to reimplement it"}, :properties {:color "yellow"}} {:id #uuid "628631e9-0cf8-4845-b441-44d5cef5664a", :page 39, :position {:bounding {:x1 148.59344482421875, :y1 592.8698120117188, :x2 471.0281982421875, :y2 612.8698120117188, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59344482421875, :y1 592.8698120117188, :x2 471.0281982421875, :y2 612.8698120117188, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Easily substitute improved implementations"}, :properties {:color "purple"}} {:id #uuid "628631fe-6351-4bf3-ae0e-c6f6b7adfe69", :page 39, :position {:bounding {:x1 148.5843505859375, :y1 615.3698120117188, :x2 706.5894165039062, :y2 635.3698120117188, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.5843505859375, :y1 615.3698120117188, :x2 706.5894165039062, :y2 635.3698120117188, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Develop appropriate abstract models for addressing programming problems"}, :properties {:color "yellow"}} {:id #uuid "6286320e-45b7-4a7f-9f6d-08cadda9d223", :page 39, :position {:bounding {:x1 148.58837890625, :y1 637.8698120117188, :x2 292.72442626953125, :y2 657.8698120117188, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.58837890625, :y1 637.8698120117188, :x2 292.72442626953125, :y2 657.8698120117188, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "Localize debugging"}, :properties {:color "purple"}} {:id #uuid "62863250-2e3a-4740-ad71-2e3a4334fc75", :page 39, :position {:bounding {:x1 108.5908203125, :y1 737.1769409179688, :x2 200.7086181640625, :y2 758.1769409179688, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.5908203125, :y1 737.1769409179688, :x2 200.7086181640625, :y2 758.1769409179688, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "  U n i t   t e s t i n g . "}, :properties {:color "purple"}} {:id #uuid "62863282-9959-4d6c-a8e3-3367da27363d", :page 39, :position {:bounding {:x1 108.57916259765625, :y1 731.4425659179688, :x2 846.3005981445312, :y2 780.3543090820312, :width 846.8999999999999, :height 1128}, :rects ({:x1 598.65625, :y1 731.4425659179688, :x2 846.3005981445312, :y2 759.3331909179688, :width 846.8999999999999, :height 1128} {:x1 212.90338134765625, :y1 737.8701171875, :x2 731.9807739257812, :y2 757.8701171875, :width 846.8999999999999, :height 1128} {:x1 108.57916259765625, :y1 760.3543090820312, :x2 541.258544921875, :y2 780.3543090820312, :width 846.8999999999999, :height 1128}), :page 39}, :content {:text "A best practice in Java programming is to include a main() in every li-brary of static methods that tests the methods in the library"}, :properties {:color "purple"}} {:id #uuid "6351f1e3-84ae-4612-be83-10b47990160d", :page 202, :position {:bounding {:x1 108.59375, :y1 300.9375, :x2 233.281494140625, :y2 321.9375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 300.9375, :x2 233.281494140625, :y2 321.9375, :width 846.8999999999999, :height 1128}), :page 202}, :content {:text "Warmup: 2-sum"}, :properties {:color "yellow"}} {:id #uuid "6351f548-d22f-405a-9813-063727a6309a", :page 202, :position {:bounding {:x1 0, :y1 224, :x2 738.8817749023438, :y2 502.609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 846.8999999999999, :height 1128} {:x1 0, :y1 240, :x2 0, :y2 256, :width 846.8999999999999, :height 1128} {:x1 709.5404052734375, :y1 436.609375, :x2 738.2918090820312, :y2 456.609375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 459.109375, :x2 738.8817749023438, :y2 480.109375, :width 846.8999999999999, :height 1128} {:x1 498.71875, :y1 463.1875, :x2 538.21875, :y2 478.1875, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 481.609375, :x2 603.2127075195312, :y2 502.609375, :width 846.8999999999999, :height 1128} {:x1 287.859375, :y1 485.6875, :x2 336.375, :y2 500.6875, :width 846.8999999999999, :height 1128} {:x1 477.8125, :y1 485.6875, :x2 517.3125, :y2 500.6875, :width 846.8999999999999, :height 1128}), :page 202}, :content {:text "The improved algorithm is based on the fact that an entry a[i] is one of a pair that sums to0 if and only if the value -a[i] is in the array (and a[i] is not zero)."}, :properties {:color "yellow"}} {:id #uuid "6351f61c-9eab-4d92-b267-51e10ba91f99", :page 186, :position {:bounding {:x1 108.59375, :y1 503.4375, :x2 175.37774658203125, :y2 524.4375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 503.4375, :x2 175.37774658203125, :y2 524.4375, :width 846.8999999999999, :height 1128}), :page 186}, :content {:text "Example"}, :properties {:color "yellow"}} {:id #uuid "6351f648-e083-426d-9974-9864c0272664", :page 186, :position {:bounding {:x1 0, :y1 272, :x2 738.5435180664062, :y2 547.609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 846.8999999999999, :height 1128} {:x1 611.484375, :y1 505.1875, :x2 738.5435180664062, :y2 526.1875, :width 846.8999999999999, :height 1128} {:x1 683.71875, :y1 508.1875, :x2 684.455322265625, :y2 523.1875, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 526.609375, :x2 679.0941162109375, :y2 547.609375, :width 846.8999999999999, :height 1128} {:x1 497.8125, :y1 530.6875, :x2 508.671875, :y2 545.6875, :width 846.8999999999999, :height 1128}), :page 186}, :content {:text "ThreeSum shown here, which counts the number of triples in a file of N integers that sum to 0 "}, :properties {:color "yellow"}} {:id #uuid "6351f78d-59cd-4d3e-b48b-66375ea78299", :page 202, :position {:bounding {:x1 0, :y1 256, :x2 738.8734741210938, :y2 571.1875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 846.8999999999999, :height 1128} {:x1 0, :y1 272, :x2 0, :y2 288, :width 846.8999999999999, :height 1128} {:x1 0, :y1 288, :x2 0, :y2 304, :width 846.8999999999999, :height 1128} {:x1 607.3662109375, :y1 481.609375, :x2 738.4241333007812, :y2 501.609375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 504.109375, :x2 738.8734741210938, :y2 525.109375, :width 846.8999999999999, :height 1128} {:x1 633.046875, :y1 508.1875, :x2 672.546875, :y2 523.1875, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 526.609375, :x2 738.7318725585938, :y2 547.609375, :width 846.8999999999999, :height 1128} {:x1 297.625, :y1 530.6875, :x2 346.140625, :y2 545.6875, :width 846.8999999999999, :height 1128} {:x1 382.90625, :y1 530.6875, :x2 440.46875, :y2 545.6875, :width 846.8999999999999, :height 1128} {:x1 459.078125, :y1 530.6875, :x2 567.4439086914062, :y2 545.6875, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 550.1875, :x2 392.8963317871094, :y2 571.1875, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 553.1875, :x2 118.1754150390625, :y2 568.1875, :width 846.8999999999999, :height 1128} {:x1 160.53125, :y1 553.1875, :x2 203.875, :y2 568.1875, :width 846.8999999999999, :height 1128}), :page 202}, :content {:text "To solve the problem, we sort the array (to enable binary search) and then, for every entry a[i] in the array, do a binary search for -a[i] with rank() in BinarySearch. If the result is an index j with j > i, we increment the count"}, :properties {:color "blue"}} {:id #uuid "6351f7f5-621e-41a3-8bca-fe238afeb499", :page 203, :position {:bounding {:x1 152.47113037109375, :y1 132.234375, :x2 646.53125, :y2 152.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 152.47113037109375, :y1 132.234375, :x2 646.53125, :y2 152.234375, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "the running time of the whole algorithm is proportional to N log N"}, :properties {:color "yellow"}} {:id #uuid "6351f841-b4e3-47b9-ab41-bb9a76f8d926", :page 203, :position {:bounding {:x1 0, :y1 16, :x2 738.9725341796875, :y2 197.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 0, :y1 32, :x2 0, :y2 48, :width 846.8999999999999, :height 1128} {:x1 655.5126342773438, :y1 132.234375, :x2 738.9725341796875, :y2 152.234375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 154.734375, :x2 738.6566772460938, :y2 174.734375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 177.234375, :x2 435.104248046875, :y2 197.234375, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "Developing a faster algorithm like this is not merely an academic exercise—the faster algorithm enables us to address much larger problems."}, :properties {:color "blue"}} {:id #uuid "6351f88d-87c4-4a46-97a7-112b33d07657", :page 203, :position {:bounding {:x1 108.59375, :y1 276.5625, :x2 305.5996398925781, :y2 297.5625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 276.5625, :x2 305.5996398925781, :y2 297.5625, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "Fast algorithm for 3-sum"}, :properties {:color "yellow"}} {:id #uuid "6351fb76-a574-41e3-a4a1-5b950621abe0", :page 203, :position {:bounding {:x1 0, :y1 128, :x2 738.8279418945312, :y2 366.8125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 128, :x2 0, :y2 144, :width 846.8999999999999, :height 1128} {:x1 0, :y1 144, :x2 0, :y2 160, :width 846.8999999999999, :height 1128} {:x1 457.18292236328125, :y1 299.734375, :x2 738.6550903320312, :y2 320.734375, :width 846.8999999999999, :height 1128} {:x1 507.203125, :y1 303.8125, :x2 543.7537231445312, :y2 318.8125, :width 846.8999999999999, :height 1128} {:x1 578.65625, :y1 303.8125, :x2 615.1912231445312, :y2 318.8125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 322.234375, :x2 738.8279418945312, :y2 343.234375, :width 846.8999999999999, :height 1128} {:x1 384.703125, :y1 326.3125, :x2 509.609375, :y2 341.3125, :width 846.8999999999999, :height 1128} {:x1 682.3125, :y1 326.3125, :x2 721.8125, :y2 341.3125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 345.8125, :x2 150.82476806640625, :y2 366.8125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 348.8125, :x2 144.71632385253906, :y2 363.8125, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "A pair a[i] and a[j] is part of a triple that sums to 0 if and only if the value -(a[i] + a[j]) is in the array (and not a[i] or a[j])"}, :properties {:color "yellow"}} {:id #uuid "6351fbb3-78c1-44b9-a8eb-418a0112be13", :page 203, :position {:bounding {:x1 0, :y1 160, :x2 738.7054443359375, :y2 387.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 846.8999999999999, :height 1128} {:x1 159.63238525390625, :y1 344.75, :x2 738.7054443359375, :y2 365.75, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 367.234375, :x2 646.2401123046875, :y2 387.234375, :width 846.8999999999999, :height 1128} {:x1 656.484375, :y1 367.234375, :x2 695.75, :y2 387.234375, :width 846.8999999999999, :height 1128} {:x1 648.328125, :y1 367.765625, :x2 654.375, :y2 381.765625, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "The code below sorts the array, then does N (N1)/ 2 binary searches that each take time proportional to log N, for a total running time proportional to N 2 log N"}, :properties {:color "blue"}} {:id #uuid "6351fdf5-6a49-48a9-b6d5-27621b084dad", :page 204, :position {:bounding {:x1 70, :y1 584, :x2 469, :y2 942, :width 846.8999999999999, :height 1128}, :rects (), :page 204}, :content {:text "[:span]", :image 1666317812596}, :properties {:color "blue"}} {:id #uuid "6351fe15-ad61-4086-8524-87199395f651", :page 204, :position {:bounding {:x1 474, :y1 591, :x2 824, :y2 944, :width 846.8999999999999, :height 1128}, :rects (), :page 204}, :content {:text "[:span]", :image 1666317844845}, :properties {:color "blue"}} {:id #uuid "6351fe2f-f587-454f-a3e7-c5bafb9fadab", :page 203, :position {:bounding {:x1 108.59375, :y1 511.5625, :x2 214.18304443359375, :y2 532.5625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 511.5625, :x2 214.18304443359375, :y2 532.5625, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "Lower bounds"}, :properties {:color "blue"}} {:id #uuid "6351fe91-1ea5-4c30-bd51-fe5899f6c458", :page 203, :position {:bounding {:x1 0, :y1 512, :x2 738.6491088867188, :y2 959.671875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 512, :x2 0, :y2 528, :width 846.8999999999999, :height 1128} {:x1 0, :y1 528, :x2 0, :y2 544, :width 846.8999999999999, :height 1128} {:x1 0, :y1 544, :x2 0, :y2 560, :width 846.8999999999999, :height 1128} {:x1 0, :y1 560, :x2 0, :y2 576, :width 846.8999999999999, :height 1128} {:x1 498.046875, :y1 849.6875, :x2 738.6491088867188, :y2 869.6875, :width 846.8999999999999, :height 1128} {:x1 498.046875, :y1 872.1875, :x2 738.6304321289062, :y2 892.1875, :width 846.8999999999999, :height 1128} {:x1 498.046875, :y1 894.671875, :x2 738.5731201171875, :y2 914.671875, :width 846.8999999999999, :height 1128} {:x1 498.046875, :y1 917.171875, :x2 738.5713500976562, :y2 937.171875, :width 846.8999999999999, :height 1128} {:x1 498.046875, :y1 939.671875, :x2 628.6593017578125, :y2 959.671875, :width 846.8999999999999, :height 1128}), :page 203}, :content {:text "The idea of a lower bound on the order of growth of the worst-case running time for all possible algorithms to solve a problem is a very powerful one"}, :properties {:color "yellow"}} {:id #uuid "6351feb8-69e9-4c0b-a3ea-534fe02a7216", :page 204, :position {:bounding {:x1 0, :y1 0, :x2 558.5536499023438, :y2 174.734375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 846.8999999999999, :height 1128} {:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 520.43505859375, :y1 109.75, :x2 558.5536499023438, :y2 129.75, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 132.234375, :x2 558.515869140625, :y2 152.234375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 154.734375, :x2 441.01739501953125, :y2 174.734375, :width 846.8999999999999, :height 1128}), :page 204}, :content {:text "Nontrivial lower bounds are difficult to establish, but very helpful in guiding our search for efficient algorithms."}, :properties {:color "blue"}} {:id #uuid "6351fef5-c582-47b5-8ba9-43149abb1274", :page 204, :position {:bounding {:x1 0, :y1 64, :x2 558.1492309570312, :y2 267.21875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 846.8999999999999, :height 1128} {:x1 360.20953369140625, :y1 224.734375, :x2 558.1492309570312, :y2 244.734375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 247.21875, :x2 497.2457275390625, :y2 267.21875, :width 846.8999999999999, :height 1128}), :page 204}, :content {:text "Throughout the book, our strategy for addressing new problems is the following"}, :properties {:color "yellow"}} {:id #uuid "6351ff0b-61a4-49ca-9cb3-15266c223d0a", :page 204, :position {:bounding {:x1 0, :y1 96, :x2 529.4785766601562, :y2 312.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 269.75, :x2 529.4785766601562, :y2 289.75, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 292.234375, :x2 244.03265380859375, :y2 312.234375, :width 846.8999999999999, :height 1128}), :page 204}, :content {:text "Implement and analyze a straighforward solution to the problem. "}, :properties {:color "blue"}} {:id #uuid "6351ff18-a51c-42ac-a97d-8f18c690f7e0", :page 204, :position {:bounding {:x1 0, :y1 112, :x2 524.854736328125, :y2 336.8125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 846.8999999999999, :height 1128} {:x1 244.01724243164062, :y1 292.234375, :x2 524.854736328125, :y2 312.234375, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 315.8125, :x2 511.455322265625, :y2 336.8125, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 318.8125, :x2 221.29873657226562, :y2 333.8125, :width 846.8999999999999, :height 1128} {:x1 256.953125, :y1 318.8125, :x2 311.14324951171875, :y2 333.8125, :width 846.8999999999999, :height 1128}), :page 204}, :content {:text "We usually refer to such solutions, like ThreeSum and TwoSum, as the brute-force solution."}, :properties {:color "green"}} {:id #uuid "6351ff3d-e5b8-4984-b6e4-d17b20df3b8d", :page 204, :position {:bounding {:x1 0, :y1 144, :x2 541.4446411132812, :y2 379.734375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 337.25, :x2 541.4446411132812, :y2 357.25, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 359.734375, :x2 510.478759765625, :y2 379.734375, :width 846.8999999999999, :height 1128}), :page 204}, :content {:text "Examine algorithmic improvements, usually designed to reduce the order of growth of the running time"}, :properties {:color "yellow"}} {:id #uuid "6351ff65-d837-44e7-af12-4040ecf708b0", :page 204, :position {:bounding {:x1 148.59375, :y1 404.75, :x2 714.4811401367188, :y2 424.75, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59375, :y1 404.75, :x2 714.4811401367188, :y2 424.75, :width 846.8999999999999, :height 1128}), :page 204}, :content {:text "Run experiments to validate the hypotheses that the new algorithms are faster"}, :properties {:color "yellow"}} {:id #uuid "6351ffc1-5fdd-447e-b781-9a4ca6f6a17e", :page 205, :position {:bounding {:x1 108.59375, :y1 108.578125, :x2 352.93121337890625, :y2 132.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 108.578125, :x2 352.93121337890625, :y2 132.578125, :width 846.8999999999999, :height 1128}), :page 205}, :content {:text "Doubling ratio experiments"}, :properties {:color "blue"}} {:id #uuid "63520221-4cc5-40b0-9965-70ef8824befd", :page 190, :position {:bounding {:x1 227.9375, :y1 147.140625, :x2 324.2650146484375, :y2 166.140625, :width 846.8999999999999, :height 1128}, :rects ({:x1 227.9375, :y1 147.140625, :x2 324.2650146484375, :y2 166.140625, :width 846.8999999999999, :height 1128}), :page 190}, :content {:text "DoublingTest"}, :properties {:color "yellow"}} {:id #uuid "6352028a-f971-4a06-ada0-4dc5b000d9ff", :page 188, :position {:bounding {:x1 233.140625, :y1 111.1875, :x2 409.75299072265625, :y2 130.1875, :width 846.8999999999999, :height 1128}, :rects ({:x1 233.140625, :y1 111.1875, :x2 409.75299072265625, :y2 130.1875, :width 846.8999999999999, :height 1128} {:x1 281.3125, :y1 114.1875, :x2 330.4769592285156, :y2 127.515625, :width 846.8999999999999, :height 1128}), :page 188}, :content {:text "public class Stopwatch"}, :properties {:color "blue"}} {:id #uuid "635202e3-c256-4f05-b07a-1f7290d48a09", :page 206, :position {:bounding {:x1 123.59375, :y1 361.6875, :x2 350.6021423339844, :y2 380.6875, :width 846.8999999999999, :height 1128}, :rects ({:x1 123.59375, :y1 361.6875, :x2 350.6021423339844, :y2 380.6875, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "Proposition C. (Doubling ratio) "}, :properties {:color "blue"}} {:id #uuid "635202fa-7acf-4a51-8410-0494d706950a", :page 206, :position {:bounding {:x1 123.59375, :y1 395.1875, :x2 169.12554931640625, :y2 414.1875, :width 846.8999999999999, :height 1128}, :rects ({:x1 123.59375, :y1 395.1875, :x2 169.12554931640625, :y2 414.1875, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "Proof:"}, :properties {:color "blue"}} {:id #uuid "6352035e-f50c-4f21-bc33-eff95c8094da", :page 205, :position {:bounding {:x1 0, :y1 0, :x2 738.714111328125, :y2 176.609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 846.8999999999999, :height 1128} {:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 373.703125, :y1 111.625, :x2 738.714111328125, :y2 131.625, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 134.109375, :x2 738.6954345703125, :y2 154.109375, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 156.609375, :x2 323.4396057128906, :y2 176.609375, :width 846.8999999999999, :height 1128}), :page 205}, :content {:text "The following is a simple and effective shortcut for predicting performance and for determining the approximate order of growth of the running time of any program"}, :properties {:color "yellow"}} {:id #uuid "63520442-78b9-4d7f-9f5a-07583a3d33fb", :page 205, :position {:bounding {:x1 227.9375, :y1 625.46875, :x2 332.28973388671875, :y2 644.46875, :width 846.8999999999999, :height 1128}, :rects ({:x1 227.9375, :y1 625.46875, :x2 332.28973388671875, :y2 644.46875, :width 846.8999999999999, :height 1128}), :page 205}, :content {:text "DoublingRatio"}, :properties {:color "blue"}} {:id #uuid "635204a5-07b5-4f70-b6b9-6aabe0267370", :page 206, :position {:bounding {:x1 0, :y1 288, :x2 739.0654296875, :y2 673.140625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 630.65625, :x2 739.0654296875, :y2 650.65625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 653.140625, :x2 386.828125, :y2 673.140625, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "You should consider running doubling ratio experiments for every program that you write where performance matters"}, :properties {:color "blue"}} {:id #uuid "635204bf-5f97-4b19-a667-5de504d70f85", :page 206, :position {:bounding {:x1 0, :y1 304, :x2 738.84912109375, :y2 695.640625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 846.8999999999999, :height 1128} {:x1 405.3697509765625, :y1 653.140625, :x2 738.84912109375, :y2 673.140625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 675.640625, :x2 390.27099609375, :y2 695.640625, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "doing so is a very simple way to estimate the order of growth of the running time, "}, :properties {:color "blue"}} {:id #uuid "635204cc-5da4-4e96-94bf-f1ecb829ae42", :page 206, :position {:bounding {:x1 0, :y1 320, :x2 738.78662109375, :y2 718.140625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 846.8999999999999, :height 1128} {:x1 399.8146667480469, :y1 675.640625, :x2 738.78662109375, :y2 695.640625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 698.140625, :x2 568.8054809570312, :y2 718.140625, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "erhaps revealing a performance bug where a program may turn out to be not as efficient as you might think. "}, :properties {:color "blue"}} {:id #uuid "635204f7-6a7e-4127-a47d-739786c6c7ab", :page 206, :position {:bounding {:x1 0, :y1 336, :x2 738.8773803710938, :y2 763.125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 846.8999999999999, :height 1128} {:x1 0, :y1 352, :x2 0, :y2 368, :width 846.8999999999999, :height 1128} {:x1 688.0073852539062, :y1 698.140625, :x2 738.8773803710938, :y2 718.140625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 720.625, :x2 738.7755126953125, :y2 740.625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 743.125, :x2 412.1478271484375, :y2 763.125, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "we can use hypotheses about the order of growth of the running time of programs to predict performance in one of the following ways"}, :properties {:color "blue"}} {:id #uuid "635222c9-9879-4ebc-8a58-34ab0e2176af", :page 206, :position {:bounding {:x1 108.59375, :y1 774.984375, :x2 504.7799072265625, :y2 795.984375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 774.984375, :x2 504.7799072265625, :y2 795.984375, :width 846.8999999999999, :height 1128}), :page 206}, :content {:text "Estimating the feasibility of solving large problems. "}, :properties {:color "yellow"}} {:id #uuid "63522390-4c93-4fba-b435-420d673c69fa", :page 207, :position {:bounding {:x1 0, :y1 0, :x2 739.0249633789062, :y2 174.734375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 846.8999999999999, :height 1128} {:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 381.3681335449219, :y1 109.75, :x2 739.0249633789062, :y2 129.75, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 132.234375, :x2 738.88134765625, :y2 152.234375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 154.734375, :x2 494.90167236328125, :y2 174.734375, :width 846.8999999999999, :height 1128}), :page 207}, :content {:text "Knowing the order of growth of the running time of an algorithm provides precisely the information that you need to understand limitations on the size of the problems that you can solve."}, :properties {:color "yellow"}} {:id #uuid "635223d0-c2d1-4d94-9a19-9dbb87b254bf", :page 207, :position {:bounding {:x1 0, :y1 32, :x2 738.5266723632812, :y2 197.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 32, :x2 0, :y2 48, :width 846.8999999999999, :height 1128} {:x1 499.34375, :y1 154.734375, :x2 738.5266723632812, :y2 174.734375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 177.234375, :x2 450.11260986328125, :y2 197.234375, :width 846.8999999999999, :height 1128}), :page 207}, :content {:text "Developing such understanding is the most important reason to study performance"}, :properties {:color "blue"}} {:id #uuid "63522404-47e8-4a96-81b0-f776f274d58d", :page 207, :position {:bounding {:x1 108.59375, :y1 254.0625, :x2 465.5906982421875, :y2 275.0625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 254.0625, :x2 465.5906982421875, :y2 275.0625, :width 846.8999999999999, :height 1128}), :page 207}, :content {:text "Estimating the value of using a faster computer. "}, :properties {:color "green"}} {:id #uuid "6352252b-76a6-4a46-8699-3b6aff296192", :page 207, :position {:bounding {:x1 128.11573791503906, :y1 459.703125, :x2 739.0487823486328, :y2 479.703125, :width 846.8999999999999, :height 1128}, :rects ({:x1 128.11573791503906, :y1 459.703125, :x2 739.0487823486328, :y2 479.703125, :width 846.8999999999999, :height 1128}), :page 207}, :content {:text "a computer with about 10 times the speed and 10 times the memory in about 5 years."}, :properties {:color "yellow"}} {:id #uuid "6352257b-9754-4c93-b76e-c3da6e467b5b", :page 207, :position {:bounding {:x1 0, :y1 240, :x2 738.7528686523438, :y2 524.703125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 846.8999999999999, :height 1128} {:x1 108.609375, :y1 482.203125, :x2 738.7528686523438, :y2 502.203125, :width 846.8999999999999, :height 1128} {:x1 108.609375, :y1 504.703125, :x2 388.68896484375, :y2 524.703125, :width 846.8999999999999, :height 1128}), :page 207}, :content {:text "The table below demonstrates that you cannot keep pace with Moore’s Law if you are using a quadratic or a cubic algorithm"}, :properties {:color "blue"}} {:id #uuid "6352258b-51d6-4b2f-b4d2-8c8847e6243c", :page 207, :position {:bounding {:x1 0, :y1 256, :x2 739.05224609375, :y2 569.6875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 846.8999999999999, :height 1128} {:x1 0, :y1 272, :x2 0, :y2 288, :width 846.8999999999999, :height 1128} {:x1 429.1929931640625, :y1 504.703125, :x2 739.05224609375, :y2 524.703125, :width 846.8999999999999, :height 1128} {:x1 108.609375, :y1 527.1875, :x2 738.8772583007812, :y2 547.1875, :width 846.8999999999999, :height 1128} {:x1 108.609375, :y1 549.6875, :x2 452.45263671875, :y2 569.6875, :width 846.8999999999999, :height 1128}), :page 207}, :content {:text "you can quickly determine whether that is the case by doing a doubling ratio test and checking that the ratio of running times as the input size doubles approaches 2, not 4 or 8."}, :properties {:color "yellow"}} {:id #uuid "635225dc-7bed-4da5-bc4c-8c05386c5198", :page 207, :position {:bounding {:x1 92, :y1 657, :x2 774, :y2 984, :width 846.8999999999999, :height 1128}, :rects (), :page 207}, :content {:text "[:span]", :image 1666328026083}, :properties {:color "blue"}} {:id #uuid "6352260c-e7f8-4654-a305-4cd48be6a67f", :page 208, :position {:bounding {:x1 108.59375, :y1 108.578125, :x2 181.328125, :y2 132.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 108.578125, :x2 181.328125, :y2 132.578125, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Caveats "}, :properties {:color "blue"}} {:id #uuid "6352268e-c849-4d70-a55b-25d7f8970c79", :page 208, :position {:bounding {:x1 108.59375, :y1 233.4375, :x2 233.50729370117188, :y2 254.4375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 233.4375, :x2 233.50729370117188, :y2 254.4375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Large constants. "}, :properties {:color "yellow"}} {:id #uuid "635226b4-4139-43bd-a5fa-8496d62936ae", :page 208, :position {:bounding {:x1 0, :y1 112, :x2 738.3967895507812, :y2 321.609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 846.8999999999999, :height 1128} {:x1 584.1227416992188, :y1 279.125, :x2 738.3967895507812, :y2 299.125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 301.609375, :x2 577.9638061523438, :y2 321.609375, :width 846.8999999999999, :height 1128} {:x1 265.203125, :y1 302.140625, :x2 271.5537109375, :y2 316.140625, :width 846.8999999999999, :height 1128} {:x1 318.84375, :y1 302.140625, :x2 324.890625, :y2 316.140625, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text " If that is not the case(suppose that c is 10 3 or 10 6 ) the approximation is misleading"}, :properties {:color "blue"}} {:id #uuid "635226bb-5d2e-4775-a2b6-e52fc55c4517", :page 208, :position {:bounding {:x1 108.59375, :y1 355.9375, :x2 302.32635498046875, :y2 376.9375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 355.9375, :x2 302.32635498046875, :y2 376.9375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Nondominant inner loop"}, :properties {:color "yellow"}} {:id #uuid "63522708-44e1-4d51-aa72-2366240d3328", :page 208, :position {:bounding {:x1 0, :y1 224, :x2 738.9920043945312, :y2 489.09375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 846.8999999999999, :height 1128} {:x1 479.8917236328125, :y1 446.59375, :x2 738.9920043945312, :y2 466.59375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 469.09375, :x2 718.1739501953125, :y2 489.09375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Some programs have a significant amount of code outside the inner loop that needs to be taken into consideration."}, :properties {:color "yellow"}} {:id #uuid "63522714-7d9f-4995-9a2c-ec8137747f02", :page 208, :position {:bounding {:x1 108.59375, :y1 523.4375, :x2 236.99612426757812, :y2 544.4375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 523.4375, :x2 236.99612426757812, :y2 544.4375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Instruction time."}, :properties {:color "yellow"}} {:id #uuid "63522763-2605-44b4-acbd-a96e1ef0e649", :page 208, :position {:bounding {:x1 228.546875, :y1 569.109375, :x2 281.9071350097656, :y2 589.109375, :width 846.8999999999999, :height 1128}, :rects ({:x1 228.546875, :y1 569.109375, :x2 281.9071350097656, :y2 589.109375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "caching"}, :properties {:color "blue"}} {:id #uuid "6352277a-9236-4d85-a32a-04b0be9aa809", :page 208, :position {:bounding {:x1 0, :y1 336, :x2 739.1176147460938, :y2 679.109375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 846.8999999999999, :height 1128} {:x1 0, :y1 352, :x2 0, :y2 368, :width 846.8999999999999, :height 1128} {:x1 700.0831298828125, :y1 614.125, :x2 737.7764282226562, :y2 634.125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 636.609375, :x2 739.1176147460938, :y2 656.609375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 659.109375, :x2 298.5465393066406, :y2 679.109375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "After seeming to converge to 8, the ratio of running times may jump to a larger value for large arrays because of caching."}, :properties {:color "blue"}} {:id #uuid "63522783-eeb7-4812-8639-3112e5a0b7ae", :page 208, :position {:bounding {:x1 108.59375, :y1 690.9375, :x2 276.08624267578125, :y2 711.9375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 690.9375, :x2 276.08624267578125, :y2 711.9375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "System considerations"}, :properties {:color "yellow"}} {:id #uuid "635227b8-ab3a-489a-8945-e4d457d9b5e5", :page 208, :position {:bounding {:x1 0, :y1 448, :x2 738.9510498046875, :y2 824.09375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 846.8999999999999, :height 1128} {:x1 231.80450439453125, :y1 781.59375, :x2 738.9510498046875, :y2 801.59375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 804.09375, :x2 539.9605712890625, :y2 824.09375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Such considerations can interfere with the bedrock principle of the scientific method that experiments should be reproducible,"}, :properties {:color "blue"}} {:id #uuid "63522855-73aa-4585-a994-cd9f67dc1137", :page 208, :position {:bounding {:x1 108.59375, :y1 880.9375, :x2 233.35711669921875, :y2 901.9375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 880.9375, :x2 233.35711669921875, :y2 901.9375, :width 846.8999999999999, :height 1128}), :page 208}, :content {:text "Too close to call."}, :properties {:color "yellow"}} {:id #uuid "63522915-773b-49b7-a19d-0a37237ad157", :page 209, :position {:bounding {:x1 108.59375, :y1 376.5625, :x2 330.3153381347656, :y2 397.5625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 376.5625, :x2 330.3153381347656, :y2 397.5625, :width 846.8999999999999, :height 1128}), :page 209}, :content {:text "Multiple problem parameters"}, :properties {:color "yellow"}} {:id #uuid "6352292c-1c6a-4941-9957-4878082efcfd", :page 209, :position {:bounding {:x1 108.59375, :y1 164.0625, :x2 333.32489013671875, :y2 185.0625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 164.0625, :x2 333.32489013671875, :y2 185.0625, :width 846.8999999999999, :height 1128}), :page 209}, :content {:text "Strong dependence on inputs."}, :properties {:color "yellow"}} {:id #uuid "63522987-7ae4-49e9-992a-b996d5f0bba8", :page 209, :position {:bounding {:x1 0, :y1 240, :x2 738.6016235351562, :y2 509.71875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 846.8999999999999, :height 1128} {:x1 493.4647216796875, :y1 467.21875, :x2 738.6016235351562, :y2 487.21875, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 489.71875, :x2 609.5570068359375, :y2 509.71875, :width 846.8999999999999, :height 1128}), :page 209}, :content {:text "Both the size of the data structure and the number of operations are parameters for such applications."}, :properties {:color "yellow"}} {:id #uuid "635229be-586a-4831-b71f-6da3b5f193ae", :page 209, :position {:bounding {:x1 0, :y1 384, :x2 738.8375854492188, :y2 759.671875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 846.8999999999999, :height 1128} {:x1 0, :y1 400, :x2 0, :y2 416, :width 846.8999999999999, :height 1128} {:x1 206.9271240234375, :y1 694.6875, :x2 738.6344604492188, :y2 714.6875, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 717.171875, :x2 738.8375854492188, :y2 737.171875, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 739.671875, :x2 424.6727294921875, :y2 759.671875, :width 846.8999999999999, :height 1128}), :page 209}, :content {:text "ypical computer systems are extremely complex and close analysis is best left for experts, but the same methods are effective for developing approximate estimates of the running time of any program. "}, :properties {:color "blue"}} {:id #uuid "63522a2a-a0c4-4885-9a2d-599957cc3512", :page 210, :position {:bounding {:x1 108.59375, :y1 108.578125, :x2 416.5728759765625, :y2 132.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 108.578125, :x2 416.5728759765625, :y2 132.578125, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "Coping with dependence on inputs"}, :properties {:color "yellow"}} {:id #uuid "63522b9a-c875-4603-8154-d17e9c193a78", :page 210, :position {:bounding {:x1 108.59375, :y1 278.4375, :x2 209.31134033203125, :y2 299.4375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 278.4375, :x2 209.31134033203125, :y2 299.4375, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "Input models"}, :properties {:color "blue"}} {:id #uuid "63522c34-3ee1-429b-af3a-6d0102883aa2", :page 210, :position {:bounding {:x1 0, :y1 240, :x2 738.3905639648438, :y2 501.59375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 846.8999999999999, :height 1128} {:x1 465.6474609375, :y1 459.109375, :x2 738.3905639648438, :y2 479.109375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 481.59375, :x2 630.3905639648438, :y2 501.59375, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "if we are writing a program to process a genome, how can we estimate its performance on a different genome?"}, :properties {:color "blue"}} {:id #uuid "63522cbe-1675-4e0c-9fd5-a5e6e130789a", :page 210, :position {:bounding {:x1 108.59375, :y1 648.4375, :x2 385.19097900390625, :y2 669.4375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 648.4375, :x2 385.19097900390625, :y2 669.4375, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "Worst-case performance guarantees"}, :properties {:color "yellow"}} {:id #uuid "63522cdd-b45c-4450-b832-f9adc07b5991", :page 210, :position {:bounding {:x1 0, :y1 368, :x2 738.5797119140625, :y2 691.609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 846.8999999999999, :height 1128} {:x1 399.4375, :y1 649.125, :x2 738.5797119140625, :y2 669.125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 671.609375, :x2 652.6185913085938, :y2 691.609375, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "Some applications demand that the running time of a program be less than a certain bound, no matter what the input."}, :properties {:color "blue"}} {:id #uuid "63522d18-b384-46ed-8175-e4a2fe970dcc", :page 210, :position {:bounding {:x1 0, :y1 400, :x2 738.6300659179688, :y2 736.609375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 846.8999999999999, :height 1128} {:x1 332.7087707519531, :y1 694.109375, :x2 738.6300659179688, :y2 714.109375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 716.609375, :x2 713.2386474609375, :y2 736.609375, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "theoreticians take an extremely pessimistic view of the performance of algorithms: what would the running time be in the worst case? "}, :properties {:color "purple"}} {:id #uuid "63522d67-8f3c-4f76-b53d-a2c2b7708ad0", :page 210, :position {:bounding {:x1 0, :y1 432, :x2 739.1367492675781, :y2 781.59375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 846.8999999999999, :height 1128} {:x1 179.59719848632812, :y1 739.09375, :x2 739.1367492675781, :y2 759.09375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 761.59375, :x2 540.3167114257812, :y2 781.59375, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "such a conservative approach might be appropriate for the software that runs a nuclear reactor or a pacemaker or the brakes in your car."}, :properties {:color "purple"}} {:id #uuid "63522dda-df25-4e26-ae22-d5d268a6b201", :page 210, :position {:bounding {:x1 0, :y1 448, :x2 738.4802856445312, :y2 826.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 846.8999999999999, :height 1128} {:x1 0, :y1 464, :x2 0, :y2 480, :width 846.8999999999999, :height 1128} {:x1 544.6141357421875, :y1 761.59375, :x2 738.3621826171875, :y2 781.59375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 784.09375, :x2 738.4802856445312, :y2 804.09375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 806.578125, :x2 331.7803955078125, :y2 826.578125, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "We want to guarantee that such software completes its job within the bounds that we set because the result could be catastrophic if it does not. "}, :properties {:color "purple"}} {:id #uuid "63522e69-7272-4ee8-8f7e-ed0341e2af19", :page 210, :position {:bounding {:x1 0, :y1 512, :x2 738.8939819335938, :y2 916.5625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 512, :x2 0, :y2 528, :width 846.8999999999999, :height 1128} {:x1 0, :y1 528, :x2 0, :y2 544, :width 846.8999999999999, :height 1128} {:x1 716.5352783203125, :y1 851.578125, :x2 738.8939819335938, :y2 871.578125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 874.0625, :x2 738.7445068359375, :y2 894.0625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 896.5625, :x2 641.9046020507812, :y2 916.5625, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "the worst case can be a very real concern in computer systems, where the input may be generated by another (potentially malicious) user, rather than by nature. "}, :properties {:color "yellow"}} {:id #uuid "63522e94-1ea3-49f5-a815-3c9ab38ae16a", :page 210, :position {:bounding {:x1 0, :y1 480, :x2 738.7554321289062, :y2 871.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 480, :x2 0, :y2 496, :width 846.8999999999999, :height 1128} {:x1 0, :y1 496, :x2 0, :y2 512, :width 846.8999999999999, :height 1128} {:x1 331.7642822265625, :y1 806.578125, :x2 738.7554321289062, :y2 826.578125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 829.078125, :x2 738.417236328125, :y2 849.078125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 851.578125, :x2 676.41748046875, :y2 871.578125, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "Scientists normally do not contemplate the worst case when studying the natural world: in biology, the worst case might be the extinction of the human race; in physics, the worst case might be the end of the universe"}, :properties {:color "purple"}} {:id #uuid "63522fa8-072d-4273-80c5-b1d9adff4173", :page 210, :position {:bounding {:x1 0, :y1 560, :x2 738.7020874023438, :y2 961.546875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 560, :x2 0, :y2 576, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 919.0625, :x2 738.7020874023438, :y2 939.0625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 941.546875, :x2 738.570068359375, :y2 961.546875, :width 846.8999999999999, :height 1128}), :page 210}, :content {:text "websites that do not use algorithms with performance guarantees are subject to denialof-service attacks, where hackers flood them with pathological requests that make them"}, :properties {:color "purple"}} {:id #uuid "63522fb4-e6df-45e0-9363-64ca4048aa75", :page 211, :position {:bounding {:x1 108.59375, :y1 109.75, :x2 372.3899841308594, :y2 129.75, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 109.75, :x2 372.3899841308594, :y2 129.75, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "run much more slowly than planned."}, :properties {:color "purple"}} {:id #uuid "6352303f-2a35-44c1-a614-90e59b5cb2d6", :page 211, :position {:bounding {:x1 108.59375, :y1 384.140625, :x2 292.5104675292969, :y2 405.140625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 384.140625, :x2 292.5104675292969, :y2 405.140625, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "Randomized algorithms"}, :properties {:color "blue"}} {:id #uuid "6352310b-aa2b-400c-a5e1-6119c0cd55a9", :page 211, :position {:bounding {:x1 108.59375, :y1 641.640625, :x2 296.8401184082031, :y2 662.640625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 641.640625, :x2 296.8401184082031, :y2 662.640625, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "Sequences of operations"}, :properties {:color "blue"}} {:id #uuid "6352317e-1876-4a58-a4ac-6e866e1cda51", :page 211, :position {:bounding {:x1 0, :y1 384, :x2 738.8077392578125, :y2 774.796875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 846.8999999999999, :height 1128} {:x1 410.7440185546875, :y1 732.3125, :x2 738.8077392578125, :y2 752.3125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 754.796875, :x2 165.7850341796875, :y2 774.796875, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "Our analysis has to take both situations into account"}, :properties {:color "green"}} {:id #uuid "635231b3-7927-451d-a033-bc25aae3b4dc", :page 211, :position {:bounding {:x1 0, :y1 336, :x2 739.1387329101562, :y2 752.3125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 846.8999999999999, :height 1128} {:x1 0, :y1 352, :x2 0, :y2 368, :width 846.8999999999999, :height 1128} {:x1 0, :y1 368, :x2 0, :y2 384, :width 846.8999999999999, :height 1128} {:x1 626.3890991210938, :y1 664.828125, :x2 738.1740112304688, :y2 684.828125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 687.3125, :x2 738.9794311523438, :y2 707.3125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 709.8125, :x2 739.1387329101562, :y2 729.8125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 732.3125, :x2 406.0697021484375, :y2 752.3125, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "For example, a pushdown stack where the client pushes N values, then pops them all, may have quite different performance characteristics from one where the client issues an alternating sequence N of push and pop operations."}, :properties {:color "purple"}} {:id #uuid "635231e9-a77e-4cf3-a698-c1c70a65425c", :page 211, :position {:bounding {:x1 108.59375, :y1 786.640625, :x2 254.28857421875, :y2 807.640625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 786.640625, :x2 254.28857421875, :y2 807.640625, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "Amortized analysis"}, :properties {:color "blue"}} {:id #uuid "63523218-57c8-49ba-b21e-4f467c3a4d00", :page 211, :position {:bounding {:x1 0, :y1 416, :x2 738.855712890625, :y2 852.3125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 846.8999999999999, :height 1128} {:x1 0, :y1 432, :x2 0, :y2 448, :width 846.8999999999999, :height 1128} {:x1 363.1443786621094, :y1 787.328125, :x2 738.761962890625, :y2 807.328125, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 809.828125, :x2 738.855712890625, :y2 829.828125, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 832.3125, :x2 271.6081237792969, :y2 852.3125, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text " another way to provide a performance guarantee is to amortize the cost, by keeping track of the total cost of all operations, divided by the number of operations."}, :properties {:color "yellow"}} {:id #uuid "6352327a-7409-4a17-b85c-1d7070f62d7d", :page 211, :position {:bounding {:x1 0, :y1 464, :x2 738.040283203125, :y2 898.3125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 464, :x2 0, :y2 480, :width 846.8999999999999, :height 1128} {:x1 436.545654296875, :y1 854.8125, :x2 738.040283203125, :y2 874.8125, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 877.3125, :x2 580.3108520507812, :y2 898.3125, :width 846.8999999999999, :height 1128} {:x1 534.71875, :y1 881.390625, :x2 579.8846435546875, :y2 896.390625, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "The prototypical example of this type of analysis is the study of the resizing array data structure for Stack "}, :properties {:color "yellow"}} {:id #uuid "6352357a-4d24-4998-860a-51b616fc901f", :page 212, :position {:bounding {:x1 0, :y1 112, :x2 581.840576171875, :y2 366.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 846.8999999999999, :height 1128} {:x1 0, :y1 128, :x2 0, :y2 144, :width 846.8999999999999, :height 1128} {:x1 0, :y1 144, :x2 0, :y2 160, :width 846.8999999999999, :height 1128} {:x1 309.60211181640625, :y1 278.75, :x2 453.278564453125, :y2 298.75, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 301.25, :x2 453.7310791015625, :y2 321.25, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 323.734375, :x2 453.8472900390625, :y2 343.734375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 346.234375, :x2 581.840576171875, :y2 366.234375, :width 846.8999999999999, :height 1128}), :page 212}, :content {:text "This is known as an“amortized” analysis because we spread the cost of the few expensive operations, by assigning a portion of it to each of a large number of inexpensive operations. "}, :properties {:color "blue"}} {:id #uuid "63523621-8fcc-498e-a9ac-dd0804c4fe27", :page 212, :position {:bounding {:x1 0, :y1 384, :x2 739.4033813476562, :y2 815.484375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 846.8999999999999, :height 1128} {:x1 0, :y1 400, :x2 0, :y2 416, :width 846.8999999999999, :height 1128} {:x1 0, :y1 416, :x2 0, :y2 432, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 750.5, :x2 738.7576904296875, :y2 770.5, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 773, :x2 738.8197631835938, :y2 793, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 795.484375, :x2 739.4033813476562, :y2 815.484375, :width 846.8999999999999, :height 1128}), :page 212}, :content {:text "It is the task of the algorithm analyst to discover as much relevant information about an algorithm as possible, and it is the task of the applications programmer to apply that knowledge to develop programs that effectively solve the problems at hand."}, :properties {:color "yellow"}} {:id #uuid "6352368e-a36d-4e5a-be6c-d4703aef1ec6", :page 212, :position {:bounding {:x1 0, :y1 432, :x2 738.6653442382812, :y2 860.484375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 817.984375, :x2 738.6653442382812, :y2 837.984375, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 840.484375, :x2 590.7129516601562, :y2 860.484375, :width 846.8999999999999, :height 1128}), :page 212}, :content {:text "Ideally, we want algorithms that lead to clear and compact code that provides both a good guarantee and good performance on input values of interest."}, :properties {:color "blue"}} {:id #uuid "6353ff41-f43e-45a0-b3d6-88f404fb1900", :page 211, :position {:bounding {:x1 0, :y1 272, :x2 739.0027465820312, :y2 629.78125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 846.8999999999999, :height 1128} {:x1 0, :y1 288, :x2 0, :y2 304, :width 846.8999999999999, :height 1128} {:x1 482.6640625, :y1 564.78125, :x2 739.0027465820312, :y2 584.78125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 587.28125, :x2 738.6740112304688, :y2 607.28125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 609.78125, :x2 205.24652099609375, :y2 629.78125, :width 846.8999999999999, :height 1128}), :page 211}, :content {:text "These guarantees are not absolute, but the chance that they are invalid is less than the chance your computer will be struck by lightning. "}, :properties {:color "blue"}} {:id #uuid "635871d2-b570-4aef-adbf-5ab1aed54ad1", :page 213, :position {:bounding {:x1 130.3125, :y1 131.6875, :x2 220.05123901367188, :y2 158.6875, :width 1016.28, :height 1353.6000000000001}, :rects ({:x1 130.3125, :y1 131.6875, :x2 220.05123901367188, :y2 158.6875, :width 1016.28, :height 1353.6000000000001}), :page 213}, :content {:text "Memory"}, :properties {:color "yellow"}} {:id #uuid "6358720c-8f76-4a42-88f7-c96660321d4c", :page 213, :position {:bounding {:x1 0, :y1 0, :x2 886.19287109375, :y2 185.140625, :width 1016.28, :height 1353.6000000000001}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1016.28, :height 1353.6000000000001} {:x1 245.046875, :y1 133.140625, :x2 886.19287109375, :y2 158.140625, :width 1016.28, :height 1353.6000000000001} {:x1 130.3125, :y1 160.140625, :x2 264.08673095703125, :y2 185.140625, :width 1016.28, :height 1353.6000000000001}), :page 213}, :content {:text "As with running time, a program’s memory usage connects directly to the physical world"}, :properties {:color "blue"}} {:id #uuid "6358732b-ccb3-46b7-a2ca-8b2898547366", :page 213, :position {:bounding {:x1 0, :y1 176, :x2 887.2041015625, :y2 482.0625, :width 1016.28, :height 1353.6000000000001}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 1016.28, :height 1353.6000000000001} {:x1 268.3125, :y1 430.078125, :x2 887.2041015625, :y2 455.078125, :width 1016.28, :height 1353.6000000000001} {:x1 244.3125, :y1 457.0625, :x2 886.9795532226562, :y2 482.0625, :width 1016.28, :height 1353.6000000000001}), :page 213}, :content {:text "One of Java’s most significant features is its memory allocation system, which is supposed to relieve you from having to worry about memory."}, :properties {:color "purple"}} {:id #uuid "6358745b-6cc1-4b16-a7e1-f10cba61d0f4", :page 213, :position {:bounding {:x1 23, :y1 366, :x2 187, :y2 646, :width 846.8999999999999, :height 1128}, :rects (), :page 213}, :content {:text "[:span]", :image 1666741338694}, :properties {:color "yellow"}} {:id #uuid "6358749f-2734-48d4-b03f-174b8835f5f2", :page 213, :position {:bounding {:x1 0, :y1 544, :x2 738.817138671875, :y2 941.59375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 544, :x2 0, :y2 560, :width 846.8999999999999, :height 1128} {:x1 0, :y1 560, :x2 0, :y2 576, :width 846.8999999999999, :height 1128} {:x1 470.4234619140625, :y1 876.609375, :x2 738.7210693359375, :y2 896.609375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 899.109375, :x2 738.817138671875, :y2 919.109375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 921.59375, :x2 560.7294311523438, :y2 941.59375, :width 846.8999999999999, :height 1128}), :page 213}, :content {:text "you should consider the specific examples that we give as indicative of how you might go about determining memory usage when warranted, not the final word for your computer. "}, :properties {:color "purple"}} {:id #uuid "63587537-5509-4710-b85c-5121d8b214da", :page 214, :position {:bounding {:x1 108.59375, :y1 254.0625, :x2 170.64053344726562, :y2 275.0625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 254.0625, :x2 170.64053344726562, :y2 275.0625, :width 846.8999999999999, :height 1128}), :page 214}, :content {:text "Objects. "}, :properties {:color "blue"}} {:id #uuid "6358758b-1952-4461-9e99-a7cd6819a780", :page 214, :position {:bounding {:x1 0, :y1 96, :x2 568.476806640625, :y2 383.015625, :width 948.5279999999999, :height 1263.36}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 948.5279999999999, :height 1263.36} {:x1 0, :y1 112, :x2 0, :y2 128, :width 948.5279999999999, :height 1263.36} {:x1 0, :y1 128, :x2 0, :y2 144, :width 948.5279999999999, :height 1263.36} {:x1 200.65625, :y1 285.4375, :x2 568.476806640625, :y2 307.4375, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 310.625, :x2 567.950439453125, :y2 332.625, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 335.828125, :x2 568.1646728515625, :y2 357.828125, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 361.015625, :x2 268.39703369140625, :y2 383.015625, :width 948.5279999999999, :height 1263.36}), :page 214}, :content {:text "To determine the memory usage of an object, we add the amount of memory used by each instance variable to the overhead associated with each object, typically 16 bytes."}, :properties {:color "blue"}} {:id #uuid "635875a0-74b0-4f64-9e63-38cdf03f0482", :page 214, :position {:bounding {:x1 0, :y1 144, :x2 567.5073852539062, :y2 433.40625, :width 948.5279999999999, :height 1263.36}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 948.5279999999999, :height 1263.36} {:x1 0, :y1 160, :x2 0, :y2 176, :width 948.5279999999999, :height 1263.36} {:x1 273.0140380859375, :y1 361.015625, :x2 566.9833984375, :y2 383.015625, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 386.203125, :x2 567.5073852539062, :y2 408.203125, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 411.40625, :x2 455.15130615234375, :y2 433.40625, :width 948.5279999999999, :height 1263.36}), :page 214}, :content {:text "The overhead includes a reference to the object’s class, garbage collection information, and synchronization information. Moreover"}, :properties {:color "green"}} {:id #uuid "635875b5-43eb-405e-be25-c3c404cc34a0", :page 214, :position {:bounding {:x1 0, :y1 176, :x2 567.6723022460938, :y2 483.796875, :width 948.5279999999999, :height 1263.36}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 948.5279999999999, :height 1263.36} {:x1 0, :y1 192, :x2 0, :y2 208, :width 948.5279999999999, :height 1263.36} {:x1 460.42132568359375, :y1 411.40625, :x2 567.3850708007812, :y2 433.40625, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 436.59375, :x2 567.6723022460938, :y2 458.59375, :width 948.5279999999999, :height 1263.36} {:x1 121.625, :y1 461.796875, :x2 445.4890441894531, :y2 483.796875, :width 948.5279999999999, :height 1263.36}), :page 214}, :content {:text " the memory usage is typically padded to be a multiple of 8 bytes(machine words, on a 64-bit machine)"}, :properties {:color "red"}} {:id #uuid "6358773b-ab09-4520-9c7b-9e7600b6668d", :page 155, :position {:bounding {:x1 108.59375, :y1 108.578125, :x2 210.77972412109375, :y2 132.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 108.578125, :x2 210.77972412109375, :y2 132.578125, :width 846.8999999999999, :height 1128}), :page 155}, :content {:text "Linked lists "}, :properties {:color "blue"}} {:id #uuid "63587922-b4e8-46bd-8830-5d05968f51f9", :page 214, :position {:bounding {:x1 108.59375, :y1 759.0625, :x2 202.72503662109375, :y2 780.0625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 759.0625, :x2 202.72503662109375, :y2 780.0625, :width 846.8999999999999, :height 1128}), :page 214}, :content {:text "Linked lists."}, :properties {:color "blue"}} {:id #uuid "63587949-39fa-46f4-8a2c-6c7ad09a65e2", :page 214, :position {:bounding {:x1 0, :y1 448, :x2 506.41552734375, :y2 824.734375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 846.8999999999999, :height 1128} {:x1 0, :y1 464, :x2 0, :y2 480, :width 846.8999999999999, :height 1128} {:x1 212.046875, :y1 759.75, :x2 506.0062255859375, :y2 779.75, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 782.234375, :x2 506.41552734375, :y2 803.234375, :width 846.8999999999999, :height 1128} {:x1 156.328125, :y1 786.3125, :x2 192.85006713867188, :y2 801.3125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 804.734375, :x2 490.154052734375, :y2 824.734375, :width 846.8999999999999, :height 1128}), :page 214}, :content {:text "A nested non-static (inner) class such as our Node class (page 142) requires an extra 8 bytes of overhead (for a reference to the enclosing instance)."}, :properties {:color "green"}} {:id #uuid "635879c3-a6ac-4d50-89af-1b9fedf648dd", :page 214, :position {:bounding {:x1 519, :y1 92, :x2 829, :y2 558, :width 846.8999999999999, :height 1128}, :rects (), :page 214}, :content {:text "[:span]", :image 1666742722415}, :properties {:color "blue"}} {:id #uuid "635879e0-9085-43bf-86f2-d4e81ffd332e", :page 214, :position {:bounding {:x1 523, :y1 561, :x2 837, :y2 784, :width 846.8999999999999, :height 1128}, :rects (), :page 214}, :content {:text "[:span]", :image 1666742755659}, :properties {:color "yellow"}} {:id #uuid "635879fa-ea1a-434d-88a1-e93f681a9a4d", :page 215, :position {:bounding {:x1 108.59375, :y1 109.484375, :x2 158.56459045410156, :y2 130.484375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 109.484375, :x2 158.56459045410156, :y2 130.484375, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "Arrays"}, :properties {:color "yellow"}} {:id #uuid "63587a2f-1db3-45b3-a676-36fd2ade37aa", :page 215, :position {:bounding {:x1 0, :y1 16, :x2 738.2142333984375, :y2 175.15625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 417.1336975097656, :y1 132.671875, :x2 738.2142333984375, :y2 152.671875, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 155.15625, :x2 433.3048400878906, :y2 175.15625, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "Arrays in Java are implemented as objects, typically with extra overhead for the length. "}, :properties {:color "yellow"}} {:id #uuid "63587a3f-ae04-45d5-8295-06daac2e1cec", :page 215, :position {:bounding {:x1 0, :y1 32, :x2 739.0086059570312, :y2 220.15625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 32, :x2 0, :y2 48, :width 846.8999999999999, :height 1128} {:x1 0, :y1 48, :x2 0, :y2 64, :width 846.8999999999999, :height 1128} {:x1 433.28924560546875, :y1 155.15625, :x2 738.701171875, :y2 175.15625, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 177.65625, :x2 739.0086059570312, :y2 197.65625, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 200.15625, :x2 683.9149780273438, :y2 220.15625, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "An array of primitive-type values typically requires 24 bytes of header information (16 bytes of object overhead, 4 bytes for the length, and 4 bytes of padding) plus the memory needed to store the values. "}, :properties {:color "green"}} {:id #uuid "63587b45-79d0-4fab-93b9-91f396e4b0d4", :page 215, :position {:bounding {:x1 0, :y1 176, :x2 738.5955200195312, :y2 400.171875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 846.8999999999999, :height 1128} {:x1 431.3299560546875, :y1 357.65625, :x2 738.5955200195312, :y2 378.65625, :width 846.8999999999999, :height 1128} {:x1 684.40625, :y1 361.734375, :x2 738.5955200195312, :y2 376.734375, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 380.171875, :x2 190.32984924316406, :y2 400.171875, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text " two-dimensional M-by-N array of double values uses"}, :properties {:color "yellow"}} {:id #uuid "63587b5f-deba-45af-8f31-19e3a716fb33", :page 215, :position {:bounding {:x1 0, :y1 240, :x2 738.799560546875, :y2 512.65625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 846.8999999999999, :height 1128} {:x1 0, :y1 256, :x2 0, :y2 272, :width 846.8999999999999, :height 1128} {:x1 730.09619140625, :y1 447.671875, :x2 738.0938720703125, :y2 467.671875, :width 846.8999999999999, :height 1128} {:x1 108.609375, :y1 470.15625, :x2 738.799560546875, :y2 490.15625, :width 846.8999999999999, :height 1128} {:x1 108.625, :y1 492.65625, :x2 489.2122802734375, :y2 512.65625, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "a total of 8NM  32M  24 ~ 8NM bytes for the array of arrays filled with references to objects, plus the memory for the objects themselves."}, :properties {:color "yellow"}} {:id #uuid "63587be6-6932-4909-9886-3b72582fad1e", :page 215, :position {:bounding {:x1 108.59375, :y1 524.484375, :x2 218.05908203125, :y2 545.484375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 524.484375, :x2 218.05908203125, :y2 545.484375, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "String objects. "}, :properties {:color "yellow"}} {:id #uuid "63587c5e-f28c-450d-9ced-9a7206188092", :page 216, :position {:bounding {:x1 73, :y1 90, :x2 825, :y2 982, :width 846.8999999999999, :height 1128}, :rects (), :page 216}, :content {:text "[:span]", :image 1666743389536}, :properties {:color "blue"}} {:id #uuid "63587cf1-584a-4e96-84a9-6c9a88f7dd23", :page 217, :position {:bounding {:x1 18, :y1 101, :x2 334, :y2 288, :width 846.8999999999999, :height 1128}, :rects (), :page 217}, :content {:text "[:span]", :image 1666743884102}, :properties {:color "yellow"}} {:id #uuid "63587e91-359e-4b1b-8839-f6de5b308fca", :page 215, :position {:bounding {:x1 0, :y1 368, :x2 738.621337890625, :y2 682.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 846.8999999999999, :height 1128} {:x1 344.0130310058594, :y1 637.65625, :x2 738.621337890625, :y2 657.65625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 661.234375, :x2 522.087158203125, :y2 682.234375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 664.234375, :x2 226.387451171875, :y2 679.234375, :width 846.8999999999999, :height 1128} {:x1 292.828125, :y1 664.234375, :x2 513.30078125, :y2 679.234375, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "the string that is represented consists of the characters value[offset] through value[offset + count - 1]. "}, :properties {:color "blue"}} {:id #uuid "63587f12-e11b-46c2-a6c0-d27a26570dec", :page 215, :position {:bounding {:x1 0, :y1 400, :x2 738.5601959228516, :y2 725.15625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 846.8999999999999, :height 1128} {:x1 177.6770782470703, :y1 682.671875, :x2 738.5601959228516, :y2 702.671875, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 705.15625, :x2 233.1004638671875, :y2 725.15625, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text " a hash code that saves recomputation in certain circumstances that need not concern us now. "}, :properties {:color "yellow"}} {:id #uuid "63587f60-1144-4e41-950d-c156a7a2440c", :page 215, :position {:bounding {:x1 0, :y1 464, :x2 738.0048217773438, :y2 815.15625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 464, :x2 0, :y2 480, :width 846.8999999999999, :height 1128} {:x1 611.6315307617188, :y1 772.65625, :x2 738.0048217773438, :y2 792.65625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 795.15625, :x2 445.0344543457031, :y2 815.15625, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "The space needed for the characters is accounted for separately"}, :properties {:color "yellow"}} {:id #uuid "63587f69-dff1-4d3c-b4f7-d7475a41ff9d", :page 215, :position {:bounding {:x1 0, :y1 480, :x2 738.6456909179688, :y2 837.671875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 480, :x2 0, :y2 496, :width 846.8999999999999, :height 1128} {:x1 449.7185974121094, :y1 795.15625, :x2 738.6456909179688, :y2 816.15625, :width 846.8999999999999, :height 1128} {:x1 542.984375, :y1 799.234375, :x2 582.46875, :y2 814.234375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 817.671875, :x2 218.25567626953125, :y2 837.671875, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "because the char array is often shared among strings. "}, :properties {:color "blue"}} {:id #uuid "63587f8b-89ed-40e2-bc72-7478a95b352b", :page 215, :position {:bounding {:x1 0, :y1 496, :x2 738.6758422851562, :y2 860.171875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 496, :x2 0, :y2 512, :width 846.8999999999999, :height 1128} {:x1 218.24044799804688, :y1 817.671875, :x2 738.6758422851562, :y2 837.671875, :width 846.8999999999999, :height 1128} {:x1 261.34375, :y1 821.734375, :x2 318.90625, :y2 836.734375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 840.171875, :x2 726.296875, :y2 860.171875, :width 846.8999999999999, :height 1128} {:x1 353.828125, :y1 844.234375, :x2 411.390625, :y2 859.234375, :width 846.8999999999999, :height 1128} {:x1 658.5, :y1 844.234375, :x2 721.7161865234375, :y2 859.234375, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "Since String objects are immutable, this arrangement allows the implementation to save memory when String objects have the same underlying value[]."}, :properties {:color "green"}} {:id #uuid "63587fd4-0373-45a3-9286-32912adea364", :page 215, :position {:bounding {:x1 108.59375, :y1 871.984375, :x2 326.2450866699219, :y2 892.984375, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 871.984375, :x2 326.2450866699219, :y2 892.984375, :width 846.8999999999999, :height 1128}), :page 215}, :content {:text "String values and substrings"}, :properties {:color "yellow"}} {:id #uuid "63588230-0099-44ca-873f-01e3d5c66589", :page 217, :position {:bounding {:x1 0, :y1 0, :x2 738.821044921875, :y2 197.234375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 846.8999999999999, :height 1128} {:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 0, :y1 32, :x2 0, :y2 48, :width 846.8999999999999, :height 1128} {:x1 505.90521240234375, :y1 109.75, :x2 738.5513305664062, :y2 130.75, :width 846.8999999999999, :height 1128} {:x1 639.21875, :y1 113.8125, :x2 738.5513305664062, :y2 128.8125, :width 846.8999999999999, :height 1128} {:x1 340.671875, :y1 132.234375, :x2 738.6296997070312, :y2 152.234375, :width 846.8999999999999, :height 1128} {:x1 548.234375, :y1 136.3125, :x2 605.796875, :y2 151.3125, :width 846.8999999999999, :height 1128} {:x1 340.65625, :y1 154.734375, :x2 738.821044921875, :y2 175.734375, :width 846.8999999999999, :height 1128} {:x1 482.390625, :y1 158.8125, :x2 548.96875, :y2 173.8125, :width 846.8999999999999, :height 1128} {:x1 340.65625, :y1 177.234375, :x2 590.5328369140625, :y2 197.234375, :width 846.8999999999999, :height 1128}), :page 217}, :content {:text "When you use the substring() method, you create a new String object (40 bytes) but reuse the same value[] array, so a substring of an existing string takes just 40 bytes."}, :properties {:color "yellow"}} {:id #uuid "635882bd-5741-4602-ba4f-04b88e3525e8", :page 217, :position {:bounding {:x1 0, :y1 96, :x2 738.5148315429688, :y2 287.21875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 846.8999999999999, :height 1128} {:x1 532.484375, :y1 244.71875, :x2 738.5148315429688, :y2 264.71875, :width 846.8999999999999, :height 1128} {:x1 340.65625, :y1 267.21875, :x2 734.765869140625, :y2 287.21875, :width 846.8999999999999, :height 1128}), :page 217}, :content {:text "a substring takes constant extra memory and forming a substring takes constant time"}, :properties {:color "blue"}} {:id #uuid "6358830d-73e5-4cec-9cf2-63c1bc430e34", :page 217, :position {:bounding {:x1 23, :y1 287, :x2 304, :y2 699, :width 846.8999999999999, :height 1128}, :rects (), :page 217}, :content {:text "[:span]", :image 1666745159157}, :properties {:color "yellow"}} {:id #uuid "635883cd-275e-4af2-800e-caf4795ce785", :page 217, :position {:bounding {:x1 0, :y1 448, :x2 738.8892822265625, :y2 807.109375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 846.8999999999999, :height 1128} {:x1 199.390869140625, :y1 764.625, :x2 738.8892822265625, :y2 784.625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 787.109375, :x2 202.649658203125, :y2 807.109375, :width 846.8999999999999, :height 1128}), :page 217}, :content {:text "For this reason, creating arrays or other large objects in recursive programs is dangerous"}, :properties {:color "yellow"}} {:id #uuid "63588484-2b4e-4e02-afee-ff6171c16777", :page 218, :position {:bounding {:x1 108.59375, :y1 108.578125, :x2 208.98016357421875, :y2 132.578125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 108.578125, :x2 208.98016357421875, :y2 132.578125, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "Perspective"}, :properties {:color "yellow"}} {:id #uuid "63588505-9ed5-4e68-a0b7-39043e94c4af", :page 218, :position {:bounding {:x1 0, :y1 0, :x2 739.1036987304688, :y2 199.109375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 846.8999999999999, :height 1128} {:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 0, :y1 32, :x2 0, :y2 48, :width 846.8999999999999, :height 1128} {:x1 475.75665283203125, :y1 111.625, :x2 737.4601440429688, :y2 131.625, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 134.109375, :x2 738.6458129882812, :y2 154.109375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 156.609375, :x2 739.1036987304688, :y2 176.609375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 179.109375, :x2 167.4063262939453, :y2 199.109375, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "An impossibly slow program is almost as useless as an incorrect one, so it is certainly worthwhile to pay attention to the cost at the outset, to have some idea of which kinds of problems you might feasibly address."}, :properties {:color "blue"}} {:id #uuid "63588540-b99a-444e-acf7-30769b440188", :page 218, :position {:bounding {:x1 0, :y1 80, :x2 738.6571044921875, :y2 266.59375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 846.8999999999999, :height 1128} {:x1 128.59375, :y1 224.09375, :x2 738.6571044921875, :y2 244.09375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 246.59375, :x2 397.4586486816406, :y2 266.59375, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "Perhaps the most common mistake made in programming is to pay too much attention to performance characteristics."}, :properties {:color "yellow"}} {:id #uuid "63588549-5ca6-4b45-b760-41d16c1d1002", :page 218, :position {:bounding {:x1 0, :y1 96, :x2 737.6919555664062, :y2 289.078125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 846.8999999999999, :height 1128} {:x1 401.4595031738281, :y1 246.59375, :x2 737.6919555664062, :y2 266.59375, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 269.078125, :x2 199.43896484375, :y2 289.078125, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "Your first priority is to make your code clear and correct. "}, :properties {:color "green"}} {:id #uuid "635885a4-4d00-485e-b0ff-9744a99d5323", :page 218, :position {:bounding {:x1 201.75, :y1 359.0625, :x2 523.9073486328125, :y2 379.0625, :width 846.8999999999999, :height 1128}, :rects ({:x1 201.75, :y1 359.0625, :x2 523.9073486328125, :y2 379.0625, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "premature optimization is the root of all evil"}, :properties {:color "green"}} {:id #uuid "635885be-67f2-4964-af29-82272d41a387", :page 218, :position {:bounding {:x1 181.85137939453125, :y1 381.5625, :x2 459.9066162109375, :y2 401.5625, :width 846.8999999999999, :height 1128}, :rects ({:x1 181.85137939453125, :y1 381.5625, :x2 459.9066162109375, :y2 401.5625, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "(or at least most of it) in programming."}, :properties {:color "green"}} {:id #uuid "63588618-b88a-4091-b3ea-b2a0819231ee", :page 218, :position {:bounding {:x1 0, :y1 288, :x2 738.5285034179688, :y2 581.515625, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 846.8999999999999, :height 1128} {:x1 0, :y1 304, :x2 0, :y2 320, :width 846.8999999999999, :height 1128} {:x1 304.9424133300781, :y1 516.53125, :x2 738.5285034179688, :y2 536.53125, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 539.015625, :x2 737.970947265625, :y2 559.015625, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 561.515625, :x2 189.93605041503906, :y2 581.515625, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "Worse, you might spend a considerable amount of time and effort implementing ideas that should in theory improve a program but do not do so in practice."}, :properties {:color "yellow"}} {:id #uuid "63588669-2fe6-46a2-9fe9-7664fed0270b", :page 218, :position {:bounding {:x1 0, :y1 336, :x2 738.6075439453125, :y2 626.5, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 846.8999999999999, :height 1128} {:x1 128.578125, :y1 584.015625, :x2 738.6075439453125, :y2 604.015625, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 606.5, :x2 299.2415466308594, :y2 626.5, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "Perhaps the second most common mistake made in programming is to ignore performance characteristics."}, :properties {:color "yellow"}} {:id #uuid "63588711-ab63-4e02-86cc-60006d6b87d4", :page 218, :position {:bounding {:x1 0, :y1 400, :x2 739.005126953125, :y2 761.484375, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 846.8999999999999, :height 1128} {:x1 0, :y1 416, :x2 0, :y2 432, :width 846.8999999999999, :height 1128} {:x1 0, :y1 432, :x2 0, :y2 448, :width 846.8999999999999, :height 1128} {:x1 330.68572998046875, :y1 674, :x2 737.9642944335938, :y2 694, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 696.484375, :x2 738.6110229492188, :y2 716.484375, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 718.984375, :x2 739.005126953125, :y2 738.984375, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 741.484375, :x2 377.0794982910156, :y2 761.484375, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "Users of a surprising number of computer systems lose substantial time unknowingly waiting for brute-force quadratic algorithms to finish solving a problem, when linear or linearithmic algorithms are available that could solve the problem in a fraction of the time. "}, :properties {:color "blue"}} {:id #uuid "6358872f-72d5-491a-9af9-b2d9ec5314fe", :page 218, :position {:bounding {:x1 0, :y1 448, :x2 738.68017578125, :y2 783.96875, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 846.8999999999999, :height 1128} {:x1 377.0641784667969, :y1 741.484375, :x2 738.68017578125, :y2 761.484375, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 763.96875, :x2 477.1065673828125, :y2 783.96875, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text "When we are dealing with huge problem sizes, we often have no choice but to seek better algorithms."}, :properties {:color "yellow"}} {:id #uuid "635887a8-4e3a-4f23-b2fc-a9397b808d45", :page 218, :position {:bounding {:x1 0, :y1 528, :x2 738.7098999023438, :y2 896.453125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 528, :x2 0, :y2 544, :width 846.8999999999999, :height 1128} {:x1 447.0918884277344, :y1 853.953125, :x2 738.7098999023438, :y2 873.953125, :width 846.8999999999999, :height 1128} {:x1 108.5625, :y1 876.453125, :x2 693.9349975585938, :y2 896.453125, :width 846.8999999999999, :height 1128}), :page 218}, :content {:text " Improving a program to make it more clear, efficient, and elegant should be your goal every time that you work on it. "}, :properties {:color "yellow"}} {:id #uuid "6358886f-1c04-4b6e-9884-b6800c98d480", :page 219, :position {:bounding {:x1 0, :y1 224, :x2 738.6727294921875, :y2 546.078125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 846.8999999999999, :height 1128} {:x1 551.6643676757812, :y1 504.078125, :x2 738.6727294921875, :y2 524.078125, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 526.078125, :x2 506.9364013671875, :y2 546.078125, :width 846.8999999999999, :height 1128}), :page 219}, :content {:text "One way to mitigate such problems is to invest more time in more experiments. "}, :properties {:color "yellow"}} {:id #uuid "63588b25-3cd9-4ad4-8eab-9180ccbcca31", :page 220, :position {:bounding {:x1 0, :y1 16, :x2 738.2293090820312, :y2 259.75, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 846.8999999999999, :height 1128} {:x1 133.59375, :y1 217.75, :x2 738.2293090820312, :y2 237.75, :width 846.8999999999999, :height 1128} {:x1 108.578125, :y1 239.75, :x2 589.8529663085938, :y2 259.75, :width 846.8999999999999, :height 1128}), :page 220}, :content {:text "It facilitates development of bounds on the order of growth, even for complicated algorithms for which more precise analysis might not be feasible. "}, :properties {:color "yellow"}} {:id #uuid "63588f96-7272-45dd-a97d-d125e12cc61c", :page 229, :position {:bounding {:x1 108.59375, :y1 107.890625, :x2 387.8706970214844, :y2 132.890625, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 107.890625, :x2 144.046875, :y2 132.890625, :width 846.8999999999999, :height 1128} {:x1 160.109375, :y1 108.578125, :x2 387.8706970214844, :y2 131.578125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "1.5 CASE STUDY: UNION-FIND"}, :properties {:color "yellow"}} {:id #uuid "63588fd3-4b65-4a23-98b5-2c75b35aa67a", :page 229, :position {:bounding {:x1 320.52581787109375, :y1 213.28125, :x2 690.8866577148438, :y2 233.28125, :width 846.8999999999999, :height 1128}, :rects ({:x1 320.52581787109375, :y1 213.28125, :x2 690.8866577148438, :y2 233.28125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "Our purpose is to emphasize the following themes."}, :properties {:color "blue"}} {:id #uuid "63588fdf-b1ca-4577-9907-d8bfc5ee9005", :page 229, :position {:bounding {:x1 0, :y1 48, :x2 733.5374755859375, :y2 278.28125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 235.78125, :x2 733.5374755859375, :y2 255.78125, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 258.28125, :x2 487.39715576171875, :y2 278.28125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "Good algorithms can make the difference between being able to solve a practical problem and not being able to address it at all."}, :properties {:color "green"}} {:id #uuid "63588fe8-e2f7-4bca-9307-fa347e3d077c", :page 229, :position {:bounding {:x1 148.59375, :y1 280.78125, :x2 645.8342895507812, :y2 300.78125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59375, :y1 280.78125, :x2 645.8342895507812, :y2 300.78125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "An efficient algorithm can be as simple to code as an inefficient one."}, :properties {:color "green"}} {:id #uuid "63588ff7-8ced-4452-a661-d76ef3984df1", :page 229, :position {:bounding {:x1 0, :y1 96, :x2 730.3197631835938, :y2 345.78125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 303.28125, :x2 730.3197631835938, :y2 323.28125, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 325.78125, :x2 493.0662841796875, :y2 345.78125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "Understanding the performance characteristics of an implementation can be an interesting and satisfying intellectual challenge."}, :properties {:color "green"}} {:id #uuid "63589008-c53e-4e85-91e2-e978eab77229", :page 229, :position {:bounding {:x1 0, :y1 128, :x2 734.8076782226562, :y2 390.78125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 128, :x2 0, :y2 144, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 348.28125, :x2 734.8076782226562, :y2 368.28125, :width 846.8999999999999, :height 1128} {:x1 148.59375, :y1 370.78125, :x2 434.8740539550781, :y2 390.78125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "The scientific method is an important tool in helping us choose among different methods for solving the same problem."}, :properties {:color "green"}} {:id #uuid "63589015-8e40-4ffa-b787-1451e45724b5", :page 229, :position {:bounding {:x1 148.59375, :y1 393.28125, :x2 702.537109375, :y2 413.28125, :width 846.8999999999999, :height 1128}, :rects ({:x1 148.59375, :y1 393.28125, :x2 702.537109375, :y2 413.28125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "An iterative refinement process can lead to increasingly efficient algorithms."}, :properties {:color "green"}} {:id #uuid "63589179-b032-47f3-b985-b18f55404790", :page 229, :position {:bounding {:x1 108.59375, :y1 415.78125, :x2 483.174072265625, :y2 435.78125, :width 846.8999999999999, :height 1128}, :rects ({:x1 108.59375, :y1 415.78125, :x2 483.174072265625, :y2 435.78125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "These themes are reinforced throughout the book. "}, :properties {:color "blue"}} {:id #uuid "635891dc-0579-4c8f-8ba0-a2229fdb4ff1", :page 229, :position {:bounding {:x1 0, :y1 176, :x2 738.2952270507812, :y2 458.28125, :width 846.8999999999999, :height 1128}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 846.8999999999999, :height 1128} {:x1 483.158203125, :y1 415.78125, :x2 738.2952270507812, :y2 435.78125, :width 846.8999999999999, :height 1128} {:x1 108.59375, :y1 438.28125, :x2 669.064208984375, :y2 458.28125, :width 846.8999999999999, :height 1128}), :page 229}, :content {:text "This prototypical example sets the stage for our use of the same general methodology for many other problems."}, :properties {:color "purple"}} {:id #uuid "6358f114-dd1c-44d2-aa25-4a32e6e6149b", :page 238, :position {:bounding {:x1 359.65625, :y1 114.828125, :x2 768.4915161132812, :y2 135.828125, :width 880.776, :height 1173.1200000000001}, :rects ({:x1 359.65625, :y1 114.828125, :x2 768.4915161132812, :y2 135.828125, :width 880.776, :height 1173.1200000000001}), :page 238}, :content {:text "The code for quick-union is compact, but a bit opaque."}, :properties {:color "purple"}} {:id #uuid "635e61aa-4a40-4e75-adb4-c6086593d8f4", :page 206, :position {:bounding {:x1 91, :y1 342, :x2 754, :y2 527, :width 846.8999999999999, :height 1128}, :rects (), :page 206}, :content {:text "[:span]", :image 1667129769207}, :properties {:color "yellow"}} {:id #uuid "63c37bc8-299d-425f-8b80-6eeade3565e0", :page 190, :position {:bounding {:x1 82, :y1 96, :x2 835, :y2 535, :width 846.8999999999999, :height 1128}, :rects (), :page 190}, :content {:text "[:span]", :image 1673755590685}, :properties {:color "yellow"}} {:id #uuid "63c37bec-f96e-46e4-9216-3211a0d70f8d", :page 190, :position {:bounding {:x1 82, :y1 564, :x2 831, :y2 977, :width 846.8999999999999, :height 1128}, :rects (), :page 190}, :content {:text "[:span]", :image 1673755626658}, :properties {:color "yellow"}} {:id #uuid "63ca9ca8-8209-4c27-b66f-f3aedbc1cc14", :page 205, :position {:bounding {:x1 0, :y1 46.185562670230865, :x2 633.1003324389458, :y2 190.81854683160782, :width 728.9139315230225, :height 970.8524203069659}, :rects ({:x1 0, :y1 46.185562670230865, :x2 0, :y2 65.3558469414711, :width 728.9139315230225, :height 970.8524203069659} {:x1 127.88750284910202, :y1 154.10402351617813, :x2 633.1003324389458, :y2 171.44856697320938, :width 728.9139315230225, :height 970.8524203069659} {:x1 127.88750284910202, :y1 173.4739881157875, :x2 194.40851420164108, :y2 190.81854683160782, :width 728.9139315230225, :height 970.8524203069659}), :page 205}, :content {:text "Develop an input generator that produces inputs that model the inputs expected in practice"}, :properties {:color "yellow"}} {:id #uuid "63ca9cb3-ad31-42e6-9f99-7b39fd788000", :page 205, :position {:bounding {:x1 0, :y1 78.19309669733047, :x2 631.7879545092583, :y2 229.54423958063126, :width 728.9139315230225, :height 970.8524203069659}, :rects ({:x1 0, :y1 78.19309669733047, :x2 0, :y2 97.36338478326797, :width 728.9139315230225, :height 970.8524203069659} {:x1 127.88750284910202, :y1 192.84396797418594, :x2 631.7879545092583, :y2 210.18852669000626, :width 728.9139315230225, :height 970.8524203069659} {:x1 127.88750284910202, :y1 212.1996961236, :x2 528.188039958477, :y2 229.54423958063126, :width 728.9139315230225, :height 970.8524203069659}), :page 205}, :content {:text "Run the program DoublingRatio given below, a modification of DoublingTest that calculates the ratio of each running time with the previous."}, :properties {:color "yellow"}} {:id #uuid "63ca9cba-bb7d-4b9b-a4a3-b681065500a0", :page 205, :position {:bounding {:x1 127.88750284910202, :y1 231.56967598199844, :x2 378.11397379636765, :y2 248.9142194390297, :width 728.9139315230225, :height 970.8524203069659}, :rects ({:x1 127.88750284910202, :y1 231.56967598199844, :x2 378.11397379636765, :y2 248.9142194390297, :width 728.9139315230225, :height 970.8524203069659} {:x1 369.3561307787895, :y1 232.01184517145157, :x2 374.56233805418015, :y2 242.9662976861, :width 728.9139315230225, :height 970.8524203069659}), :page 205}, :content {:text "Run until the ratios approach a limit 2b."}, :properties {:color "yellow"}} {:id #uuid "63ca9dd2-f2c3-4c7f-911a-d30c48db1d0c", :page 205, :position {:bounding {:x1 81.86732482910156, :y1 504.484375, :x2 649.1309356689453, :y2 823.4757080078125, :width 728.9139315230225, :height 970.8524203069659}, :rects (), :page 205}, :content {:text "[:span]", :image 1674223063737}, :properties {:color "red"}}], :extra {:page 207}}