{:highlights [{:id #uuid "636b57cd-8223-49b3-94c3-3ea4d6a5c795", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 834.73388671875, :y2 451.0625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 419.734375, :y1 401.546875, :x2 820.0962524414062, :y2 423.546875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 429.0625, :x2 834.73388671875, :y2 451.0625, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Earlier we went classes and interfaces and we realized that when writing classes, we can sometimes write a lot of redundant code. "}, :properties {:color "purple"}} {:id #uuid "636b58f1-2e88-40fb-8630-2187a74a2514", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 856.9298706054688, :y2 908.78125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 223.953125, :y1 858.015625, :x2 856.9298706054688, :y2 880.015625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 886.78125, :x2 281.38507080078125, :y2 908.78125, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "As you’ll learn later in this class, programs can get a tad confusing when they are really large. "}, :properties {:color "purple"}} {:id #uuid "636b5bec-3f7c-4afa-8122-48366dddf720", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 850.104736328125, :y2 713.6875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 525.4627075195312, :y1 664.171875, :x2 850.104736328125, :y2 686.171875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 691.6875, :x2 787.2085571289062, :y2 713.6875, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "You need to ensure that what you are casting to can and will actually happen. There are a few rules that can be used:"}, :properties {:color "yellow"}} {:id #uuid "636b5c42-9888-4613-9161-69ba45b441c9", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 889.2061157226562, :y2 789.96875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 740.453125, :x2 881.447509765625, :y2 762.453125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 767.96875, :x2 889.2061157226562, :y2 789.96875, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "You can always cast up (to a more generic version of a class) without fear of ruining anything because we know the more specific version is a version of the generic class."}, :properties {:color "yellow"}} {:id #uuid "636b5c4d-b8dc-4832-a165-376cafcbfb35", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 860.7425537109375, :y2 817.484375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 795.484375, :x2 860.7425537109375, :y2 817.484375, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "For example you can always cast a Poodle to a Dog because all Poodles are Dog’s."}, :properties {:color "blue"}} {:id #uuid "636b5c79-be58-4bfe-bad1-9e4da94a0da8", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 884.2373657226562, :y2 893.765625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 844.25, :x2 855.8009033203125, :y2 866.25, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 871.765625, :x2 884.2373657226562, :y2 893.765625, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "You can also cast down (to a more specific version of a class) with caution as you need to make sure that, during runtime, nothing is passed in that violates your cast."}, :properties {:color "yellow"}} {:id #uuid "636b5c83-11e1-425b-ba23-8f96513d4156", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 667.7083740234375, :y2 922.53125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 900.53125, :x2 667.7083740234375, :y2 922.53125, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "For example, sometimes Dog’s are Poodle’s but not always."}, :properties {:color "blue"}} {:id #uuid "636b5cc4-cdb2-4e6a-9b4d-c5892865fb58", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 859.0079345703125, :y2 970.0625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 948.0625, :x2 859.0079345703125, :y2 970.0625, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "Finally, you cannot ever cast to a class that is above or below the class being cast."}, :properties {:color "yellow"}} {:id #uuid "636b5cd2-18b6-49f5-af72-3e4737fba204", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 876.9049682617188, :y2 1026.34375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 975.578125, :x2 876.9049682617188, :y2 997.578125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1004.34375, :x2 732.3717651367188, :y2 1026.34375, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "For an example, you cannot cast a Dog to a Monkey because a Monkey is not in the direct lineage of a Dog- it is a child of animal so a bit more distant."}, :properties {:color "blue"}}]}