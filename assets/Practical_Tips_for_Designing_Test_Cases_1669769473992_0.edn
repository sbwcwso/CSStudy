{:highlights [{:id #uuid "6386a90e-b65f-4125-b77a-723ed9f610e0", :page 1, :position {:bounding {:x1 98.328125, :y1 94.703125, :x2 658.1827392578125, :y2 127.703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 94.703125, :x2 658.1827392578125, :y2 127.703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Practical Tips for Designing Test Cases"}, :properties {:color "yellow"}} {:id #uuid "6386a939-4a6e-4257-af8d-69c8e2b09af0", :page 1, :position {:bounding {:x1 318.7093811035156, :y1 275.234375, :x2 650.8155517578125, :y2 297.234375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 318.7093811035156, :y1 275.234375, :x2 650.8155517578125, :y2 297.234375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "some thoughts for testing error cases:"}, :properties {:color "yellow"}} {:id #uuid "6386a945-b138-441d-ad05-8c388cc397ce", :page 1, :position {:bounding {:x1 148.34375, :y1 324, :x2 533.2637329101562, :y2 346, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 324, :x2 533.2637329101562, :y2 346, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Make sure your tests cover every error case."}, :properties {:color "yellow"}} {:id #uuid "6386a97d-b4d4-4aa9-ab52-dfcd7e70536d", :page 1, :position {:bounding {:x1 148.34375, :y1 511.59375, :x2 568.1624755859375, :y2 533.59375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 511.59375, :x2 568.1624755859375, :y2 533.59375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Be sure to test “too many” as well as “too few”. I"}, :properties {:color "yellow"}} {:id #uuid "6386a998-bc4d-44e8-9d54-eff89ae60dee", :page 1, :position {:bounding {:x1 148.34375, :y1 644.15625, :x2 790.2473754882812, :y2 666.15625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 644.15625, :x2 790.2473754882812, :y2 666.15625, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Any given test case can only test one “error message and exit” condition. "}, :properties {:color "yellow"}} {:id #uuid "6386a9e6-a8c8-4dbd-8455-7020b50e858d", :page 2, :position {:bounding {:x1 148.34375, :y1 72.625, :x2 494.9063720703125, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 72.625, :x2 494.9063720703125, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Test exactly at the boundary of validity."}, :properties {:color "yellow"}} {:id #uuid "6386aa3c-e47d-4913-8902-b509285e74ae", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 877.7369995117188, :y2 178.421875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 779.53125, :y1 128.90625, :x2 845.0125122070312, :y2 150.90625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 156.421875, :x2 877.7369995117188, :y2 178.421875, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Testing exactly at the boundaries is important because of the common “off by one” mistake"}, :properties {:color "yellow"}} {:id #uuid "6386aa62-8536-4c94-b5df-3cf5ae297537", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 859.4044799804688, :y2 234.703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 185.1875, :x2 859.4044799804688, :y2 207.1875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 212.703125, :x2 534.9912109375, :y2 234.703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "-maybe the programmer wrote < when he should have written <= or >= when he should have written > or something similar."}, :properties {:color "purple"}} {:id #uuid "6386aac9-bad1-477e-bbe6-337fde74551c", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 862.75341796875, :y2 338.5, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 733.758544921875, :y1 288.984375, :x2 862.75341796875, :y2 310.984375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 316.5, :x2 483.01708984375, :y2 338.5, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "make sure that the algorithm correctly handles valid inputs"}, :properties {:color "yellow"}} {:id #uuid "6386ab01-7a07-4261-a299-ef88469307af", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 805.2101440429688, :y2 414.78125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 365.28125, :x2 805.2101440429688, :y2 387.28125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 392.78125, :x2 745.1536254882812, :y2 414.78125, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Think carefully about whether or not there are any special cases where one particular input value (or set of values has to be treated unusually). "}, :properties {:color "yellow"}} {:id #uuid "6386ab27-9373-4216-8a36-6a5be73a10b7", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 872.5869140625, :y2 631.140625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 552.859375, :x2 872.5869140625, :y2 574.859375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 580.375, :x2 832.4033813476562, :y2 602.375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 609.140625, :x2 215.6802978515625, :y2 631.140625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Think carefully about the requirements, and consider whether something could be misinterpreted, easily mis-implemented, or have variations which could seem correct."}, :properties {:color "yellow"}} {:id #uuid "6386ab65-710f-48a8-b17c-6d85f9f4ecb7", :page 2, :position {:bounding {:x1 148.34375, :y1 769.21875, :x2 312.8337707519531, :y2 791.21875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 148.34375, :y1 769.21875, :x2 312.8337707519531, :y2 791.21875, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Think about types."}, :properties {:color "yellow"}} {:id #uuid "6386ab88-8c06-4971-91bb-e9aad420daaa", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 882.6189575195312, :y2 978.8125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 929.296875, :x2 882.6189575195312, :y2 951.296875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 956.8125, :x2 208.2630157470703, :y2 978.8125, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Consider any kind of off-by-one error that the programmer might have been able to make. "}, :properties {:color "yellow"}} {:id #uuid "6386abce-5325-47a9-9a3d-ba228e0b6ef0", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 889.3333740234375, :y2 1138.890625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1060.609375, :x2 841.7431640625, :y2 1082.609375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1089.375, :x2 889.3333740234375, :y2 1111.375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1116.890625, :x2 263.1623229980469, :y2 1138.890625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Whenever you have a particular type of problem in mind, think about how that mistake would affect the answer relative to the correct behavior, and make sure they are different."}, :properties {:color "yellow"}} {:id #uuid "6386ac5d-f8da-4e91-b162-45e04f8f1847", :page 3, :position {:bounding {:x1 98.328125, :y1 405.296875, :x2 796.7706909179688, :y2 427.296875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 405.296875, :x2 796.7706909179688, :y2 427.296875, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "Consider all major categories of inputs, and be sure you cover them."}, :properties {:color "yellow"}} {:id #uuid "6386ad0c-6ac7-41ef-8d43-345ef1fed45c", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 866.0721435546875, :y2 1078.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 973.078125, :x2 866.0721435546875, :y2 995.078125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1000.578125, :x2 847.4790649414062, :y2 1022.578125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1029.34375, :x2 849.47119140625, :y2 1051.34375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 148.34375, :y1 1056.859375, :x2 389.3724060058594, :y2 1078.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "An important corollary of the previous rules is that if your algorithm gives a set of answers where you can list all possible ones (true/false, values from an enum, a string from a particular set, etc), then your test cases should ensure that you get every answer at least once. "}, :properties {:color "yellow"}}], :extra {:page 1}}