{:highlights [{:id #uuid "6360c9f3-5af3-483a-bb6e-51448fce8175", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 859.5866088867188, :y2 270.125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 192.1235809326172, :y1 222.265625, :x2 859.5866088867188, :y2 243.265625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 249.125, :x2 279.8280334472656, :y2 270.125, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "It is also designed to allow multiple representations of abstract data to coexist in the same program."}, :properties {:color "yellow"}} {:id #uuid "6360cabc-bbae-4a44-8d87-17668b2d7993", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 853.615966796875, :y2 344.59375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 296.734375, :x2 853.615966796875, :y2 317.734375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 323.59375, :x2 447.595458984375, :y2 344.59375, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "A central concept in object abstraction is a generic function, which is a function that can accept values of multiple different types. "}, :properties {:color "yellow"}} {:id #uuid "6360cb43-5515-4690-9a88-a1e0a31ae5dc", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 848.8284912109375, :y2 372.671875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 447.57843017578125, :y1 323.59375, :x2 848.7699584960938, :y2 344.59375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 351.671875, :x2 848.8284912109375, :y2 372.671875, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "We will consider three different techniques for implementing generic functions: shared interfaces, type dispatching, and type coercion."}, :properties {:color "blue"}} {:id #uuid "6360cbff-8e71-4b4d-a3cd-ca5b1befef30", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 353.65509033203125, :y2 479.890625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 454.890625, :x2 353.65509033203125, :y2 479.890625, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "2.7.1 String Conversion"}, :properties {:color "yellow"}} {:id #uuid "6360cc42-b3c4-4448-8721-6f883ce9a031", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 819.0924682617188, :y2 549.703125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 501.84375, :x2 819.0924682617188, :y2 522.84375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 528.703125, :x2 718.8118896484375, :y2 549.703125, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "To represent data effectively, an object value should behave like the kind of data it is meant to represent, including producing a string representation of itself."}, :properties {:color "yellow"}} {:id #uuid "6360cc95-5157-469f-9c0e-d4ff3749201c", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 826.4326171875, :y2 705.96875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 658.109375, :x2 826.4326171875, :y2 679.109375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 684.96875, :x2 174.39834594726562, :y2 705.96875, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "String values provide a fundamental medium for communicating information among humans. "}, :properties {:color "yellow"}} {:id #uuid "6360cca1-1d9d-40e1-a7ac-4d8a463e65af", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 846.0501098632812, :y2 760.90625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 576.3125, :y1 713.046875, :x2 846.0501098632812, :y2 734.046875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 739.90625, :x2 629.2323608398438, :y2 760.90625, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "Strings are also fundamental to programming because they can represent Python expressions."}, :properties {:color "green"}} {:id #uuid "6360ccb1-4c55-4f58-9436-d277618b74c6", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 825.0975952148438, :y2 734.046875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 174.38096618652344, :y1 684.96875, :x2 825.0975952148438, :y2 705.96875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 713.046875, :x2 571.6097412109375, :y2 734.046875, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "Sequences of characters can be rendered on a screen, printed to paper, read aloud, converted to braille, or broadcast as Morse code."}, :properties {:color "purple"}} {:id #uuid "6360cd91-c01c-48a5-98fa-bcfb2c529489", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 824.0942993164062, :y2 808.515625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 787.515625, :x2 824.0942993164062, :y2 808.515625, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "Python stipulates that all objects should produce two different string representations"}, :properties {:color "yellow"}} {:id #uuid "6360cddd-ca9c-4af7-af4d-36825fcfd0fa", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 867.6788940429688, :y2 835.375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 835.7380981445312, :y1 787.515625, :x2 867.6788940429688, :y2 808.515625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 814.375, :x2 376.55865478515625, :y2 835.375, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "one that is human-interpretable text "}, :properties {:color "yellow"}} {:id #uuid "6360cde5-6649-4e7d-b78a-3d73ec47eb68", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 802.7171020507812, :y2 835.375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 413.7341003417969, :y1 814.375, :x2 802.7171020507812, :y2 835.375, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "one that is a Python-interpretable expression"}, :properties {:color "yellow"}} {:id #uuid "6360ce01-bf38-428c-83b8-8a3a47e5ede6", :page 1, :position {:bounding {:x1 375.859375, :y1 837.671875, :x2 703.4893798828125, :y2 866.671875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 375.859375, :y1 837.671875, :x2 411.0368957519531, :y2 866.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 411.015625, :y1 841.234375, :x2 703.4893798828125, :y2 862.234375, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "str, returns a human-readable string."}, :properties {:color "blue"}} {:id #uuid "6360ce17-712e-44ca-a439-7935f84d6990", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 778.4393920898438, :y2 895.984375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 128.25, :y1 866.984375, :x2 179.5, :y2 895.984375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 870.53125, :x2 129.8284149169922, :y2 891.53125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 175.125, :y1 871.984375, :x2 778.4393920898438, :y2 891.515625, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "the repr function returns a Python expression that evaluates to an equal object"}, :properties {:color "blue"}} {:id #uuid "6360ce5f-56b9-419e-8a19-7e2142bc3671", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 448.6104431152344, :y2 919.609375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 898.609375, :x2 448.6104431152344, :y2 919.609375, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "docstring for repr explains this property:"}, :properties {:color "yellow"}} {:id #uuid "6360dc5e-1afa-4a4e-abab-61230205c51e", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 809.3696899414062, :y2 1102.734375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 271.15625, :y1 1048.890625, :x2 322.421875, :y2 1077.890625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1052.4375, :x2 272.73468017578125, :y2 1073.4375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 322.765625, :y1 1052.4375, :x2 809.3696899414062, :y2 1073.4375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1081.734375, :x2 260.30181884765625, :y2 1102.734375, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "The result of calling repr on the value of an expression is what Python prints in an interactive session."}, :properties {:color "yellow"}} {:id #uuid "6360dc8a-cd60-4ddb-a468-7f6d8d03e317", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 806.1849365234375, :y2 1283.421875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1235.5625, :x2 806.1849365234375, :y2 1256.5625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1262.421875, :x2 644.8548583984375, :y2 1283.421875, :width 968.0000000000001, :height 1369.8040127607917}), :page 1}, :content {:text "In cases where no representation exists that evaluates to the original value, Python typically produces a description surrounded by angled brackets."}, :properties {:color "yellow"}} {:id #uuid "6360dcc4-9932-44fc-93ef-186962765f0b", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 839.009033203125, :y2 183.4375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 133.578125, :y1 130.8125, :x2 173.125, :y2 159.8125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 455.015625, :y1 130.8125, :x2 501.90789794921875, :y2 159.8125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 134.359375, :x2 135.1565399169922, :y2 155.359375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 173.453125, :y1 134.359375, :x2 456.5911560058594, :y2 155.359375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 501.90625, :y1 134.359375, :x2 839.009033203125, :y2 155.359375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 162.4375, :x2 356.2005310058594, :y2 183.4375, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "The str constructor often coincides with repr, but provides a more interpretable text representation in some cases. "}, :properties {:color "yellow"}} {:id #uuid "6360dd8e-4fdb-4316-907c-31f682bc937b", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 839.57666015625, :y2 494.75, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 753.390625, :y1 417.59375, :x2 839.57666015625, :y2 438.59375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 445.671875, :x2 832.4375, :y2 466.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 473.75, :x2 373.59942626953125, :y2 494.75, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "We would like it to be a generic or polymorphic function, one that can be applied to many (poly) different forms (morph) of data."}, :properties {:color "blue"}} {:id #uuid "6360de6e-defb-4556-a2ef-f45b770216f9", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 827.6697387695312, :y2 573.671875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 641.09375, :y1 516.59375, :x2 692.359375, :y2 545.59375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 610.2037353515625, :y1 520.15625, :x2 642.6721801757812, :y2 541.15625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 692.6875, :y1 520.15625, :x2 827.6697387695312, :y2 541.15625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 307.578125, :y1 544.671875, :x2 405.71875, :y2 573.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 548.234375, :x2 309.1536560058594, :y2 569.234375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 401.34375, :y1 549.671875, :x2 547.69140625, :y2 569.203125, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "the repr function always invokes a method called __repr__ on its argument."}, :properties {:color "yellow"}} {:id #uuid "6360dee8-1a64-4e60-b5f2-5587434dbe5b", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 271.02435302734375, :y2 815.40625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 133.578125, :y1 786.40625, :x2 173.125, :y2 815.40625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 789.953125, :x2 135.1565399169922, :y2 810.953125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 168.75, :y1 791.40625, :x2 271.02435302734375, :y2 810.9375, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "The str constructor"}, :properties {:color "yellow"}} {:id #uuid "6360deef-23be-4bce-8505-2f4e66ba2e47", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 820.1976928710938, :y2 844.703125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 611.924560546875, :y1 789.953125, :x2 820.1976928710938, :y2 810.953125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 815.703125, :x2 184.31842041015625, :y2 844.703125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 178.046875, :y1 820.703125, :x2 324.37890625, :y2 841.703125, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "invokes a method called __str__ on its argument."}, :properties {:color "yellow"}} {:id #uuid "6360df5d-f314-4e7d-bd7c-9c2ed03f1b06", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 857.7841796875, :y2 978.21875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 930.359375, :x2 857.7841796875, :y2 951.359375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 957.21875, :x2 406.7100524902344, :y2 978.21875, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "These polymorphic functions are examples of a more general principle: certain functions should apply to multiple data types. "}, :properties {:color "yellow"}} {:id #uuid "6360df91-6bf4-4eca-9cb8-7b3e0f6deb18", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 862.2548828125, :y2 1006.296875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 406.69293212890625, :y1 957.21875, :x2 862.2548828125, :y2 978.21875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 985.296875, :x2 645.3846435546875, :y2 1006.296875, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "Moreover, one way to create such a function is to use a shared attribute name with a different definition in each class."}, :properties {:color "blue"}} {:id #uuid "6360dfb9-483a-40bf-b54a-1f94d3d61623", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 336.576171875, :y2 1058.5625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1033.5625, :x2 336.576171875, :y2 1058.5625, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "2.7.2 Special Methods"}, :properties {:color "yellow"}} {:id #uuid "6360dfee-b49c-48d5-826a-c6f071c774b2", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 792.9952392578125, :y2 1129.59375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1080.515625, :x2 792.9952392578125, :y2 1101.515625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1108.59375, :x2 224.34426879882812, :y2 1129.59375, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "In Python, certain special names are invoked by the Python interpreter in special circumstances."}, :properties {:color "yellow"}} {:id #uuid "6360e030-7366-4dd2-a190-b4142a8a809a", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 839.846435546875, :y2 1157.671875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 378.515625, :y1 1105.046875, :x2 476.671875, :y2 1134.046875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 347.28271484375, :y1 1108.59375, :x2 380.09405517578125, :y2 1129.59375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 477, :y1 1108.59375, :x2 839.846435546875, :y2 1129.59375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1136.671875, :x2 391.784423828125, :y2 1157.671875, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "the __init__ method of a class is automatically invoked whenever an object is constructed."}, :properties {:color "yellow"}} {:id #uuid "6360e042-6a8e-4d96-93d5-c227205573f2", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 854.189453125, :y2 1185.75, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 435.171875, :y1 1133.125, :x2 521.59375, :y2 1162.125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 396.7438659667969, :y1 1136.671875, :x2 436.7474060058594, :y2 1157.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 521.921875, :y1 1136.671875, :x2 854.189453125, :y2 1157.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1164.75, :x2 165.9760284423828, :y2 1185.75, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "The __str__ method is invoked automatically when printing"}, :properties {:color "yellow"}} {:id #uuid "6360e052-7b94-47a7-bf21-be968d874be3", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 758.6310424804688, :y2 1190.203125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 213.640625, :y1 1161.203125, :x2 311.796875, :y2 1190.203125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 177.0189666748047, :y1 1164.75, :x2 215.2190399169922, :y2 1185.75, :width 968.0000000000001, :height 1369.8040127607917} {:x1 307.421875, :y1 1166.203125, :x2 758.6310424804688, :y2 1185.734375, :width 968.0000000000001, :height 1369.8040127607917}), :page 2}, :content {:text "and __repr__ is invoked in an interactive session to display values"}, :properties {:color "yellow"}} {:id #uuid "6360e07d-a6b2-41b7-9dc7-52a29161abd5", :page 3, :position {:bounding {:x1 95.984375, :y1 70.875, :x2 308.0715026855469, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 95.984375, :y1 70.875, :x2 308.0715026855469, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "True and false values"}, :properties {:color "yellow"}} {:id #uuid "6360e08d-65a9-4112-afb4-bb7bf988f2f1", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 814.509521484375, :y2 146.8125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 793.1421508789062, :y1 97.734375, :x2 814.509521484375, :y2 118.734375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 125.8125, :x2 406.7393798828125, :y2 146.8125, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "all objects in Python have a truth value."}, :properties {:color "yellow"}} {:id #uuid "6360e09d-e83b-4a69-bc49-6057a8a4c1bd", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 823.130126953125, :y2 202.96875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 412.04632568359375, :y1 125.8125, :x2 803.5999755859375, :y2 146.8125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 417.28125, :y1 149.125, :x2 515.4375, :y2 178.125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 152.671875, :x2 418.8567810058594, :y2 173.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 515.765625, :y1 152.671875, :x2 823.130126953125, :y2 173.671875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 181.96875, :x2 169.80178833007812, :y2 202.96875, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "By default, objects of user-defined classes are considered to be true, but the special __bool__ method can be used to override this behavior"}, :properties {:color "blue"}} {:id #uuid "6360e0e2-56bd-4463-b63a-d369928f0a3c", :page 3, :position {:bounding {:x1 95.984375, :y1 577.53125, :x2 305.73406982421875, :y2 598.53125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 95.984375, :y1 577.53125, :x2 305.73406982421875, :y2 598.53125, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "Sequence operations"}, :properties {:color "yellow"}} {:id #uuid "6360e111-f60e-4e59-b0db-37efc336342a", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 848.3536987304688, :y2 742.15625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 133.578125, :y1 713.15625, :x2 173.125, :y2 742.15625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 353.515625, :y1 713.15625, :x2 439.9375, :y2 742.15625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 716.703125, :x2 135.1565399169922, :y2 737.703125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 173.453125, :y1 716.703125, :x2 355.09405517578125, :y2 737.703125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 435.5625, :y1 718.15625, :x2 848.3536987304688, :y2 737.6875, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "The len function invokes the __len__ method of its argument to determine its length."}, :properties {:color "yellow"}} {:id #uuid "6360e124-e8e2-47d4-bc2d-838f0c373dfd", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 813.1105346679688, :y2 908.1875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 855.875, :x2 813.1105346679688, :y2 876.875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 879.1875, :x2 196.04989624023438, :y2 908.1875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 189.765625, :y1 884.1875, :x2 264.2518005371094, :y2 905.1875, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "Python uses a sequence's length to determine its truth value, if it does not provide a __bool__ method."}, :properties {:color "yellow"}} {:id #uuid "6360e128-b2a9-42ed-861f-f0abcc179929", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 823.5266723632812, :y2 903.734375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 269.59857177734375, :y1 882.734375, :x2 823.5266723632812, :y2 903.734375, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "Empty sequences are false, while non-empty sequences are true."}, :properties {:color "blue"}} {:id #uuid "6360e15f-39f8-4e9a-ae33-cdb91bc5597a", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 847.7537841796875, :y2 1130.8125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 133.578125, :y1 1078.1875, :x2 266.90625, :y2 1107.1875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1081.734375, :x2 135.1565399169922, :y2 1102.734375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 267.234375, :y1 1081.734375, :x2 847.7537841796875, :y2 1102.734375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1109.8125, :x2 264.88818359375, :y2 1130.8125, :width 968.0000000000001, :height 1369.8040127607917}), :page 3}, :content {:text "The __getitem__ method is invoked by the element selection operator, but it can also be invoked directly."}, :properties {:color "blue"}} {:id #uuid "6360e17c-2266-4226-9a1e-df99d25ec105", :page 4, :position {:bounding {:x1 95.984375, :y1 70.875, :x2 253.52818298339844, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 95.984375, :y1 70.875, :x2 253.52818298339844, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "Callable objects"}, :properties {:color "yellow"}} {:id #uuid "6360e198-4b04-4f88-a5ad-b9848f2b1a51", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 820.8880615234375, :y2 118.734375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 259.671875, :y1 70.875, :x2 820.8880615234375, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 97.734375, :x2 583.2510375976562, :y2 118.734375, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text " In Python, functions are first-class objects, so they can be passed around as data and have attributes like any other object. "}, :properties {:color "green"}} {:id #uuid "6360e1cb-528b-45ed-abd9-d953ae4e2499", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 848.7529907226562, :y2 151.265625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 583.2337036132812, :y1 97.734375, :x2 848.7529907226562, :y2 118.734375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 579.703125, :y1 122.265625, :x2 677.859375, :y2 151.265625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 125.8125, :x2 581.2815551757812, :y2 146.8125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 673.484375, :y1 127.265625, :x2 749.2356567382812, :y2 146.796875, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "Python also allows us to define objects that can be \"called\" like functions by including a __call__ method."}, :properties {:color "blue"}} {:id #uuid "6360e1db-aec2-43ae-b559-d36aaf0418f1", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 834.1806640625, :y2 174.890625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 754.2931518554688, :y1 125.8125, :x2 834.1806640625, :y2 146.8125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 153.890625, :x2 711.54052734375, :y2 174.890625, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "With this method, we can define a class that behaves like a higher-order function."}, :properties {:color "blue"}} {:id #uuid "6360e22c-119b-448a-9ab1-1f2f2abe4d23", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 852.9847412109375, :y2 835.375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 640.1873779296875, :y1 785.078125, :x2 852.9847412109375, :y2 806.078125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 814.375, :x2 407.8456726074219, :y2 835.375, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text " We have further blurred the line between data and functions."}, :properties {:color "purple"}} {:id #uuid "6360e27d-efba-47b6-bb96-72f18b1b9c85", :page 4, :position {:bounding {:x1 95.984375, :y1 860.765625, :x2 205.07460021972656, :y2 881.765625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 95.984375, :y1 860.765625, :x2 205.07460021972656, :y2 881.765625, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "Arithmetic"}, :properties {:color "yellow"}} {:id #uuid "6360e298-04ef-4575-918a-dac172892c0d", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 871.7042846679688, :y2 908.625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 216.0625, :y1 860.765625, :x2 871.7042846679688, :y2 881.765625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 887.625, :x2 281.387939453125, :y2 908.625, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "Special methods can also define the behavior of built-in operators applied to user-defined objects. "}, :properties {:color "blue"}} {:id #uuid "6360e2bd-808f-44d3-9328-ef38b9073d52", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 851.7647094726562, :y2 941.140625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 761.421875, :y1 912.140625, :x2 779.4121704101562, :y2 941.140625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 416.4886474609375, :y1 915.703125, :x2 761.609375, :y2 936.703125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 773.140625, :y1 917.140625, :x2 851.7647094726562, :y2 938.140625, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "to evaluate expressions that contain the + operator"}, :properties {:color "yellow"}} {:id #uuid "6360e2cd-678f-4a1a-abb1-68697a61e9b5", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 854.2172241210938, :y2 964.78125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 943.78125, :x2 854.2172241210938, :y2 964.78125, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "Python checks for special methods on both the left and right operands of the expression."}, :properties {:color "blue"}} {:id #uuid "6360e2d8-b8c4-4e4e-8e98-0a162967141f", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 756.3746337890625, :y2 996.09375, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 330.84375, :y1 967.09375, :x2 419.17779541015625, :y2 996.09375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 970.640625, :x2 331.03125, :y2 991.640625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 412.90625, :y1 972.09375, :x2 756.3746337890625, :y2 993.09375, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "First, Python checks for an __add__ method on the value of the left operand"}, :properties {:color "green"}} {:id #uuid "6360e2e4-ed53-42d5-9724-502d1202abcd", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 868.0848388671875, :y2 1025.390625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 767.1063842773438, :y1 970.640625, :x2 868.0848388671875, :y2 991.640625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 151.671875, :y1 996.390625, :x2 249.8125, :y2 1025.390625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 999.9375, :x2 153.2502899169922, :y2 1020.9375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 245.4375, :y1 1001.390625, :x2 607.236572265625, :y2 1020.921875, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "then checks for an __radd__ method on the value of the right operand."}, :properties {:color "blue"}} {:id #uuid "6360e2f2-0fdb-4479-ba9a-797f8e0f01a5", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 801.5624389648438, :y2 1049.015625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 612.6259765625, :y1 999.9375, :x2 801.5624389648438, :y2 1020.9375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1028.015625, :x2 706.6937255859375, :y2 1049.015625, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "If either is found, that method is invoked with the value of the other operand as its argument. "}, :properties {:color "green"}} {:id #uuid "6360e324-6a06-459a-823f-1fb67b24a42d", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 842.2184448242188, :y2 1103.953125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 747.99951171875, :y1 1056.109375, :x2 842.2184448242188, :y2 1077.109375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1082.953125, :x2 746.375, :y2 1103.953125, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "the Python documentation describes the exhaustive set of method names for operators."}, :properties {:color "blue"}} {:id #uuid "6360e659-cff5-40a6-83df-69c4a04b24f6", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 424.4842224121094, :y2 1211.171875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1186.171875, :x2 424.4842224121094, :y2 1211.171875, :width 968.0000000000001, :height 1369.8040127607917}), :page 4}, :content {:text "2.7.3 Multiple Representations"}, :properties {:color "yellow"}} {:id #uuid "6360e674-6f24-427b-b124-9c9f583761a6", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 754.4661865234375, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 70.875, :x2 754.4661865234375, :y2 91.875, :width 968.0000000000001, :height 1369.8040127607917}), :page 5}, :content {:text "Abstraction barriers allow us to separate the use and representation of data. "}, :properties {:color "blue"}} {:id #uuid "6360e6ee-08fb-430b-a1f2-602957aca1e5", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 841.2335205078125, :y2 384.875, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 321.6696472167969, :y1 308.9375, :x2 841.2335205078125, :y2 329.9375, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 337.015625, :x2 771.5911865234375, :y2 358.015625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 363.875, :x2 656.4352416992188, :y2 384.875, :width 968.0000000000001, :height 1369.8040127607917}), :page 5}, :content {:text "Indeed, it is perfectly plausible to imagine a system in which complex numbers are represented in both ways, and in which the functions for manipulating complex numbers work with either representation. "}, :properties {:color "blue"}} {:id #uuid "6360e6fa-a8a6-4a33-9405-e5b3729193cc", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 868.439453125, :y2 303.078125, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 227.140625, :x2 868.439453125, :y2 248.140625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 254, :x2 845.7146606445312, :y2 275, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 282.078125, :x2 155.5233154296875, :y2 303.078125, :width 968.0000000000001, :height 1369.8040127607917}), :page 5}, :content {:text "To take a simple example, complex numbers may be represented in two almost equivalent ways: in rectangular form (real and imaginary parts) and in polar form (magnitude and angle)."}, :properties {:color "yellow"}} {:id #uuid "6360e7b2-f47b-4f07-99a2-a07d24a8c83f", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 867.1580200195312, :y2 704.75, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 750.0264892578125, :y1 601.953125, :x2 867.1580200195312, :y2 622.953125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 628.8125, :x2 838.0344848632812, :y2 649.8125, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 656.890625, :x2 862.9503173828125, :y2 677.890625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 683.75, :x2 354.18035888671875, :y2 704.75, :width 968.0000000000001, :height 1369.8040127607917}), :page 5}, :content {:text "In addition to the data-abstraction barriers that isolate representation from use, we need abstraction barriers that isolate different design choices from each other and permit different choices to coexist in a single program."}, :properties {:color "yellow"}} {:id #uuid "6360e81b-45c4-4399-88e2-946ee9e24ea8", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 864.252197265625, :y2 1096.640625, :width 968.0000000000001, :height 1369.8040127607917}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 968.0000000000001, :height 1369.8040127607917} {:x1 0, :y1 0, :x2 0, :y2 16, :width 968.0000000000001, :height 1369.8040127607917} {:x1 719.515625, :y1 1015.921875, :x2 796.1279907226562, :y2 1044.921875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 584.4785766601562, :y1 1019.46875, :x2 719.6875, :y2 1040.46875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 794.5625, :y1 1019.46875, :x2 864.252197265625, :y2 1040.46875, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1047.5625, :x2 836.7034912109375, :y2 1068.5625, :width 968.0000000000001, :height 1369.8040127607917} {:x1 95.984375, :y1 1075.640625, :x2 160.48377990722656, :y2 1096.640625, :width 968.0000000000001, :height 1369.8040127607917}), :page 5}, :content {:text "The purpose of Number is not to be instantiated directly, but instead to serve as a superclass of various specific number classes."}, :properties {:color "blue"}} {:id #uuid "6360e8f2-f605-49c9-ba5e-c6e6d671c8b3", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 792.6964721679688, :y2 1153.203125, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 1104.59375, :x2 792.6964721679688, :y2 1125.59375, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 1132.203125, :x2 543.0294189453125, :y2 1153.203125, :width 951.935936, :height 1347.071968}), :page 5}, :content {:text "A complex number can be thought of as a point in two-dimensional space with two orthogonal axes, the real axis and the imaginary axis."}, :properties {:color "yellow"}} {:id #uuid "6360e989-6af9-4dff-8e18-10ae014b7b87", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 832.2099609375, :y2 1239.484375, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 589.640625, :y1 1211.484375, :x2 641.9458618164062, :y2 1239.484375, :width 951.935936, :height 1347.071968} {:x1 677.078125, :y1 1211.484375, :x2 729.3833618164062, :y2 1239.484375, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 1215.046875, :x2 589.796875, :y2 1236.046875, :width 951.935936, :height 1347.071968} {:x1 640.375, :y1 1215.046875, :x2 677.234375, :y2 1236.046875, :width 951.935936, :height 1347.071968} {:x1 723.1875, :y1 1216.484375, :x2 832.2099609375, :y2 1237.484375, :width 951.935936, :height 1347.071968}), :page 5}, :content {:text "Adding complex numbers involves adding their respective real and imag coordinates."}, :properties {:color "blue"}} {:id #uuid "6360e9a9-ee49-4f15-9ce7-3e19673f7757", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 854.718994140625, :y2 120.53125, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 69.6875, :x2 854.718994140625, :y2 90.6875, :width 951.935936, :height 1347.071968} {:x1 401.09375, :y1 92.53125, :x2 509.140625, :y2 120.53125, :width 951.935936, :height 1347.071968} {:x1 571.8125, :y1 92.53125, :x2 629.4666137695312, :y2 120.53125, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 96.09375, :x2 402.6312561035156, :y2 117.09375, :width 951.935936, :height 1347.071968} {:x1 509.453125, :y1 96.09375, :x2 573.3624877929688, :y2 117.09375, :width 951.935936, :height 1347.071968} {:x1 629.4375, :y1 96.09375, :x2 634.234375, :y2 117.09375, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "When multiplying complex numbers, it is more natural to think in terms of representing a complex number in polar form, as a magnitude and an angle."}, :properties {:color "green"}} {:id #uuid "6360ea66-b045-4411-a71d-a457cee95a38", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 845.6793212890625, :y2 172.328125, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 0, :y1 0, :x2 0, :y2 16, :width 951.935936, :height 1347.071968} {:x1 639.25, :y1 96.09375, :x2 799.8976440429688, :y2 117.09375, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 124.90625, :x2 845.6793212890625, :y2 145.90625, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 151.328125, :x2 719.9203491210938, :y2 172.328125, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "The product of two complex numbers is the vector obtained by stretching one complex number by a factor of the length of the other, and then rotating it through the angle of the other."}, :properties {:color "blue"}} {:id #uuid "6360eac7-3a92-477e-8609-8174f9039565", :page 6, :position {:bounding {:x1 142.421875, :y1 462.3125, :x2 764.5628662109375, :y2 490.3125, :width 951.935936, :height 1347.071968}, :rects ({:x1 142.421875, :y1 462.3125, :x2 252.3551788330078, :y2 490.3125, :width 951.935936, :height 1347.071968} {:x1 246.171875, :y1 467.3125, :x2 764.5628662109375, :y2 488.3125, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "ComplexRI constructs a complex number from real and imaginary parts."}, :properties {:color "blue"}} {:id #uuid "6360ead1-8da9-4c5d-9dca-89bf5feca7c3", :page 6, :position {:bounding {:x1 142.421875, :y1 491.125, :x2 749.4125366210938, :y2 519.125, :width 951.935936, :height 1347.071968}, :rects ({:x1 142.421875, :y1 491.125, :x2 252.3551788330078, :y2 519.125, :width 951.935936, :height 1347.071968} {:x1 246.171875, :y1 496.125, :x2 749.4125366210938, :y2 517.125, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "ComplexMA constructs a complex number from a magnitude and angle."}, :properties {:color "yellow"}} {:id #uuid "6360eae3-6dbb-414c-8857-d92f9d16008f", :page 6, :position {:bounding {:x1 94.390625, :y1 541.515625, :x2 194.80116271972656, :y2 562.515625, :width 951.935936, :height 1347.071968}, :rects ({:x1 94.390625, :y1 541.515625, :x2 194.80116271972656, :y2 562.515625, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "Interfaces"}, :properties {:color "yellow"}} {:id #uuid "6360eb15-8ebf-47ad-b864-8406588fb925", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 849.9277954101562, :y2 588.921875, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 201.15625, :y1 541.515625, :x2 849.9277954101562, :y2 562.515625, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 567.921875, :x2 570.2218627929688, :y2 588.921875, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text " Object attributes, which are a form of message passing, allows different data types to respond to the same message in different ways. "}, :properties {:color "blue"}} {:id #uuid "6360eb2f-161b-4199-b9da-957880d63b82", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 816.896240234375, :y2 616.546875, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 0, :y1 0, :x2 0, :y2 16, :width 951.935936, :height 1347.071968} {:x1 568.6875, :y1 567.921875, :x2 816.896240234375, :y2 588.921875, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 595.546875, :x2 777.4453735351562, :y2 616.546875, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "A shared set of messages that elicit similar behavior from different classes is a powerful method of abstraction. "}, :properties {:color "green"}} {:id #uuid "6360ebf3-61c9-4fd1-80b7-f56aac9291b0", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 830.4172973632812, :y2 642.953125, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 777.42822265625, :y1 595.546875, :x2 803.1705932617188, :y2 616.546875, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 621.953125, :x2 830.4172973632812, :y2 642.953125, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "An interface is a set of shared attribute names, along with a specification of their behavior."}, :properties {:color "red"}} {:id #uuid "6360ec61-df0a-4646-abaa-e0e8b188fd47", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 826.7548217773438, :y2 700.421875, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 348.2724609375, :y1 649.5625, :x2 826.7548217773438, :y2 670.5625, :width 951.935936, :height 1347.071968} {:x1 227.640625, :y1 672.421875, :x2 443.2341003417969, :y2 700.421875, :width 951.935936, :height 1347.071968} {:x1 489.71875, :y1 672.421875, :x2 547.3728637695312, :y2 700.421875, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 675.984375, :x2 227.8125, :y2 696.984375, :width 951.935936, :height 1347.071968} {:x1 273.75, :y1 675.984375, :x2 285.09686279296875, :y2 696.984375, :width 951.935936, :height 1347.071968} {:x1 329.671875, :y1 675.984375, :x2 341.0187683105469, :y2 696.984375, :width 951.935936, :height 1347.071968} {:x1 443.21875, :y1 675.984375, :x2 491.26873779296875, :y2 696.984375, :width 951.935936, :height 1347.071968} {:x1 547.359375, :y1 675.984375, :x2 552.15625, :y2 696.984375, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "the interface needed to implement arithmetic consists of four attributes: real, imag, magnitude, and angle."}, :properties {:color "blue"}} {:id #uuid "6360ec8f-77c1-4854-8b52-136596b156fe", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 813.0840454101562, :y2 802.46875, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 722.796875, :x2 813.0840454101562, :y2 743.796875, :width 951.935936, :height 1347.071968} {:x1 300.28125, :y1 746.859375, :x2 444.80523681640625, :y2 774.859375, :width 951.935936, :height 1347.071968} {:x1 664.5, :y1 746.859375, :x2 791.3150024414062, :y2 774.859375, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 750.421875, :x2 301.8187561035156, :y2 771.421875, :width 951.935936, :height 1347.071968} {:x1 443.234375, :y1 750.421875, :x2 664.671875, :y2 771.421875, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 774.46875, :x2 169.7583465576172, :y2 802.46875, :width 951.935936, :height 1347.071968} {:x1 163.5625, :y1 779.46875, :x2 612.28125, :y2 800.46875, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "For complex arithmetic to be correct, these attributes must be consistent. That is, the rectangular coordinates (real, imag) and the polar coordinates (magnitude, angle) must describe the same point on the complex plane. "}, :properties {:color "yellow"}} {:id #uuid "6360ecce-e144-4059-97fa-ea1157317c43", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 840.7329711914062, :y2 858.890625, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 649.109375, :y1 774.46875, :x2 734.109375, :y2 802.46875, :width 951.935936, :height 1347.071968} {:x1 612.125, :y1 778.03125, :x2 650.6437377929688, :y2 799.03125, :width 951.935936, :height 1347.071968} {:x1 734.421875, :y1 778.03125, :x2 774.9391479492188, :y2 799.03125, :width 951.935936, :height 1347.071968} {:x1 769.4375, :y1 802.078125, :x2 810.2145385742188, :y2 830.078125, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 805.640625, :x2 769.609375, :y2 826.640625, :width 951.935936, :height 1347.071968} {:x1 808.65625, :y1 805.640625, :x2 840.7329711914062, :y2 826.640625, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 830.890625, :x2 135.1520538330078, :y2 858.890625, :width 951.935936, :height 1347.071968} {:x1 128.96875, :y1 835.890625, :x2 290.401123046875, :y2 856.890625, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "The Complex class implicitly defines this interface by determining how these attributes are used to add and mul complex numbers."}, :properties {:color "blue"}} {:id #uuid "6360ecea-34c7-45df-8acf-f0d7527d430c", :page 6, :position {:bounding {:x1 94.390625, :y1 881.28125, :x2 198.80982971191406, :y2 902.28125, :width 951.935936, :height 1347.071968}, :rects ({:x1 94.390625, :y1 881.28125, :x2 198.80982971191406, :y2 902.28125, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "Properties"}, :properties {:color "yellow"}} {:id #uuid "6360ed14-3613-466b-92a1-c2544c4c06ce", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 778.3563842773438, :y2 929.890625, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 0, :y1 0, :x2 0, :y2 16, :width 951.935936, :height 1347.071968} {:x1 205.234375, :y1 881.28125, :x2 778.3563842773438, :y2 902.28125, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 908.890625, :x2 490.72021484375, :y2 929.890625, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text " The requirement that two or more attribute values maintain a fixed relationship with each other is a new problem. "}, :properties {:color "blue"}} {:id #uuid "6360ed55-fe81-41be-8d9a-db82f3e1f306", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 852.7581176757812, :y2 956.3125, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 0, :y1 0, :x2 0, :y2 16, :width 951.935936, :height 1347.071968} {:x1 490.7030029296875, :y1 908.890625, :x2 852.7581176757812, :y2 929.890625, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 935.3125, :x2 815.0130615234375, :y2 956.3125, :width 951.935936, :height 1347.071968}), :page 6}, :content {:text "One solution is to store attribute values for only one representation and compute the other representation whenever it is needed."}, :properties {:color "green"}} {:id #uuid "636300b4-562d-472e-b0b0-26c6da8c94b8", :page 6, :position {:bounding {:x1 0, :y1 0, :x2 889.5865478515625, :y2 1101.375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 230.015625, :y1 1047.0625, :x2 344.5036926269531, :y2 1076.0625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 191.5, :y1 1050.609375, :x2 230.1875, :y2 1072.609375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 342.90625, :y1 1050.609375, :x2 889.5865478515625, :y2 1072.609375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1079.375, :x2 507.1822509765625, :y2 1101.375, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "The @property decorator allows functions to be called without call expression syntax (parentheses following an expression). "}, :properties {:color "yellow"}} {:id #uuid "636301f8-5b09-4bbf-9fde-4391c6b9f9cd", :page 7, :position {:bounding {:x1 0, :y1 0, :x2 897.1513671875, :y2 485.734375, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 624.9375, :y1 424.515625, :x2 679.5625, :y2 454.515625, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 704.65625, :y1 424.515625, :x2 759.28125, :y2 454.515625, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 523.2044067382812, :y1 427.046875, :x2 626.6008911132812, :y2 451.046875, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 679.90625, :y1 427.046875, :x2 706.3216552734375, :y2 451.046875, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 759.625, :y1 427.046875, :x2 897.1513671875, :y2 451.046875, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 136.625, :y1 455.734375, :x2 253.6875, :y2 485.734375, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 293.78125, :y1 455.734375, :x2 356.23455810546875, :y2 485.734375, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 458.265625, :x2 138.29043579101562, :y2 482.265625, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 254.03125, :y1 458.265625, :x2 295.4602355957031, :y2 482.265625, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 356.203125, :y1 458.265625, :x2 361.40625, :y2 482.265625, :width 1031.2639306666667, :height 1459.3279653333334}), :page 7}, :content {:text "changes to real or imag are reflected in the magnitude and angle."}, :properties {:color "yellow"}} {:id #uuid "6363021c-6be6-469d-895c-d1e8bfb9686a", :page 7, :position {:bounding {:x1 0, :y1 0, :x2 867.5535278320312, :y2 1245.734375, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 0, :y1 0, :x2 0, :y2 16, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 722.859375, :y1 1188, :x2 777.484375, :y2 1218, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 817.59375, :y1 1188, :x2 867.5535278320312, :y2 1218, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 1190.515625, :x2 724.538330078125, :y2 1214.515625, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 777.84375, :y1 1190.515625, :x2 819.2571411132812, :y2 1214.515625, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 1221.734375, :x2 197.2181854248047, :y2 1245.734375, :width 1031.2639306666667, :height 1459.3279653333334}), :page 7}, :content {:text "Changes to the magnitude or angle are reflected immediately in the real and imag attributes."}, :properties {:color "yellow"}} {:id #uuid "636302b6-791a-4d4e-83d0-221a9a08b5e7", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 894.5195922851562, :y2 505.671875, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 481.671875, :x2 894.5195922851562, :y2 505.671875, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "The interface approach to encoding multiple representations has appealing properties."}, :properties {:color "blue"}} {:id #uuid "6363036e-a3b1-4542-86df-18e901868c7c", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 679.319580078125, :y2 535.59375, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 511.59375, :x2 679.319580078125, :y2 535.59375, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "The class for each representation can be developed separately; "}, :properties {:color "yellow"}} {:id #uuid "63630391-6b17-4cd6-b093-a95553b5faa5", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 896.7723388671875, :y2 592.8125, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 677.65625, :y1 511.59375, :x2 896.7723388671875, :y2 535.59375, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 540.203125, :x2 856.7796020507812, :y2 564.203125, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 568.8125, :x2 203.89773559570312, :y2 592.8125, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "they must only agree on the names of the attributes they share, as well as any behavior conditions for those attributes. "}, :properties {:color "green"}} {:id #uuid "636303b5-f581-4fa1-b1a1-8ff0753f33b6", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 471.6875, :y2 592.8125, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 202.21875, :y1 568.8125, :x2 471.6875, :y2 592.8125, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "The interface is also additive."}, :properties {:color "purple"}} {:id #uuid "63630411-2fc0-4ff3-a172-7c0a1d5c0656", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 913.3272094726562, :y2 651.34375, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 0, :y1 0, :x2 0, :y2 16, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 472.09375, :y1 568.8125, :x2 891.9645385742188, :y2 592.8125, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 598.734375, :x2 913.3272094726562, :y2 622.734375, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 627.34375, :x2 456.03070068359375, :y2 651.34375, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text " If another programmer wanted to add a third representation of complex numbers to the same program, they would only have to create another class with the same attributes."}, :properties {:color "red"}} {:id #uuid "6363043d-1023-4bb2-94c4-30896ffa0d9e", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 836.158935546875, :y2 759.296875, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 0, :y1 0, :x2 0, :y2 16, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 372.6106262207031, :y1 706.6875, :x2 836.158935546875, :y2 730.6875, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 735.296875, :x2 815.2115478515625, :y2 759.296875, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "Using data abstraction, we were able to change the implementation of a data type without changing the meaning of the program. "}, :properties {:color "yellow"}} {:id #uuid "6363046e-8567-49a0-84a8-d5b5f17f91fb", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 871.7217407226562, :y2 846.4375, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 0, :y1 0, :x2 0, :y2 16, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 244.12100219726562, :y1 793.828125, :x2 871.7217407226562, :y2 817.828125, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 822.4375, :x2 555.6240844726562, :y2 846.4375, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "In both cases, a set of names and corresponding behavior conditions define the abstraction that enables this flexibility."}, :properties {:color "yellow"}} {:id #uuid "636304ce-93fa-4d11-ab0a-da18af407966", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 924.728271484375, :y2 817.828125, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 0, :y1 0, :x2 0, :y2 16, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 815.1942138671875, :y1 735.296875, :x2 860.2864379882812, :y2 759.296875, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 765.21875, :x2 924.728271484375, :y2 789.21875, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 793.828125, :x2 244.13821411132812, :y2 817.828125, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "With interfaces and message passing, we can have multiple different representations within the same program. "}, :properties {:color "blue"}} {:id #uuid "636304e3-6199-4d9e-a83d-252f17a38a56", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 379.3817138671875, :y2 902.234375, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 876.234375, :x2 379.3817138671875, :y2 902.234375, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "2.7.4 Generic Functions"}, :properties {:color "yellow"}} {:id #uuid "63630509-085f-4137-b2ad-0a99c071e3b1", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 896.3618774414062, :y2 949.1875, :width 1031.2639306666667, :height 1459.3279653333334}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 1031.2639306666667, :height 1459.3279653333334} {:x1 102.265625, :y1 925.1875, :x2 896.3618774414062, :y2 949.1875, :width 1031.2639306666667, :height 1459.3279653333334}), :page 8}, :content {:text "Generic functions are methods or functions that apply to arguments of different types. "}, :properties {:color "yellow"}} {:id #uuid "63630546-246b-4326-87db-8bb83da724d1", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 851.6888427734375, :y2 1013.9375, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 0, :y1 0, :x2 0, :y2 16, :width 951.935936, :height 1347.071968} {:x1 755.6845092773438, :y1 937.703125, :x2 806.3504028320312, :y2 958.703125, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 966.53125, :x2 847.682861328125, :y2 987.53125, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 992.9375, :x2 851.6888427734375, :y2 1013.9375, :width 951.935936, :height 1347.071968}), :page 8}, :content {:text "Using interfaces and message passing is only one of several methods used to implement generic functions. We will consider two others in this section: type dispatching and type coercion."}, :properties {:color "blue"}} {:id #uuid "636305b6-1804-424d-97b4-75ca997538da", :page 8, :position {:bounding {:x1 0, :y1 0, :x2 815.364501953125, :y2 1088.375, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 0, :y1 0, :x2 0, :y2 16, :width 951.935936, :height 1347.071968} {:x1 723.140625, :y1 1035, :x2 815.364501953125, :y2 1063, :width 951.935936, :height 1347.071968} {:x1 613.2227172851562, :y1 1038.5625, :x2 724.6781616210938, :y2 1059.5625, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 1067.375, :x2 383.8103332519531, :y2 1088.375, :width 951.935936, :height 1347.071968}), :page 8}, :content {:text "implement a Rational class to represent fractions exactly"}, :properties {:color "yellow"}} {:id #uuid "63630737-f479-432a-82ff-771619597a4c", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 827.436279296875, :y2 795.421875, :width 951.935936, :height 1347.071968}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 951.935936, :height 1347.071968} {:x1 154.9831085205078, :y1 719.203125, :x2 827.436279296875, :y2 740.203125, :width 951.935936, :height 1347.071968} {:x1 388.984375, :y1 743.25, :x2 474, :y2 771.25, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 746.8125, :x2 390.5218811035156, :y2 767.8125, :width 951.935936, :height 1347.071968} {:x1 474.296875, :y1 746.8125, :x2 816.2815551757812, :y2 767.8125, :width 951.935936, :height 1347.071968} {:x1 94.390625, :y1 774.421875, :x2 225.83438110351562, :y2 795.421875, :width 951.935936, :height 1347.071968}), :page 9}, :content {:text "we would like to be able to add a complex number to a rational number, and we would like to do so using a generic __add__ method that does the right thing with all numeric types. "}, :properties {:color "yellow"}} {:id #uuid "63630b0e-c3f7-4b4b-8eab-8f099795a53d", :page 9, :position {:bounding {:x1 90.734375, :y1 840.125, :x2 252.298583984375, :y2 860.125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 90.734375, :y1 840.125, :x2 252.298583984375, :y2 860.125, :width 914.9999999999999, :height 1294.8044128885579}), :page 9}, :content {:text "Type dispatching"}, :properties {:color "yellow"}} {:id #uuid "63630b4d-ce7f-46c3-a905-d0f50b0feba3", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 791.1356811523438, :y2 886.671875, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 258.171875, :y1 840.125, :x2 791.1356811523438, :y2 860.125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 866.671875, :x2 585.61865234375, :y2 886.671875, :width 914.9999999999999, :height 1294.8044128885579}), :page 9}, :content {:text " One way to implement cross-type operations is to select behavior based on the types of the arguments to a function or method."}, :properties {:color "yellow"}} {:id #uuid "63630b5a-c724-45e2-90da-efd6b0dd27fe", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 819.1618041992188, :y2 938.59375, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 590.046875, :y1 866.671875, :x2 819.1618041992188, :y2 886.671875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 892.046875, :x2 790.5634765625, :y2 912.046875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 918.59375, :x2 370.632080078125, :y2 938.59375, :width 914.9999999999999, :height 1294.8044128885579}), :page 9}, :content {:text "The idea of type dispatching is to write functions that inspect the type of arguments they receive, then execute code that is appropriate for those types."}, :properties {:color "blue"}} {:id #uuid "63630b73-285c-45e8-8dbb-be4fc400c5b6", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 819.1497802734375, :y2 1008.984375, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 265, :y1 959.875, :x2 379.953125, :y2 985.875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 962.453125, :x2 266.49737548828125, :y2 982.453125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 380.265625, :y1 962.453125, :x2 819.1497802734375, :y2 982.453125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 988.984375, :x2 544.5208740234375, :y2 1008.984375, :width 914.9999999999999, :height 1294.8044128885579}), :page 9}, :content {:text "The built-in function isinstance takes an object and a class. It returns true if the object has a class that either is or inherits from the given class."}, :properties {:color "blue"}} {:id #uuid "63630c28-ee00-4925-ae39-6e59f2a454c2", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 824.2386474609375, :y2 431.953125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 603.8754272460938, :y1 381.984375, :x2 824.2386474609375, :y2 401.984375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 104.484375, :y1 405.953125, :x2 197.265625, :y2 431.953125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 294.109375, :y1 405.953125, :x2 386.890625, :y2 431.953125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 422.46875, :y1 405.953125, :x2 504.171875, :y2 431.953125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 408.53125, :x2 105.98173522949219, :y2 428.53125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 197.578125, :y1 408.53125, :x2 295.60675048828125, :y2 428.53125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 387.203125, :y1 408.53125, :x2 423.9660949707031, :y2 428.53125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 500.03125, :y1 409.953125, :x2 768.1989135742188, :y2 428.421875, :width 914.9999999999999, :height 1294.8044128885579}), :page 10}, :content {:text "For arithmetic, we will give a type_tag attribute to Rational and Complex instances that has a string value."}, :properties {:color "yellow"}} {:id #uuid "63630c9a-8f58-4780-99ce-fd43139cd513", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 821.6705932617188, :y2 486.1875, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 772.9169921875, :y1 408.53125, :x2 821.6705932617188, :y2 428.53125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 180.84375, :y1 433.640625, :x2 197.87109375, :y2 459.640625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 231.640625, :y1 433.640625, :x2 248.65234375, :y2 459.640625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 367.1875, :y1 433.640625, :x2 455.84619140625, :y2 459.640625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 436.21875, :x2 182.3446807861328, :y2 456.21875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 196.375, :y1 436.21875, :x2 231.8125, :y2 456.21875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 247.171875, :y1 436.21875, :x2 367.359375, :y2 456.21875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 455.828125, :y1 436.21875, :x2 790.3464965820312, :y2 456.21875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 460.1875, :x2 179.39610290527344, :y2 486.1875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 179.375, :y1 462.765625, :x2 189.27919006347656, :y2 482.765625, :width 914.9999999999999, :height 1294.8044128885579}), :page 10}, :content {:text "When two values x and y have the same type_tag, then we can combine them directly with x.add(y). "}, :properties {:color "blue"}} {:id #uuid "63630cd8-cb0f-4a6b-823b-1596f30c11bb", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 499.7699890136719, :y2 482.765625, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 189.26243591308594, :y1 462.765625, :x2 499.7699890136719, :y2 482.765625, :width 914.9999999999999, :height 1294.8044128885579}), :page 10}, :content {:text "If not, we need a cross-type operation."}, :properties {:color "green"}} {:id #uuid "63630d56-f2e6-4a0e-83ec-c4243104a917", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 805.8506469726562, :y2 1140.546875, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 1095.15625, :x2 805.8506469726562, :y2 1115.15625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 1120.546875, :x2 591.3048706054688, :y2 1140.546875, :width 914.9999999999999, :height 1294.8044128885579}), :page 10}, :content {:text "Both addition and multiplication are commutative, so swapping the argument order can use the same implementations of these cross-type operations."}, :properties {:color "yellow"}} {:id #uuid "63630e2c-8559-4a79-ae3a-1f4952b24bbe", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 772.4895629882812, :y2 172.34375, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 126.953125, :x2 772.4895629882812, :y2 146.953125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 152.34375, :x2 242.5856170654297, :y2 172.34375, :width 914.9999999999999, :height 1294.8044128885579}), :page 11}, :content {:text "The role of type dispatching is to ensure that these cross-type operations are used at appropriate times. "}, :properties {:color "yellow"}} {:id #uuid "63630e59-0215-44fe-a8ae-ff356eadfead", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 800.362060546875, :y2 203.453125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 425.203125, :y1 149.765625, :x2 495.828125, :y2 175.765625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 242.5684051513672, :y1 152.34375, :x2 426.7004699707031, :y2 172.34375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 496.140625, :y1 152.34375, :x2 800.362060546875, :y2 172.34375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 114.953125, :y1 177.453125, :x2 196.65625, :y2 203.453125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 232.21875, :y1 177.453125, :x2 313.921875, :y2 203.453125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 180.03125, :x2 116.45048522949219, :y2 200.03125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 196.953125, :y1 180.03125, :x2 233.7161102294922, :y2 200.03125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 309.78125, :y1 181.453125, :x2 390.0688171386719, :y2 199.921875, :width 914.9999999999999, :height 1294.8044128885579}), :page 11}, :content {:text "Below, we rewrite the Number superclass to use type dispatching for its __add__ and __mul__ methods."}, :properties {:color "blue"}} {:id #uuid "63630f14-db59-4d87-aa7f-a319aba8f8bd", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 791.9736938476562, :y2 351.203125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 742.95703125, :y1 251.578125, :x2 791.9736938476562, :y2 271.578125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 279.28125, :x2 775.1539306640625, :y2 299.28125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 304.671875, :x2 749.2422485351562, :y2 324.671875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 331.203125, :x2 289.8038024902344, :y2 351.203125, :width 914.9999999999999, :height 1294.8044128885579}), :page 11}, :content {:text "Using type tags also illustrates that type dispatching is not necessarily linked to the Python object system, but instead a general technique for creating generic functions over heterogeneous domains."}, :properties {:color "blue"}} {:id #uuid "636310d4-5ca9-4c1d-887c-79c5dfecf6e9", :page 12, :position {:bounding {:x1 90.734375, :y1 168.5, :x2 176.8396453857422, :y2 188.5, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 90.734375, :y1 168.5, :x2 176.8396453857422, :y2 188.5, :width 914.9999999999999, :height 1294.8044128885579}), :page 12}, :content {:text "Coercion"}, :properties {:color "yellow"}} {:id #uuid "636310fb-e115-487d-beac-59ca60d964ff", :page 12, :position {:bounding {:x1 0, :y1 0, :x2 803.9901733398438, :y2 265.8125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 609.2604370117188, :y1 219.265625, :x2 783.6361694335938, :y2 239.265625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 245.8125, :x2 803.9901733398438, :y2 265.8125, :width 914.9999999999999, :height 1294.8044128885579}), :page 12}, :content {:text "we can sometimes do better by taking advantage of additional structure that may be latent in our type system."}, :properties {:color "purple"}} {:id #uuid "6363115a-6eb9-455b-9265-3e3b17216f36", :page 12, :position {:bounding {:x1 0, :y1 0, :x2 811.0812377929688, :y2 317.75, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 271.203125, :x2 811.0812377929688, :y2 291.203125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 297.75, :x2 626.6597900390625, :y2 317.75, :width 914.9999999999999, :height 1294.8044128885579}), :page 12}, :content {:text "Often the different data types are not completely independent, and there may be ways by which objects of one type may be viewed as being of another type. "}, :properties {:color "yellow"}} {:id #uuid "6363117f-4714-446e-a106-01e8c1a13871", :page 12, :position {:bounding {:x1 0, :y1 0, :x2 799.1175537109375, :y2 343.125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 626.6427612304688, :y1 297.75, :x2 799.1175537109375, :y2 317.75, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 323.125, :x2 170.79421997070312, :y2 343.125, :width 914.9999999999999, :height 1294.8044128885579}), :page 12}, :content {:text "This process is called coercion. "}, :properties {:color "blue"}} {:id #uuid "6363127d-c525-4879-bb4f-6479104d36ac", :page 12, :position {:bounding {:x1 0, :y1 0, :x2 823.7084350585938, :y2 421.609375, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 170.7775115966797, :y1 323.125, :x2 820.5510864257812, :y2 343.125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 348.515625, :x2 823.7084350585938, :y2 368.515625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 406.703125, :y1 372.484375, :x2 534.52734375, :y2 398.484375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 568.3125, :y1 372.484375, :x2 696.12109375, :y2 398.484375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 375.0625, :x2 406.875, :y2 395.0625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 533.03125, :y1 375.0625, :x2 568.484375, :y2 395.0625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 694.640625, :y1 375.0625, :x2 785.6174926757812, :y2 395.0625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 401.609375, :x2 138.02725219726562, :y2 421.609375, :width 914.9999999999999, :height 1294.8044128885579}), :page 12}, :content {:text "For example, if we are asked to arithmetically combine a rational number with a complex number, we can view the rational number as a complex number whose imaginary part is zero. After doing so, we can use Complex.add and Complex.mul to combine them."}, :properties {:color "green"}} {:id #uuid "63631481-4703-424a-b329-ac6bad95b421", :page 12, :position {:bounding {:x1 0, :y1 0, :x2 816.1578979492188, :y2 492, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 446.609375, :x2 816.1578979492188, :y2 466.609375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 472, :x2 573.036865234375, :y2 492, :width 914.9999999999999, :height 1294.8044128885579}), :page 12}, :content {:text "In general, we can implement this idea by designing coercion functions that transform an object of one type into an equivalent object of another type."}, :properties {:color "yellow"}} {:id #uuid "636316b0-de92-44ef-ae06-24fb7e4896f3", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 824.2837524414062, :y2 503.53125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 457, :x2 824.2837524414062, :y2 477, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 483.53125, :x2 183.81265258789062, :y2 503.53125, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "This coercion scheme has some advantages over the method of defining explicit cross-type operations. "}, :properties {:color "yellow"}} {:id #uuid "636316ca-7554-4ce0-b493-235a0d89afda", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 815.5238037109375, :y2 554.3125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 748.4544677734375, :y1 483.53125, :x2 815.5238037109375, :y2 503.53125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 508.921875, :x2 803.6541748046875, :y2 528.921875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 534.3125, :x2 414.2556457519531, :y2 554.3125, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "we need to write only one function for each pair of types rather than a different function for each set of types and each generic operation. "}, :properties {:color "blue"}} {:id #uuid "63631704-740e-4215-a1a9-71d27938752d", :page 13, :position {:bounding {:x1 90.734375, :y1 631.25, :x2 511.637939453125, :y2 651.25, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 90.734375, :y1 631.25, :x2 511.637939453125, :y2 651.25, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "Further advantages come from extending coercion. "}, :properties {:color "red"}} {:id #uuid "63631719-0e01-43be-91e1-e211304e5f6e", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 814.3429565429688, :y2 702.03125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 510.140625, :y1 631.25, :x2 789.196044921875, :y2 651.25, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 656.640625, :x2 814.3429565429688, :y2 676.640625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 682.03125, :x2 473.13800048828125, :y2 702.03125, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "Some more sophisticated coercion schemes do not just try to coerce one type into another, but instead may try to coerce two different types each into a third common type. "}, :properties {:color "yellow"}} {:id #uuid "63631773-efc7-4823-8f91-2224bbd64a78", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 810.9898681640625, :y2 780.5, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 724.7177124023438, :y1 708.5625, :x2 791.1749877929688, :y2 728.5625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 733.953125, :x2 810.9898681640625, :y2 753.953125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 760.5, :x2 281.03125, :y2 780.5, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "Another extension to coercion is iterative coercion, in which one data type is coerced into another via intermediate types. "}, :properties {:color "yellow"}} {:id #uuid "636317e5-6730-44ca-ab62-03ce616d380f", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 770.8573608398438, :y2 728.5625, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 471.640625, :y1 682.03125, :x2 770.8573608398438, :y2 702.03125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 708.5625, :x2 720.7862548828125, :y2 728.5625, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "Consider a rhombus and a rectangle: neither is a special case of the other, but both can be viewed as quadrilaterals."}, :properties {:color "purple"}} {:id #uuid "636324eb-cb40-4461-9a86-3cd1c4098b23", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 819.3641967773438, :y2 831.28125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 280.859375, :y1 760.5, :x2 799.3233642578125, :y2 780.5, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 785.890625, :x2 819.3641967773438, :y2 805.890625, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 811.28125, :x2 161.93743896484375, :y2 831.28125, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "Consider that an integer can be converted into a real number by first converting it into a rational number, then converting that rational number into a real number. "}, :properties {:color "blue"}} {:id #uuid "63632512-3cc8-4861-bb33-5d87392b9224", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 814.0753784179688, :y2 857.8125, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 161.9202117919922, :y1 811.28125, :x2 814.0753784179688, :y2 831.28125, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 837.8125, :x2 345.8558044433594, :y2 857.8125, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "Chaining coercion in this way can reduce the total number of coercion functions that are required by a program."}, :properties {:color "green"}} {:id #uuid "6363258c-b1b5-42e0-a8bb-e6a1b0f995de", :page 13, :position {:bounding {:x1 282.03009033203125, :y1 881.671875, :x2 604.9852905273438, :y2 901.671875, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 282.03009033203125, :y1 881.671875, :x2 604.9852905273438, :y2 901.671875, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "coercion does have potential drawbacks"}, :properties {:color "yellow"}} {:id #uuid "63632594-8f58-4d30-8da5-ab084f231790", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 756.227294921875, :y2 928.21875, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 614.484375, :y1 881.671875, :x2 756.227294921875, :y2 901.671875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 908.21875, :x2 527.9761352539062, :y2 928.21875, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "For one, coercion functions can lose information when they are applied."}, :properties {:color "blue"}} {:id #uuid "636325a3-c423-4f38-9e73-557d798f934c", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 806.7303466796875, :y2 978.984375, :width 914.9999999999999, :height 1294.8044128885579}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 914.9999999999999, :height 1294.8044128885579} {:x1 0, :y1 0, :x2 0, :y2 16, :width 914.9999999999999, :height 1294.8044128885579} {:x1 532.40625, :y1 908.21875, :x2 806.7303466796875, :y2 928.21875, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 933.59375, :x2 757.231201171875, :y2 953.59375, :width 914.9999999999999, :height 1294.8044128885579} {:x1 90.734375, :y1 958.984375, :x2 241.46121215820312, :y2 978.984375, :width 914.9999999999999, :height 1294.8044128885579}), :page 13}, :content {:text "In our example, rational numbers are exact representations, but become approximations when they are converted to complex numbers."}, :properties {:color "green"}}], :extra {:page 6}}