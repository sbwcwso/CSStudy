{:highlights [{:id #uuid "63896f21-1e43-4319-ae1f-3eee79c3bd94", :page 1, :position {:bounding {:x1 98.328125, :y1 94.703125, :x2 208.4632568359375, :y2 127.703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 94.703125, :x2 208.4632568359375, :y2 127.703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Asserts"}, :properties {:color "yellow"}} {:id #uuid "63896f46-137b-459a-9a2a-db1f3f14dbac", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 866.9515380859375, :y2 269.71875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 220.203125, :x2 866.9515380859375, :y2 242.203125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 247.71875, :x2 721.5390014648438, :y2 269.71875, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "In any form of testing, it can be useful to not only check the end result, but also that the invariants of the system are maintained in the middle of its execution. "}, :properties {:color "yellow"}} {:id #uuid "63896f8a-fdd7-420b-8a2d-e56aa9c55de7", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 886.7667236328125, :y2 353.5, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 754.6549682617188, :y1 275.234375, :x2 845.776611328125, :y2 297.234375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 304, :x2 886.7667236328125, :y2 326, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 331.5, :x2 437.58984375, :y2 353.5, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "When you know an invariant that should be true at a given point in the code, you can write an assert statement , which checks that it is true"}, :properties {:color "yellow"}} {:id #uuid "63896fa4-82cf-4076-a565-06802de2c34b", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 779.1889038085938, :y2 353.5, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 447.890625, :y1 331.5, :x2 779.1889038085938, :y2 353.5, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "assert(expr); checks that expr is true."}, :properties {:color "blue"}} {:id #uuid "638970c8-c568-47e2-986a-98c704b23e61", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 856.1896362304688, :y2 122.140625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 72.625, :x2 856.1896362304688, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 100.140625, :x2 334.1021728515625, :y2 122.140625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Note that assert statements are an example of the principle that if our program has an error we want it to fail fast"}, :properties {:color "yellow"}} {:id #uuid "63897109-599e-4648-90f5-24fb4bd44fda", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 872.6802978515625, :y2 310.984375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 260.21875, :x2 872.6802978515625, :y2 282.21875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 288.984375, :x2 639.6849975585938, :y2 310.984375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "In almost all cases, giving the wrong answer (due to an undetected error) is significantly worse than the program detecting the situation and crashing. "}, :properties {:color "yellow"}} {:id #uuid "63897142-d477-4e53-9199-46ab8fd7814b", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 815.4271850585938, :y2 338.5, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 639.6676025390625, :y1 288.984375, :x2 815.4271850585938, :y2 310.984375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 316.5, :x2 705.1602783203125, :y2 338.5, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "To see this tradeoff, consider the case of software to compute a missile launch trajectory. "}, :properties {:color "purple"}} {:id #uuid "638971f8-20d9-4bf0-a8ac-8c0c9a3d60b1", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 852.6824340820312, :y2 498.578125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 834.4514770507812, :y1 449.0625, :x2 852.6824340820312, :y2 471.0625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 476.578125, :x2 611.0830688476562, :y2 498.578125, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "In many situations, 1–2% performance just does not matter—"}, :properties {:color "yellow"}} {:id #uuid "63897215-73a5-4fe3-9f77-b817a35b0aab", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 877.746826171875, :y2 554.859375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 619.881591796875, :y1 504.09375, :x2 877.746826171875, :y2 526.09375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 532.859375, :x2 470.8205871582031, :y2 554.859375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "there are performance critical situations where ever bit of speed matters."}, :properties {:color "yellow"}} {:id #uuid "63897221-45f9-4758-b3c5-51878e77e018", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 817.58935546875, :y2 582.375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 476.327880859375, :y1 532.859375, :x2 817.58935546875, :y2 554.859375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 560.375, :x2 804.6317138671875, :y2 582.375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "For these situations, you can pass the DNDEBUG option to the compiler to turn off the asserts in your optimized code."}, :properties {:color "yellow"}} {:id #uuid "6389729c-ea47-4354-b0d9-ff6cbb24feaa", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 885.0117797851562, :y2 666.15625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 629.614990234375, :y1 589.140625, :x2 827.902587890625, :y2 611.140625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 616.640625, :x2 885.0117797851562, :y2 638.640625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 644.15625, :x2 332.6641845703125, :y2 666.15625, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "Note that performance critical code is the domain of expert programmers who also have a deep understanding of the underlying hardware—"}, :properties {:color "blue"}}]}