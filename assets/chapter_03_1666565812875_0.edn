{:highlights
 [{:id #uuid "6355c6c1-2151-4036-9f5c-ac657b094616",
   :page 1,
   :position
   {:bounding
    {:x1 239.078125,
     :y1 134.875,
     :x2 448.4185791015625,
     :y2 167.875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.078125,
      :y1 134.875,
      :x2 448.4185791015625,
      :y2 167.875,
      :width 959.9999999999999,
      :height 1080}),
    :page 1},
   :content {:text "Sequential Logic"},
   :properties {:color "yellow"}}
  {:id #uuid "6355c761-54c1-4f18-8711-d66ac6c864cd",
   :page 1,
   :position
   {:bounding
    {:x1 0,
     :y1 64,
     :x2 836.7916259765625,
     :y2 479.390625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 64,
      :x2 0,
      :y2 80,
      :width 959.9999999999999,
      :height 1080}
     {:x1 303.9718017578125,
      :y1 438.84375,
      :x2 836.7916259765625,
      :y2 457.84375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 460.390625,
      :x2 398.3711853027344,
      :y2 479.390625,
      :width 959.9999999999999,
      :height 1080}),
    :page 1},
   :content
   {:text
    "Combinational chips compute functions that depend solely on combinations of their input values. T"},
   :properties {:color "blue"}}
  {:id #uuid "6355c795-aaca-43ad-84cb-dea8573a1be2",
   :page 1,
   :position
   {:bounding
    {:x1 0,
     :y1 96,
     :x2 836.71875,
     :y2 544.09375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 96,
      :x2 0,
      :y2 112,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 112,
      :x2 0,
      :y2 128,
      :width 959.9999999999999,
      :height 1080}
     {:x1 680.1658935546875,
      :y1 481.921875,
      :x2 836.71875,
      :y2 500.921875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 503.5625,
      :x2 836.6936645507812,
      :y2 522.5625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 525.09375,
      :x2 726.4150390625,
      :y2 544.09375,
      :width 959.9999999999999,
      :height 1080}),
    :page 1},
   :content
   {:text
    "Since computers must be able to not only compute values but also store and recall values, they must be equipped with memory elements that can preserve data over time. "},
   :properties {:color "blue"}}
  {:id #uuid "6355c7a7-3ba5-4b9a-a8f3-25b24d029ee5",
   :page 1,
   :position
   {:bounding
    {:x1 0,
     :y1 128,
     :x2 836.3787231445312,
     :y2 565.734375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 128,
      :x2 0,
      :y2 144,
      :width 959.9999999999999,
      :height 1080}
     {:x1 736.4766845703125,
      :y1 525.09375,
      :x2 836.3787231445312,
      :y2 544.09375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 546.734375,
      :x2 520.84375,
      :y2 565.734375,
      :width 959.9999999999999,
      :height 1080}),
    :page 1},
   :content
   {:text "hese memory elements are built from sequential chips."},
   :properties {:color "green"}}
  {:id #uuid "6355c7df-92de-4dbf-99ce-62c2548b5912",
   :page 1,
   :position
   {:bounding
    {:x1 0,
     :y1 160,
     :x2 836.7671508789062,
     :y2 608.90625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 160,
      :x2 0,
      :y2 176,
      :width 959.9999999999999,
      :height 1080}
     {:x1 255.609375,
      :y1 568.265625,
      :x2 836.7671508789062,
      :y2 587.265625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.078125,
      :y1 589.90625,
      :x2 508.3095703125,
      :y2 608.90625,
      :width 959.9999999999999,
      :height 1080}),
    :page 1},
   :content
   {:text
    "The implementation of memory elements is an intricate art involving synchronization, clocking, and feedback loops."},
   :properties {:color "blue"}}
  {:id #uuid "6355c826-ab64-4286-85d5-5263072d9f68",
   :page 1,
   :position
   {:bounding
    {:x1 0,
     :y1 176,
     :x2 836.90625,
     :y2 630.4375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 176,
      :x2 0,
      :y2 192,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 192,
      :x2 0,
      :y2 208,
      :width 959.9999999999999,
      :height 1080}
     {:x1 512.86962890625,
      :y1 589.90625,
      :x2 836.6824951171875,
      :y2 608.90625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.078125,
      :y1 611.4375,
      :x2 836.90625,
      :y2 630.4375,
      :width 959.9999999999999,
      :height 1080}),
    :page 1},
   :content
   {:text
    "Conveniently, most of this complexity can be embedded in the operating logic of very low-level sequential gates called flip-flops."},
   :properties {:color "green"}}
  {:id #uuid "6355c872-1f00-4a28-96cb-c14943fd38ce",
   :page 2,
   :position
   {:bounding
    {:x1 123.0625,
     :y1 123,
     :x2 256.2216796875,
     :y2 143,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 123.0625,
      :y1 123,
      :x2 147.9339599609375,
      :y2 143,
      :width 959.9999999999999,
      :height 1080}
     {:x1 164.546875,
      :y1 123,
      :x2 256.2216796875,
      :y2 143,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content {:text "3.1 Background"},
   :properties {:color "blue"}}
  {:id #uuid "6355c93b-7629-4c7a-9249-5050e344b19c",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 32,
     :x2 840.0245361328125,
     :y2 250.265625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 32,
      :x2 0,
      :y2 48,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 48,
      :x2 0,
      :y2 64,
      :width 959.9999999999999,
      :height 1080}
     {:x1 642.1963500976562,
      :y1 188.0625,
      :x2 840.0245361328125,
      :y2 207.0625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 209.625,
      :x2 839.6790771484375,
      :y2 228.625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 231.265625,
      :x2 436.89984130859375,
      :y2 250.265625,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    " in order to build chips that‘‘remember’’ information, we must first develop some standard means for representing the progression of time."},
   :properties {:color "blue"}}
  {:id #uuid "6355c973-50d7-4e9d-8a01-c4b36a046b88",
   :page 2,
   :position
   {:bounding
    {:x1 242.59375,
     :y1 274.453125,
     :x2 316.95941162109375,
     :y2 293.453125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.59375,
      :y1 274.453125,
      :x2 316.95941162109375,
      :y2 293.453125,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content {:text "The Clock "},
   :properties {:color "blue"}}
  {:id #uuid "6355c9b4-5523-4e27-a289-92a54991ea41",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 80,
     :x2 840.269775390625,
     :y2 314.984375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 80,
      :x2 0,
      :y2 96,
      :width 959.9999999999999,
      :height 1080}
     {:x1 331.96875,
      :y1 274.453125,
      :x2 840.269775390625,
      :y2 293.453125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 295.984375,
      :x2 640.2080078125,
      :y2 314.984375,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    "In most computers, the passage of time is represented by a master clock that delivers a continuous train of alternating signals. "},
   :properties {:color "green"}}
  {:id #uuid "6355c9ee-5e01-4a21-b15c-359c51daa68c",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 128,
     :x2 840.3023071289062,
     :y2 401.328125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 128,
      :x2 0,
      :y2 144,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 144,
      :x2 0,
      :y2 160,
      :width 959.9999999999999,
      :height 1080}
     {:x1 554.0169677734375,
      :y1 339.15625,
      :x2 840.072998046875,
      :y2 358.15625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 360.796875,
      :x2 840.3023071289062,
      :y2 379.796875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 382.328125,
      :x2 543.2289428710938,
      :y2 401.328125,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    "The elapsed time between the beginning of a ‘‘tick’’ and the end of the subsequent ‘‘tock’’ is called cycle, and each clock cycle is taken to model one discrete time unit. "},
   :properties {:color "blue"}}
  {:id #uuid "6355ca3b-3607-4d49-b280-85451ae3fdd7",
   :page 2,
   :position
   {:bounding
    {:x1 242.609375,
     :y1 468.6875,
     :x2 314.20440673828125,
     :y2 487.6875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.609375,
      :y1 468.6875,
      :x2 314.20440673828125,
      :y2 487.6875,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content {:text "Flip-Flops "},
   :properties {:color "blue"}}
  {:id #uuid "6355ca5a-6daa-4d88-91a1-2966b17acdd7",
   :page 2,
   :position
   {:bounding
    {:x1 306.09375,
     :y1 511.859375,
     :x2 466.82208251953125,
     :y2 530.859375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 306.09375,
      :y1 511.859375,
      :x2 466.82208251953125,
      :y2 530.859375,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content {:text "data flip-flop, or DFF, "},
   :properties {:color "blue"}}
  {:id #uuid "6355caa7-f3f3-4600-85f2-e7b0e45a5dbe",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 240,
     :x2 840.3739624023438,
     :y2 552.390625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 240,
      :x2 0,
      :y2 256,
      :width 959.9999999999999,
      :height 1080}
     {:x1 479.18719482421875,
      :y1 511.859375,
      :x2 840.3739624023438,
      :y2 530.859375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 533.390625,
      :x2 458.9461669921875,
      :y2 552.390625,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    "hose interface consists of a single-bit data input and a single-bit data output"},
   :properties {:color "blue"}}
  {:id #uuid "6355cac9-7ab6-416b-b4e4-1ce5ed7ea45a",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 256,
     :x2 840.3074340820312,
     :y2 574.03125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 256,
      :x2 0,
      :y2 272,
      :width 959.9999999999999,
      :height 1080}
     {:x1 463.9105224609375,
      :y1 533.390625,
      :x2 840.3074340820312,
      :y2 552.390625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 555.03125,
      :x2 658.45654296875,
      :y2 574.03125,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    " In addition, the DFF has a clock input that continuously changes according to the master clock’s signal."},
   :properties {:color "blue"}}
  {:id #uuid "6355cae1-3f36-4236-8d37-616e38f795f1",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 272,
     :x2 840.407470703125,
     :y2 638.734375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 272,
      :x2 0,
      :y2 288,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 288,
      :x2 0,
      :y2 304,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 304,
      :x2 0,
      :y2 320,
      :width 959.9999999999999,
      :height 1080}
     {:x1 662.736083984375,
      :y1 555.03125,
      :x2 840.0958862304688,
      :y2 574.03125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 576.5625,
      :x2 840.3675537109375,
      :y2 595.5625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 598.203125,
      :x2 840.407470703125,
      :y2 617.203125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 619.734375,
      :x2 327.3299560546875,
      :y2 638.734375,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    "Taken together, the data and the clock inputs enable the DFF to implement the time-based behavior outðtÞ ¼ inðt  1Þ, where in and out are the gate’s input and output values and t is the current clock cycle."},
   :properties {:color "green"}}
  {:id #uuid "6355caf1-4faa-4aec-9bba-e14f77ca95e0",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 320,
     :x2 840.2873840332031,
     :y2 660.28125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 320,
      :x2 0,
      :y2 336,
      :width 959.9999999999999,
      :height 1080}
     {:x1 327.3143615722656,
      :y1 619.734375,
      :x2 840.2873840332031,
      :y2 638.734375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 641.28125,
      :x2 340.1266784667969,
      :y2 660.28125,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    " In other words, the DFF simply outputs the input value from the previous time unit."},
   :properties {:color "purple"}}
  {:id #uuid "6355cc44-bd74-4e09-9be5-9eb0fae928de",
   :page 2,
   :position
   {:bounding
    {:x1 242.640625,
     :y1 749.265625,
     :x2 306.06182861328125,
     :y2 768.265625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.640625,
      :y1 749.265625,
      :x2 306.06182861328125,
      :y2 768.265625,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content {:text "Registers"},
   :properties {:color "yellow"}}
  {:id #uuid "6355cc68-deb1-4a38-b2f2-1e7e79a5fecb",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 400,
     :x2 839.13330078125,
     :y2 789.8125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 400,
      :x2 0,
      :y2 416,
      :width 959.9999999999999,
      :height 1080}
     {:x1 322.765625,
      :y1 749.265625,
      :x2 839.13330078125,
      :y2 768.265625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.65625,
      :y1 770.8125,
      :x2 775.8534545898438,
      :y2 789.8125,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    "A register is a storage device that can ‘‘store,’’ or ‘‘remember,’’ a value over time, implementing the classical storage behavior outðtÞ ¼ outðt  1Þ."},
   :properties {:color "blue"}}
  {:id #uuid "6355cd86-1aab-40f6-a787-41ccaa9102ab",
   :page 3,
   :position
   {:bounding
    {:x1 101,
     :y1 104,
     :x2 879,
     :y2 399,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 3},
   :content {:text "[:span]", :image 1666567561117},
   :properties {:color "blue"}}
  {:id #uuid "6355cda0-a3a7-49ac-b745-60d7348aaad6",
   :page 2,
   :position
   {:bounding
    {:x1 0,
     :y1 480,
     :x2 840.3992309570312,
     :y2 897.6875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 480,
      :x2 0,
      :y2 496,
      :width 959.9999999999999,
      :height 1080}
     {:x1 319.49664306640625,
      :y1 857.15625,
      :x2 840.3992309570312,
      :y2 876.15625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.640625,
      :y1 878.6875,
      :x2 741.1209716796875,
      :y2 897.6875,
      :width 959.9999999999999,
      :height 1080}),
    :page 2},
   :content
   {:text
    "Presumably, the output of this device at any time t will echo its output at time t  1, yielding the classical function expected from a storage unit."},
   :properties {:color "green"}}
  {:id #uuid "6355ce67-bb2d-4c7b-ab07-af775a306f09",
   :page 3,
   :position
   {:bounding
    {:x1 349.19244384765625,
     :y1 418.0625,
     :x2 735.0143432617188,
     :y2 437.0625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 349.19244384765625,
      :y1 418.0625,
      :x2 735.0143432617188,
      :y2 437.0625,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text "The device shown in the middle of figure 3.1 is invalid"},
   :properties {:color "yellow"}}
  {:id #uuid "6355ce83-5a2e-422e-abf1-32178fdd95f5",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 0,
     :x2 836.7681884765625,
     :y2 503.484375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 0,
      :x2 0,
      :y2 16,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 16,
      :x2 0,
      :y2 32,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 32,
      :x2 0,
      :y2 48,
      :width 959.9999999999999,
      :height 1080}
     {:x1 739.5247192382812,
      :y1 418.0625,
      :x2 836.4059448242188,
      :y2 437.0625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 439.59375,
      :x2 836.757080078125,
      :y2 458.59375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 461.234375,
      :x2 836.7681884765625,
      :y2 480.234375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 482.484375,
      :x2 309.2990417480469,
      :y2 503.484375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 486.484375,
      :x2 266.96990966796875,
      :y2 501.421875,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    " First, it is not clear how we’ll ever be able to load this device with a new data value, since there are no means to tell the DFF when to draw its input from the in wire and when from the out wire."},
   :properties {:color "blue"}}
  {:id #uuid "6355cf01-9c56-46b9-b6dd-00af2600e9ca",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 48,
     :x2 836.7474975585938,
     :y2 523.421875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 48,
      :x2 0,
      :y2 64,
      :width 959.9999999999999,
      :height 1080}
     {:x1 314.01800537109375,
      :y1 482.78125,
      :x2 836.7474975585938,
      :y2 501.78125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 504.421875,
      :x2 767.358154296875,
      :y2 523.421875,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "More generally, the rules of chip design dictate that internal pins must have a fan-in of 1, meaning that they can be fed from a single source only."},
   :properties {:color "green"}}
  {:id #uuid "6355cff6-fb41-45b0-82e4-352ba050cdaa",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 96,
     :x2 836.7155151367188,
     :y2 588.125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 96,
      :x2 0,
      :y2 112,
      :width 959.9999999999999,
      :height 1080}
     {:x1 620.647216796875,
      :y1 547.59375,
      :x2 836.7155151367188,
      :y2 566.59375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 569.125,
      :x2 749.3138427734375,
      :y2 588.125,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    " In particular, a natural way to resolve our input ambiguity is to introduce a multiplexor into the design."},
   :properties {:color "blue"}}
  {:id #uuid "6355d0cb-5f4e-4d48-add6-2c8c1b14fa41",
   :page 3,
   :position
   {:bounding
    {:x1 354.9458312988281,
     :y1 547.59375,
     :x2 616.068603515625,
     :y2 566.59375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 354.9458312988281,
      :y1 547.59375,
      :x2 616.068603515625,
      :y2 566.59375,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content {:text " shown in the right side of figure 3.1"},
   :properties {:color "blue"}}
  {:id #uuid "6355d0dd-d039-4e3b-8211-b1c9e4f5f135",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 112,
     :x2 836.7351684570312,
     :y2 609.671875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 112,
      :x2 0,
      :y2 128,
      :width 959.9999999999999,
      :height 1080}
     {:x1 814.1812133789062,
      :y1 569.125,
      :x2 836.7351684570312,
      :y2 588.125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 590.671875,
      :x2 835.4902954101562,
      :y2 609.671875,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "the‘‘select bit’’ of this multiplexor can become the ‘‘load bit’’ of the overall register chip:"},
   :properties {:color "blue"}}
  {:id #uuid "6355d139-24d5-4c0b-8d88-d89fc59ff20d",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 144,
     :x2 836.8535766601562,
     :y2 652.875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 144,
      :x2 0,
      :y2 160,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 612.296875,
      :x2 836.8535766601562,
      :y2 631.296875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 633.875,
      :x2 475.4534912109375,
      :y2 652.875,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "If we want the register to start storing a new value, we can put this value in the in input and set the load bit to 1; i"},
   :properties {:color "blue"}}
  {:id #uuid "6355d160-e658-4498-bbb2-b462cfce4168",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 160,
     :x2 836.6641235351562,
     :y2 674.5,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 160,
      :x2 0,
      :y2 176,
      :width 959.9999999999999,
      :height 1080}
     {:x1 475.4373779296875,
      :y1 633.875,
      :x2 836.6641235351562,
      :y2 652.875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 655.5,
      :x2 625.7899169921875,
      :y2 674.5,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "f we want the register to keep storing its internal value until further notice, we can set the load bit to 0."},
   :properties {:color "green"}}
  {:id #uuid "6355d1d8-858f-406a-8445-4125758c68f2",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 192,
     :x2 836.7775268554688,
     :y2 717.6875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 192,
      :x2 0,
      :y2 208,
      :width 959.9999999999999,
      :height 1080}
     {:x1 255.640625,
      :y1 677.046875,
      :x2 836.7775268554688,
      :y2 696.046875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 698.6875,
      :x2 652.0729370117188,
      :y2 717.6875,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "Once we have developed the basic mechanism for remembering a single bit over time, we can easily construct arbitrarily wide registers. "},
   :properties {:color "red"}}
  {:id #uuid "6355d27c-fd10-48aa-a3f8-ef0be81717e2",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 256,
     :x2 836.5,
     :y2 804.03125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 256,
      :x2 0,
      :y2 272,
      :width 959.9999999999999,
      :height 1080}
     {:x1 663.2598876953125,
      :y1 763.390625,
      :x2 836.5,
      :y2 782.390625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 785.03125,
      :x2 573.875,
      :y2 804.03125,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "The multi-bit contents of such registers are typically referred to as words."},
   :properties {:color "blue"}}
  {:id #uuid "6355d2cf-6ce1-4521-aee2-45a12ae1ad94",
   :page 3,
   :position
   {:bounding
    {:x1 239.09375,
     :y1 828.109375,
     :x2 308.0663146972656,
     :y2 847.109375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.09375,
      :y1 828.109375,
      :x2 308.0663146972656,
      :y2 847.109375,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content {:text "Memories"},
   :properties {:color "yellow"}}
  {:id #uuid "6355d31a-e2c0-4f0c-bc23-716ddf7ea082",
   :page 4,
   :position
   {:bounding
    {:x1 210,
     :y1 104,
     :x2 876,
     :y2 359,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 4},
   :content {:text "[:span]", :image 1666568985094},
   :properties {:color "blue"}}
  {:id #uuid "6355d337-b6f7-48d8-a4bd-60f114d930fd",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 288,
     :x2 836.7797241210938,
     :y2 868.75,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 288,
      :x2 0,
      :y2 304,
      :width 959.9999999999999,
      :height 1080}
     {:x1 324.796875,
      :y1 828.109375,
      :x2 836.7797241210938,
      :y2 847.109375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 849.75,
      :x2 533.6690063476562,
      :y2 868.75,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "Once we have the basic ability to represent words, we can proceed to build memory banks of arbitrary length. "},
   :properties {:color "blue"}}
  {:id #uuid "6355d485-e369-4772-a4be-17618acdfda7",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 304,
     :x2 835.7694702148438,
     :y2 890.28125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 304,
      :x2 0,
      :y2 320,
      :width 959.9999999999999,
      :height 1080}
     {:x1 689.8284301757812,
      :y1 849.75,
      :x2 835.7694702148438,
      :y2 868.75,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 871.28125,
      :x2 801.62353515625,
      :y2 890.28125,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "this can be done by stacking together many registers to form a Random Access Memory RAM unit."},
   :properties {:color "green"}}
  {:id #uuid "6355d4c6-22f5-4f0d-8ffc-c118de84ebb5",
   :page 3,
   :position
   {:bounding
    {:x1 0,
     :y1 320,
     :x2 836.8236083984375,
     :y2 911.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 320,
      :x2 0,
      :y2 336,
      :width 959.9999999999999,
      :height 1080}
     {:x1 806.1672973632812,
      :y1 871.28125,
      :x2 836.42041015625,
      :y2 890.28125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 892.921875,
      :x2 836.8236083984375,
      :y2 911.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 3},
   :content
   {:text
    "The term random access memory derives from the requirement that read/write operations"},
   :properties {:color "blue"}}
  {:id #uuid "6355d4db-63e3-45d6-8a53-77c67e4415b8",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 0,
     :x2 836.7371215820312,
     :y2 148.578125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 0,
      :x2 0,
      :y2 16,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 108.046875,
      :x2 836.7371215820312,
      :y2 127.046875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 129.578125,
      :x2 502.5645751953125,
      :y2 148.578125,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "on a RAM should be able to access randomly chosen words, with no restrictions on the order in which they are accessed"},
   :properties {:color "blue"}}
  {:id #uuid "6355d50d-0d46-426d-8180-921ac07d2ed2",
   :page 4,
   :position
   {:bounding
    {:x1 214,
     :y1 370,
     :x2 781,
     :y2 776,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 4},
   :content {:text "[:span]", :image 1666569483639},
   :properties {:color "blue"}}
  {:id #uuid "6355d593-891e-4a4f-b3ba-9f12f820dd78",
   :page 5,
   :position
   {:bounding
    {:x1 255.625,
     :y1 172.75,
     :x2 575.7393188476562,
     :y2 191.75,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 255.625,
      :y1 172.75,
      :x2 575.7393188476562,
      :y2 191.75,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content {:text "This requirement can be satisfied as follows."},
   :properties {:color "yellow"}}
  {:id #uuid "6355d5a7-b88e-44d7-8a21-6094c9372055",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 48,
     :x2 836.96875,
     :y2 234.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 48,
      :x2 0,
      :y2 64,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 64,
      :x2 0,
      :y2 80,
      :width 959.9999999999999,
      :height 1080}
     {:x1 580.2432250976562,
      :y1 172.75,
      :x2 836.96875,
      :y2 191.75,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 194.390625,
      :x2 836.708251953125,
      :y2 213.390625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 215.921875,
      :x2 374.44073486328125,
      :y2 234.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "First, we assign each word in the nregister RAM a unique address (an integer between 0 to n  1), according to which it will be accessed."},
   :properties {:color "green"}}
  {:id #uuid "6355d5ed-f2de-4d5a-9614-6dd8432ae519",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 80,
     :x2 836.8267822265625,
     :y2 278.09375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 80,
      :x2 0,
      :y2 96,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 96,
      :x2 0,
      :y2 112,
      :width 959.9999999999999,
      :height 1080}
     {:x1 374.4254455566406,
      :y1 215.921875,
      :x2 836.8267822265625,
      :y2 234.921875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 237.5625,
      :x2 836.808837890625,
      :y2 256.5625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.125,
      :y1 259.09375,
      :x2 413.3556823730469,
      :y2 278.09375,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    " Second, in addition to building an array of n registers, we build a gate logic design that, given an address j, is capable of selecting the individual register whose address is j. "},
   :properties {:color "blue"}}
  {:id #uuid "6355d647-0a14-402d-a9ea-4c970a844372",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 144,
     :x2 836.7612915039062,
     :y2 342.84375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 144,
      :x2 0,
      :y2 160,
      :width 959.9999999999999,
      :height 1080}
     {:x1 571.6068115234375,
      :y1 302.28125,
      :x2 836.7612915039062,
      :y2 321.28125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.125,
      :y1 323.84375,
      :x2 714.9225463867188,
      :y2 342.84375,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "the chip is equipped with direct access logic that implements the notion of addressing using logical means."},
   :properties {:color "blue"}}
  {:id #uuid "6355d6bc-9c5e-425d-9a67-a6956b0280ad",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 208,
     :x2 836.6953735351562,
     :y2 429.21875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 208,
      :x2 0,
      :y2 224,
      :width 959.9999999999999,
      :height 1080}
     {:x1 400.891357421875,
      :y1 388.640625,
      :x2 836.6953735351562,
      :y2 407.640625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 410.21875,
      :x2 610.7401123046875,
      :y2 429.21875,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "n the case of a read operation (load=0), the RAM’s output immediately emits the value of the selected register."},
   :properties {:color "purple"}}
  {:id #uuid "6355d750-4066-47bb-a1dd-b921ef48e4d6",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 272,
     :x2 836.8001098632812,
     :y2 515.5625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 272,
      :x2 0,
      :y2 288,
      :width 959.9999999999999,
      :height 1080}
     {:x1 255.640625,
      :y1 475.03125,
      :x2 836.8001098632812,
      :y2 494.03125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 496.5625,
      :x2 771.7276000976562,
      :y2 515.5625,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "The basic design parameters of a RAM device are its data width—the width of each one of its words, and its size—the number of words in the RAM."},
   :properties {:color "yellow"}}
  {:id #uuid "6355d7a7-9c60-4fa8-8e4c-8f737866289b",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 288,
     :x2 836.8071899414062,
     :y2 558.734375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 288,
      :x2 0,
      :y2 304,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 304,
      :x2 0,
      :y2 320,
      :width 959.9999999999999,
      :height 1080}
     {:x1 776.6483764648438,
      :y1 496.5625,
      :x2 836.71533203125,
      :y2 515.5625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 518.203125,
      :x2 836.8071899414062,
      :y2 537.203125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 539.734375,
      :x2 318.7859191894531,
      :y2 558.734375,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "Modern computers typically employ 32- or 64-bit-wide RAMs whose sizes are up to hundreds of millions."},
   :properties {:color "green"}}
  {:id #uuid "6355d7bd-04f0-4b3d-a5e9-3b302cedd692",
   :page 5,
   :position
   {:bounding
    {:x1 239.09375,
     :y1 582.921875,
     :x2 300.9827575683594,
     :y2 601.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.09375,
      :y1 582.921875,
      :x2 300.9827575683594,
      :y2 601.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content {:text "Counters"},
   :properties {:color "yellow"}}
  {:id #uuid "6355d801-706e-4747-a3ac-126da4847149",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 336,
     :x2 836.7730712890625,
     :y2 645.09375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 336,
      :x2 0,
      :y2 352,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 352,
      :x2 0,
      :y2 368,
      :width 959.9999999999999,
      :height 1080}
     {:x1 317.703125,
      :y1 582.921875,
      :x2 835.799072265625,
      :y2 601.921875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 604.46875,
      :x2 836.7730712890625,
      :y2 623.46875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 626.09375,
      :x2 321.0505676269531,
      :y2 645.09375,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "A counter is a sequential chip whose state is an integer number that increments every time unit, effecting the function outðtÞ ¼ outðt  1Þ þ c, where c is typically 1. "},
   :properties {:color "blue"}}
  {:id #uuid "6355d8a5-8b54-4831-86d3-d416238b6f63",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 416,
     :x2 835.8583374023438,
     :y2 731.453125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 416,
      :x2 0,
      :y2 432,
      :width 959.9999999999999,
      :height 1080}
     {:x1 255.640625,
      :y1 690.828125,
      :x2 835.8583374023438,
      :y2 709.828125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 712.453125,
      :x2 740.9005737304688,
      :y2 731.453125,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "A counter chip can be implemented by combining the input/output logic of a standard register with the combinatorial logic for adding a constant. "},
   :properties {:color "yellow"}}
  {:id #uuid "6355d8bc-8679-4222-a15f-63f1575a28ea",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 432,
     :x2 836.5278930664062,
     :y2 753,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 432,
      :x2 0,
      :y2 448,
      :width 959.9999999999999,
      :height 1080}
     {:x1 740.884765625,
      :y1 712.453125,
      :x2 836.5278930664062,
      :y2 731.453125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 734,
      :x2 730.995361328125,
      :y2 753,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "Typically, the counter will have to be equipped with some additional functionality, "},
   :properties {:color "blue"}}
  {:id #uuid "6355d8d1-f437-4218-a560-d523d5327a62",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 448,
     :x2 836.7780151367188,
     :y2 774.53125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 448,
      :x2 0,
      :y2 464,
      :width 959.9999999999999,
      :height 1080}
     {:x1 739.2547607421875,
      :y1 734,
      :x2 836.7780151367188,
      :y2 753,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 755.53125,
      :x2 502.4495849609375,
      :y2 774.53125,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text "uch as possibilities for resetting the count to zero,"},
   :properties {:color "yellow"}}
  {:id #uuid "6355d8e1-d048-41a9-9def-e70385a1fbb6",
   :page 5,
   :position
   {:bounding
    {:x1 510.4921875,
     :y1 755.53125,
     :x2 711.2222900390625,
     :y2 774.53125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 510.4921875,
      :y1 755.53125,
      :x2 711.2222900390625,
      :y2 774.53125,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content {:text "oading a new counting base"},
   :properties {:color "yellow"}}
  {:id #uuid "6355d8f0-8fd1-41ab-9ccc-08a96067ac0b",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 464,
     :x2 836.6255493164062,
     :y2 796.171875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 464,
      :x2 0,
      :y2 480,
      :width 959.9999999999999,
      :height 1080}
     {:x1 738.9615478515625,
      :y1 755.53125,
      :x2 836.6255493164062,
      :y2 774.53125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 777.171875,
      :x2 409.0473327636719,
      :y2 796.171875,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content {:text "decrementing instead of incrementing."},
   :properties {:color "blue"}}
  {:id #uuid "6355d905-600a-41db-a7e1-0e1dd6b4bf69",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 368,
     :x2 836.7872924804688,
     :y2 688.265625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 368,
      :x2 0,
      :y2 384,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 384,
      :x2 0,
      :y2 400,
      :width 959.9999999999999,
      :height 1080}
     {:x1 726.2633666992188,
      :y1 626.09375,
      :x2 836.7872924804688,
      :y2 645.09375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 647.640625,
      :x2 836.768310546875,
      :y2 666.640625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 669.265625,
      :x2 718.8670654296875,
      :y2 688.265625,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "For example, a typical CPU includes a program counter whose output is interpreted as the address of the instruction that should be executed next in the current program."},
   :properties {:color "blue"}}
  {:id #uuid "6355d95a-7658-4c4e-afd5-088fb616d3d6",
   :page 5,
   :position
   {:bounding
    {:x1 239.09375,
     :y1 820.359375,
     :x2 337.7646179199219,
     :y2 839.359375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.09375,
      :y1 820.359375,
      :x2 337.7646179199219,
      :y2 839.359375,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content {:text "Time Matters "},
   :properties {:color "yellow"}}
  {:id #uuid "6355d96b-91d1-4145-8b46-243ad37cf799",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 496,
     :x2 836.8246459960938,
     :y2 882.53125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 496,
      :x2 0,
      :y2 512,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 512,
      :x2 0,
      :y2 528,
      :width 959.9999999999999,
      :height 1080}
     {:x1 786.3358154296875,
      :y1 820.359375,
      :x2 836.6807861328125,
      :y2 839.359375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 841.890625,
      :x2 836.8246459960938,
      :y2 860.890625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 863.53125,
      :x2 335.10260009765625,
      :y2 882.53125,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "Simply stated, a sequential chip is a chip that embeds one or more DFF gates, either directly or indirectly. "},
   :properties {:color "blue"}}
  {:id #uuid "6355da48-c4cb-4f1e-aef3-2adaea032ea4",
   :page 5,
   :position
   {:bounding
    {:x1 0,
     :y1 528,
     :x2 836.8143310546875,
     :y2 904.0625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 528,
      :x2 0,
      :y2 544,
      :width 959.9999999999999,
      :height 1080}
     {:x1 335.0864562988281,
      :y1 863.53125,
      :x2 836.8143310546875,
      :y2 882.53125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 885.0625,
      :x2 836.7864379882812,
      :y2 904.0625,
      :width 959.9999999999999,
      :height 1080}),
    :page 5},
   :content
   {:text
    "Functionally speaking, the DFF gates endow sequential chips with the ability to either maintain state (as in memory units) or operate on state (as in"},
   :properties {:color "yellow"}}
  {:id #uuid "6355da50-f414-4df7-95d4-5d2fdb482055",
   :page 6,
   :position
   {:bounding
    {:x1 242.59375,
     :y1 376.578125,
     :x2 316.3872375488281,
     :y2 395.578125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.59375,
      :y1 376.578125,
      :x2 316.3872375488281,
      :y2 395.578125,
      :width 959.9999999999999,
      :height 1080}),
    :page 6},
   :content {:text "counters)."},
   :properties {:color "yellow"}}
  {:id #uuid "6355daf3-7075-4407-8f49-264dada21b0f",
   :page 6,
   :position
   {:bounding
    {:x1 0,
     :y1 0,
     :x2 840.1147766113281,
     :y2 417.125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 0,
      :x2 0,
      :y2 16,
      :width 959.9999999999999,
      :height 1080}
     {:x1 320.6848449707031,
      :y1 376.578125,
      :x2 840.1147766113281,
      :y2 395.578125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 398.125,
      :x2 351.9766845703125,
      :y2 417.125,
      :width 959.9999999999999,
      :height 1080}),
    :page 6},
   :content
   {:text
    "Technically speaking, this is done by forming feedback loops inside the sequential chip"},
   :properties {:color "blue"}}
  {:id #uuid "6355db01-b400-4fd2-8055-a53037321d0b",
   :page 6,
   :position
   {:bounding
    {:x1 230,
     :y1 98,
     :x2 847,
     :y2 357,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 6},
   :content {:text "[:span]", :image 1666571008424},
   :properties {:color "blue"}}
  {:id #uuid "6355ddb5-2691-4e83-ad5e-1015e8a6118e",
   :page 6,
   :position
   {:bounding
    {:x1 0,
     :y1 160,
     :x2 840.3054809570312,
     :y2 654.515625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 160,
      :x2 0,
      :y2 176,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 176,
      :x2 0,
      :y2 192,
      :width 959.9999999999999,
      :height 1080}
     {:x1 480.69293212890625,
      :y1 592.34375,
      :x2 840.26220703125,
      :y2 611.34375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 613.875,
      :x2 840.3054809570312,
      :y2 632.875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 635.515625,
      :x2 639.4778442382812,
      :y2 654.515625,
      :width 959.9999999999999,
      :height 1080}),
    :page 6},
   :content
   {:text
    "the inclusion of the DFFs in the sequential architecture ensures that their outputs change only at the point of transition from one clock cycle to the next, and not within the cycle itself. "},
   :properties {:color "yellow"}}
  {:id #uuid "6355de3f-8bcb-4481-aafb-ea30e0394374",
   :page 6,
   :position
   {:bounding
    {:x1 0,
     :y1 192,
     :x2 840.3633422851562,
     :y2 697.6875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 192,
      :x2 0,
      :y2 208,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 208,
      :x2 0,
      :y2 224,
      :width 959.9999999999999,
      :height 1080}
     {:x1 639.4620361328125,
      :y1 635.515625,
      :x2 840.2611694335938,
      :y2 654.515625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 657.046875,
      :x2 840.3633422851562,
      :y2 676.046875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 678.6875,
      :x2 551.6859741210938,
      :y2 697.6875,
      :width 959.9999999999999,
      :height 1080}),
    :page 6},
   :content
   {:text
    "In fact, we allow sequential chips to be in unstable states during clock cycles, requiring only that at the beginning of the next cycle they output correct values."},
   :properties {:color "blue"}}
  {:id #uuid "6355df07-95aa-4a95-a861-6e1b554d730f",
   :page 6,
   :position
   {:bounding
    {:x1 0,
     :y1 240,
     :x2 839.04931640625,
     :y2 740.859375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 240,
      :x2 0,
      :y2 256,
      :width 959.9999999999999,
      :height 1080}
     {:x1 259.21875,
      :y1 700.21875,
      :x2 839.04931640625,
      :y2 719.21875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 721.859375,
      :x2 710.0339965820312,
      :y2 740.859375,
      :width 959.9999999999999,
      :height 1080}),
    :page 6},
   :content
   {:text
    "This ‘‘discretization’’ of the sequential chips’ outputs has an important side effect: It can be used to synchronize the overall computer architecture."},
   :properties {:color "red"}}
  {:id #uuid "6355df3d-b02d-4c80-8f79-976eb3c85f7c",
   :page 7,
   :position
   {:bounding
    {:x1 0,
     :y1 32,
     :x2 836.6566162109375,
     :y2 212.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 32,
      :x2 0,
      :y2 48,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 48,
      :x2 0,
      :y2 64,
      :width 959.9999999999999,
      :height 1080}
     {:x1 532.9208984375,
      :y1 150.75,
      :x2 835.8118896484375,
      :y2 169.75,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 172.28125,
      :x2 836.6566162109375,
      :y2 191.28125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 193.921875,
      :x2 713.7400512695312,
      :y2 212.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content
   {:text
    "when we build the computer’s clock, that the length of the clock cycle will be slightly longer that the time it takes a bit to travel the longest distance from one chip in the architecture to another. "},
   :properties {:color "blue"}}
  {:id #uuid "6355e00b-8a62-4a9c-aca1-764a90f8020d",
   :page 7,
   :position
   {:bounding
    {:x1 0,
     :y1 64,
     :x2 836.769775390625,
     :y2 255.984375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 64,
      :x2 0,
      :y2 80,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 80,
      :x2 0,
      :y2 96,
      :width 959.9999999999999,
      :height 1080}
     {:x1 713.7244873046875,
      :y1 193.921875,
      :x2 836.4979248046875,
      :y2 212.921875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 215.453125,
      :x2 836.769775390625,
      :y2 234.453125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.09375,
      :y1 236.984375,
      :x2 765.4928588867188,
      :y2 255.984375,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content
   {:text
    "This way, we are guaranteed that by the time the sequential chip updates its state (at the beginning of the next clock cycle), the inputs that it receives from the ALU will be valid."},
   :properties {:color "yellow"}}
  {:id #uuid "6355e03e-999b-4b14-a954-1442383da883",
   :page 7,
   :position
   {:bounding
    {:x1 119.46875,
     :y1 349.578125,
     :x2 257.89764404296875,
     :y2 369.578125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 119.46875,
      :y1 349.578125,
      :x2 144.3402099609375,
      :y2 369.578125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 160.953125,
      :y1 349.578125,
      :x2 257.89764404296875,
      :y2 369.578125,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content {:text "3.2 Specification"},
   :properties {:color "yellow"}}
  {:id #uuid "6355e076-4566-44d2-a6f9-9a608aa03b02",
   :page 7,
   :position
   {:bounding
    {:x1 239.09375,
     :y1 393.109375,
     :x2 610.2901000976562,
     :y2 412.109375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.09375,
      :y1 393.109375,
      :x2 610.2901000976562,
      :y2 412.109375,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content
   {:text "This section specifies a hierarchy of sequential chips:"},
   :properties {:color "blue"}}
  {:id #uuid "6355e080-6537-4050-afd8-f52b35912225",
   :page 7,
   :position
   {:bounding
    {:x1 263.375,
     :y1 426.375,
     :x2 424.8157958984375,
     :y2 445.375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 263.375,
      :y1 426.375,
      :x2 424.8157958984375,
      :y2 445.375,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content {:text "Data-flip-flops (DFFs)"},
   :properties {:color "blue"}}
  {:id #uuid "6355e091-7db9-4dd5-a81c-e3c3cdac6f59",
   :page 7,
   :position
   {:bounding
    {:x1 263.375,
     :y1 452.921875,
     :x2 453.2084045410156,
     :y2 471.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 263.375,
      :y1 452.921875,
      :x2 453.2084045410156,
      :y2 471.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content {:text "Registers (based on DFFs)"},
   :properties {:color "green"}}
  {:id #uuid "6355e098-d069-4851-b0be-706f7b9a4c17",
   :page 7,
   :position
   {:bounding
    {:x1 263.375,
     :y1 479.484375,
     :x2 512.0296020507812,
     :y2 498.484375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 263.375,
      :y1 479.484375,
      :x2 512.0296020507812,
      :y2 498.484375,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content {:text "Memory banks (based on registers)"},
   :properties {:color "blue"}}
  {:id #uuid "6355e09f-de0d-4eb4-8a25-f47d191dffea",
   :page 7,
   :position
   {:bounding
    {:x1 263.375,
     :y1 506.03125,
     :x2 536.57763671875,
     :y2 525.03125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 263.375,
      :y1 506.03125,
      :x2 536.57763671875,
      :y2 525.03125,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content {:text "Counter chips (also based on registers)"},
   :properties {:color "green"}}
  {:id #uuid "6355e0f7-9cd1-4fc4-acb0-1abb691fbe61",
   :page 7,
   :position
   {:bounding
    {:x1 239.109375,
     :y1 549.21875,
     :x2 393.4593505859375,
     :y2 568.21875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.109375,
      :y1 549.21875,
      :x2 274.6452331542969,
      :y2 568.21875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 289.640625,
      :y1 549.21875,
      :x2 393.4593505859375,
      :y2 568.21875,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content {:text "3.2.1 Data-Flip-Flop"},
   :properties {:color "yellow"}}
  {:id #uuid "6355e116-082e-41fb-8d4b-f8be227ca1b7",
   :page 7,
   :position
   {:bounding
    {:x1 227,
     :y1 667,
     :x2 858,
     :y2 855,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 7},
   :content {:text "[:span]", :image 1666572565567},
   :properties {:color "blue"}}
  {:id #uuid "6355e133-10fa-4d4d-aa69-29b88533ac44",
   :page 7,
   :position
   {:bounding
    {:x1 277.6866760253906,
     :y1 885.859375,
     :x2 836.7003479003906,
     :y2 904.859375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 277.6866760253906,
      :y1 885.859375,
      :x2 836.7003479003906,
      :y2 904.859375,
      :width 959.9999999999999,
      :height 1080}),
    :page 7},
   :content
   {:text
    " Specifically, all the sequential chips in the computer (registers, memory, and"},
   :properties {:color "yellow"}}
  {:id #uuid "6355e13b-0376-4742-806e-26cae17e6ab5",
   :page 8,
   :position
   {:bounding
    {:x1 242.59375,
     :y1 107.578125,
     :x2 569.7418212890625,
     :y2 126.578125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.59375,
      :y1 107.578125,
      :x2 569.7418212890625,
      :y2 126.578125,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content {:text "counters) are based on numerous DFF gates"},
   :properties {:color "yellow"}}
  {:id #uuid "6355e162-36bb-4899-9ce9-2b59c62cd57d",
   :page 8,
   :position
   {:bounding
    {:x1 0,
     :y1 0,
     :x2 839.4784545898438,
     :y2 148.109375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 0,
      :x2 0,
      :y2 16,
      :width 959.9999999999999,
      :height 1080}
     {:x1 574.2803955078125,
      :y1 107.578125,
      :x2 839.4784545898438,
      :y2 126.578125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 129.109375,
      :x2 697.5776977539062,
      :y2 148.109375,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content
   {:text
    " All these DFFs are connected to the same master clock, forming a huge distributed ‘‘chorus line.’’ "},
   :properties {:color "purple"}}
  {:id #uuid "6355e1e4-025a-45a2-bd47-556d7a8f302c",
   :page 8,
   :position
   {:bounding
    {:x1 0,
     :y1 48,
     :x2 840.191650390625,
     :y2 212.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 48,
      :x2 0,
      :y2 64,
      :width 959.9999999999999,
      :height 1080}
     {:x1 519.6707763671875,
      :y1 172.28125,
      :x2 839.3825073242188,
      :y2 191.28125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 193.921875,
      :x2 840.191650390625,
      :y2 212.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content
   {:text
    "At all other times, the DFFs are ‘‘latched,’’ meaning that changes in their inputs have no immediate effect on their outputs."},
   :properties {:color "green"}}
  {:id #uuid "6355e29c-ba3b-4ce9-9899-ebd537f069fb",
   :page 8,
   :position
   {:bounding
    {:x1 0,
     :y1 240,
     :x2 840.3518676757812,
     :y2 493.40625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 240,
      :x2 0,
      :y2 256,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 256,
      :x2 0,
      :y2 272,
      :width 959.9999999999999,
      :height 1080}
     {:x1 259.234375,
      :y1 431.234375,
      :x2 840.3518676757812,
      :y2 450.234375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 452.859375,
      :x2 840.3341674804688,
      :y2 471.859375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 474.40625,
      :x2 467.00933837890625,
      :y2 493.40625,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content
   {:text
    "The physical implementation of a DFF is an intricate task, and is based on connecting several elementary logic gates using feedback loops (one classic design is based on Nand gates alone)"},
   :properties {:color "blue"}}
  {:id #uuid "6355e2ee-5b4f-4ada-8b93-f81013349a31",
   :page 8,
   :position
   {:bounding
    {:x1 242.59375,
     :y1 582.390625,
     :x2 356.489501953125,
     :y2 601.390625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.59375,
      :y1 582.390625,
      :x2 278.2389831542969,
      :y2 601.390625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 293.234375,
      :y1 582.390625,
      :x2 356.489501953125,
      :y2 601.390625,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content {:text "3.2.2 Registers"},
   :properties {:color "blue"}}
  {:id #uuid "6355e30e-7159-4142-9c80-eaed9ca390da",
   :page 8,
   :position
   {:bounding
    {:x1 0,
     :y1 352,
     :x2 840.3443603515625,
     :y2 666.125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 352,
      :x2 0,
      :y2 368,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 625.578125,
      :x2 840.3443603515625,
      :y2 644.578125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.609375,
      :y1 647.125,
      :x2 406.6567687988281,
      :y2 666.125,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content
   {:text
    "A single-bit register, which we call Bit, or binary cell, is designed to store a single bit of information (0 or 1). "},
   :properties {:color "blue"}}
  {:id #uuid "6355e32b-53e8-4cf2-8d34-4e8d68b24e15",
   :page 8,
   :position
   {:bounding
    {:x1 241,
     :y1 725,
     :x2 855,
     :y2 869,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 8},
   :content {:text "[:span]", :image 1666573111311},
   :properties {:color "blue"}}
  {:id #uuid "6355e340-40bd-4a4e-8579-44d5d7c01d05",
   :page 8,
   :position
   {:bounding
    {:x1 0,
     :y1 528,
     :x2 839.3594360351562,
     :y2 916.109375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 528,
      :x2 0,
      :y2 544,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 875.484375,
      :x2 839.3594360351562,
      :y2 894.484375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 897.109375,
      :x2 554.7303466796875,
      :y2 916.109375,
      :width 959.9999999999999,
      :height 1080}),
    :page 8},
   :content
   {:text
    "The API of the Register chip is essentially the same, except that the input and output pins are designed to handle multi-bit values:"},
   :properties {:color "blue"}}
  {:id #uuid "6355e383-29f3-4f43-833f-48a452f22253",
   :page 9,
   :position
   {:bounding
    {:x1 114,
     :y1 101,
     :x2 850,
     :y2 264,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 9},
   :content {:text "[:span]", :image 1666573186170},
   :properties {:color "yellow"}}
  {:id #uuid "6355e38c-b2fc-4d36-b8cc-695ad162462e",
   :page 9,
   :position
   {:bounding
    {:x1 239.109375,
     :y1 415.984375,
     :x2 348.9449768066406,
     :y2 434.984375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.109375,
      :y1 415.984375,
      :x2 274.6608581542969,
      :y2 434.984375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 289.640625,
      :y1 415.984375,
      :x2 348.9449768066406,
      :y2 434.984375,
      :width 959.9999999999999,
      :height 1080}),
    :page 9},
   :content {:text "3.2.3 Memory"},
   :properties {:color "yellow"}}
  {:id #uuid "6355e3b3-b8ab-4b8b-8d88-344c5cfe5cd2",
   :page 9,
   :position
   {:bounding
    {:x1 0,
     :y1 272,
     :x2 836.751220703125,
     :y2 499.703125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 272,
      :x2 0,
      :y2 288,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 459.171875,
      :x2 836.751220703125,
      :y2 478.171875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 480.703125,
      :x2 510.35791015625,
      :y2 499.703125,
      :width 959.9999999999999,
      :height 1080}),
    :page 9},
   :content
   {:text
    "A direct-access memory unit, also called RAM, is an array of n w-bit registers, equipped with direct access circuitry. "},
   :properties {:color "blue"}}
  {:id #uuid "6355e441-47a3-4e0e-bccd-10c0d36bde1c",
   :page 9,
   :position
   {:bounding
    {:x1 0,
     :y1 304,
     :x2 836.7742919921875,
     :y2 564.515625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 304,
      :x2 0,
      :y2 320,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 320,
      :x2 0,
      :y2 336,
      :width 959.9999999999999,
      :height 1080}
     {:x1 727.0473022460938,
      :y1 502.34375,
      :x2 836.7742919921875,
      :y2 521.34375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 523.875,
      :x2 836.6343383789062,
      :y2 542.875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 545.515625,
      :x2 670.2744750976562,
      :y2 564.515625,
      :width 959.9999999999999,
      :height 1080}),
    :page 9},
   :content
   {:text
    "We will now set out to build a hierarchy of such memory devices, all 16 bits wide, but with varying sizes: RAM8, RAM64, RAM512, RAM4K, and RAM16K units. A"},
   :properties {:color "blue"}}
  {:id #uuid "6355e5a6-d7e9-4e5a-825e-4faa6af60a05",
   :page 9,
   :position
   {:bounding
    {:x1 344,
     :y1 606,
     :x2 852,
     :y2 981,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 9},
   :content {:text "[:span]", :image 1666573732813},
   :properties {:color "blue"}}
  {:id #uuid "6355e5f2-e6c0-467d-87bf-0fdcd619f610",
   :page 10,
   :position
   {:bounding
    {:x1 242.59375,
     :y1 328.390625,
     :x2 349.0177307128906,
     :y2 347.390625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 242.59375,
      :y1 328.390625,
      :x2 278.2389831542969,
      :y2 347.390625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 293.234375,
      :y1 328.390625,
      :x2 349.0177307128906,
      :y2 347.390625,
      :width 959.9999999999999,
      :height 1080}),
    :page 10},
   :content {:text "3.2.4 Counter"},
   :properties {:color "blue"}}
  {:id #uuid "6355e65c-a2e5-418a-90ed-c956abbe7a1e",
   :page 10,
   :position
   {:bounding
    {:x1 0,
     :y1 336,
     :x2 840.334716796875,
     :y2 649.515625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 336,
      :x2 0,
      :y2 352,
      :width 959.9999999999999,
      :height 1080}
     {:x1 395.5441589355469,
      :y1 608.96875,
      :x2 840.334716796875,
      :y2 627.96875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.578125,
      :y1 630.515625,
      :x2 742.2105712890625,
      :y2 649.515625,
      :width 959.9999999999999,
      :height 1080}),
    :page 10},
   :content
   {:text
    "he interface of our Counter chip is similar to that of a register, except that it has two additional control bits labeled reset and inc. "},
   :properties {:color "blue"}}
  {:id #uuid "6355e732-bf30-485c-a0ec-6413c00429d1",
   :page 11,
   :position
   {:bounding
    {:x1 105,
     :y1 103,
     :x2 853,
     :y2 962,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 11},
   :content {:text "[:span]", :image 1666574137436},
   :properties {:color "blue"}}
  {:id #uuid "6355e84a-c214-4260-9a51-d6ffba7589ee",
   :page 13,
   :position
   {:bounding
    {:x1 229,
     :y1 104,
     :x2 847,
     :y2 542,
     :width 959.9999999999999,
     :height 1080},
    :rects (),
    :page 13},
   :content {:text "[:span]", :image 1666574417159},
   :properties {:color "yellow"}}
  {:id #uuid "6355e8bc-f147-4640-a4d3-5f10302916a7",
   :page 12,
   :position
   {:bounding
    {:x1 123.0625,
     :y1 781.296875,
     :x2 250.26849365234375,
     :y2 801.296875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 123.0625,
      :y1 781.296875,
      :x2 147.9339599609375,
      :y2 801.296875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 164.546875,
      :y1 781.296875,
      :x2 250.26849365234375,
      :y2 801.296875,
      :width 959.9999999999999,
      :height 1080}),
    :page 12},
   :content {:text "3.4 Perspective"},
   :properties {:color "blue"}}
  {:id #uuid "6355e9ed-829d-4da4-a62b-2677600df7a5",
   :page 13,
   :position
   {:bounding
    {:x1 0,
     :y1 80,
     :x2 836.8131713867188,
     :y2 736.078125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 80,
      :x2 0,
      :y2 96,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 96,
      :x2 0,
      :y2 112,
      :width 959.9999999999999,
      :height 1080}
     {:x1 255.65625,
      :y1 673.90625,
      :x2 836.8131713867188,
      :y2 692.90625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 695.453125,
      :x2 836.6869506835938,
      :y2 714.453125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 717.078125,
      :x2 727.5623168945312,
      :y2 736.078125,
      :width 959.9999999999999,
      :height 1080}),
    :page 13},
   :content
   {:text
    "These constructions are rather elaborate, requiring an understating of delicate issues like the effect of feedback loops on combinatorial circuits, as well as the implementation of clock cycles using a two-phase binary clock signal. "},
   :properties {:color "blue"}}
  {:id #uuid "6355ea3f-a873-43a2-ba7c-20cd0110de16",
   :page 13,
   :position
   {:bounding
    {:x1 0,
     :y1 112,
     :x2 836.7210693359375,
     :y2 779.25,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 112,
      :x2 0,
      :y2 128,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 128,
      :x2 0,
      :y2 144,
      :width 959.9999999999999,
      :height 1080}
     {:x1 732.0925903320312,
      :y1 717.078125,
      :x2 836.7203979492188,
      :y2 736.078125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 738.609375,
      :x2 836.7210693359375,
      :y2 757.609375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 760.25,
      :x2 382.1767272949219,
      :y2 779.25,
      :width 959.9999999999999,
      :height 1080}),
    :page 13},
   :content
   {:text
    "n this book we have chosen to abstract away these low-level considerations by treating the flip-flop as an atomic gate. "},
   :properties {:color "green"}}
  {:id #uuid "6355eaab-3c1f-48d1-9811-dd2515ffac6e",
   :page 13,
   :position
   {:bounding
    {:x1 0,
     :y1 192,
     :x2 836.8201904296875,
     :y2 865.5,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 192,
      :x2 0,
      :y2 208,
      :width 959.9999999999999,
      :height 1080}
     {:x1 255.65625,
      :y1 824.953125,
      :x2 836.8201904296875,
      :y2 843.953125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 239.109375,
      :y1 846.5,
      :x2 601.7578125,
      :y2 865.5,
      :width 959.9999999999999,
      :height 1080}),
    :page 13},
   :content
   {:text
    "In closing, we should mention that memory devices of modern computers are not always constructed from standard flip-flops. "},
   :properties {:color "blue"}}
  {:id #uuid "6355eafb-7738-46d1-9745-6c480533911f",
   :page 14,
   :position
   {:bounding
    {:x1 0,
     :y1 32,
     :x2 840.3754272460938,
     :y2 212.921875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 32,
      :x2 0,
      :y2 48,
      :width 959.9999999999999,
      :height 1080}
     {:x1 0,
      :y1 48,
      :x2 0,
      :y2 64,
      :width 959.9999999999999,
      :height 1080}
     {:x1 259.234375,
      :y1 150.75,
      :x2 840.3754272460938,
      :y2 169.75,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 172.28125,
      :x2 840.2977294921875,
      :y2 191.28125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.59375,
      :y1 193.921875,
      :x2 399.9390869140625,
      :y2 212.921875,
      :width 959.9999999999999,
      :height 1080}),
    :page 14},
   :content
   {:text
    "Aside from these low-level considerations, all the other chip constructions in this chapter—the registers and memory chips that were built on top of the flip-flop gates—were standard."},
   :properties {:color "red"}}
  {:id #uuid "6355eb22-cdb4-4c5a-96ba-b3f64359d783",
   :page 14,
   :position
   {:bounding
    {:x1 123.0625,
     :y1 263.3125,
     :x2 219.47998046875,
     :y2 283.3125,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 123.0625,
      :y1 263.3125,
      :x2 147.9339599609375,
      :y2 283.3125,
      :width 959.9999999999999,
      :height 1080}
     {:x1 164.546875,
      :y1 263.3125,
      :x2 219.47998046875,
      :y2 283.3125,
      :width 959.9999999999999,
      :height 1080}),
    :page 14},
   :content {:text "3.5 Project"},
   :properties {:color "blue"}}
  {:id #uuid "6355ebd6-14f4-4c37-9972-7122f8c4e431",
   :page 14,
   :position
   {:bounding
    {:x1 0,
     :y1 352,
     :x2 840.33984375,
     :y2 779.109375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 0,
      :y1 352,
      :x2 0,
      :y2 368,
      :width 959.9999999999999,
      :height 1080}
     {:x1 559.984375,
      :y1 738.46875,
      :x2 840.33984375,
      :y2 757.46875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 242.578125,
      :y1 760.109375,
      :x2 730.8363037109375,
      :y2 779.109375,
      :width 959.9999999999999,
      :height 1080}),
    :page 14},
   :content
   {:text
    "When constructing RAM chips from smaller ones, we recommend using built-in versions of the latter. "},
   :properties {:color "yellow"}}
  {:id #uuid "6355ebec-36c0-4645-bf77-1a39ec4c9779",
   :page 15,
   :position
   {:bounding
    {:x1 239.109375,
     :y1 253.640625,
     :x2 638.684326171875,
     :y2 272.640625,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.109375,
      :y1 253.640625,
      :x2 253.5626220703125,
      :y2 272.640625,
      :width 959.9999999999999,
      :height 1080}
     {:x1 268.5,
      :y1 253.640625,
      :x2 638.684326171875,
      :y2 272.640625,
      :width 959.9999999999999,
      :height 1080}),
    :page 15},
   :content
   {:text "1. Read appendix A, focusing on sections A.6 and A.7."},
   :properties {:color "blue"}}
  {:id #uuid "6355ec20-9911-4148-a39d-5cb06ea1cd39",
   :page 15,
   :position
   {:bounding
    {:x1 239.109375,
     :y1 280.1875,
     :x2 780.7651977539062,
     :y2 299.1875,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 239.109375,
      :y1 280.1875,
      :x2 256.515625,
      :y2 299.1875,
      :width 959.9999999999999,
      :height 1080}
     {:x1 268.5,
      :y1 280.1875,
      :x2 780.7651977539062,
      :y2 299.1875,
      :width 959.9999999999999,
      :height 1080}),
    :page 15},
   :content
   {:text
    "2. Go through the hardware simulator tutorial, focusing on parts IV and V."},
   :properties {:color "blue"}}
  {:id #uuid "63568dcc-1b08-4588-841f-8f26cc610250",
   :page 10,
   :position
   {:bounding
    {:x1 123.0625,
     :y1 807.9375,
     :x2 282.70147705078125,
     :y2 827.9375,
     :width 959.9999999999999,
     :height 1080},
    :rects
    ({:x1 123.0625,
      :y1 807.9375,
      :x2 147.91783142089844,
      :y2 827.9375,
      :width 959.9999999999999,
      :height 1080}
     {:x1 164.53125,
      :y1 807.9375,
      :x2 282.70147705078125,
      :y2 827.9375,
      :width 959.9999999999999,
      :height 1080}),
    :page 10},
   :content {:text "3.3 Implementation"},
   :properties {:color "blue"}}], 
 :extra {:page 14}}
