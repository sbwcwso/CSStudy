{:highlights [{:id #uuid "62610b6c-8c21-4008-898d-13261ae8bfdc", :page 32, :position {:bounding {:x1 71, :y1 59, :x2 944, :y2 849, :width 1019.9999999999999, :height 1319.9999999999998}, :rects (), :page 32}, :content {:text "[:span]", :image 1650527082684}, :properties {:color "yellow"}} {:id #uuid "62610de3-f80e-4273-96c5-5790088c72ce", :page 31, :position {:bounding {:x1 203, :y1 41, :x2 854, :y2 638, :width 1019.9999999999999, :height 1319.9999999999998}, :rects (), :page 31}, :content {:text "[:span]", :image 1650527714107}, :properties {:color "blue"}} {:id #uuid "6261744a-9b42-45dd-aa18-7083b05f55b5", :page 36, :position {:bounding {:x1 92, :y1 50, :x2 980, :y2 570, :width 1019.9999999999999, :height 1319.9999999999998}, :rects (), :page 36}, :content {:text "[:span]", :image 1650553928849}, :properties {:color "yellow"}} {:id #uuid "627b735f-20e7-4945-ba55-c8bf43de8abf", :page 41, :position {:bounding {:x1 119.9898681640625, :y1 256.9647521972656, :x2 517.4736328125, :y2 406.997802734375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.9898681640625, :y1 256.9647521972656, :x2 297.8525390625, :y2 302.9647521972656, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99945068359375, :y1 360.997802734375, :x2 517.4736328125, :y2 406.997802734375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "Chapter 4Traps and system calls"}, :properties {:color "yellow"}} {:id #uuid "627b7425-1add-47a4-89ea-621966f56e6b", :page 41, :position {:bounding {:x1 119.98553466796875, :y1 490.997314453125, :x2 899.9980163574219, :y2 537.06494140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.99130249023438, :y1 490.997314453125, :x2 899.9980163574219, :y2 512.997314453125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98553466796875, :y1 515.06494140625, :x2 686.6367797851562, :y2 537.06494140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "There are three kinds of event which cause the CPU to set aside ordinary execution of instructionsand force a transfer of control to special code that handles the event."}, :properties {:color "blue"}} {:id #uuid "627b7550-3a16-4f59-a80c-4b507eb81a76", :page 41, :position {:bounding {:x1 119.999267578125, :y1 515.06494140625, :x2 899.9866333007812, :y2 561.14306640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 691.8001098632812, :y1 515.06494140625, :x2 899.9866333007812, :y2 537.06494140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.999267578125, :y1 539.14306640625, :x2 152.17514038085938, :y2 561.14306640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "One situation is a systemcall,"}, :properties {:color "yellow"}} {:id #uuid "627b7567-dbe0-4c18-aee2-bfb978e23b5d", :page 41, :position {:bounding {:x1 119.98800659179688, :y1 536.5964965820312, :x2 1019.996337890625, :y2 585.22119140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 441.88201904296875, :y1 536.5964965820312, :x2 501.67071533203125, :y2 565.5964965820312, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 157.18753051757812, :y1 539.14306640625, :x2 1019.996337890625, :y2 561.14306640625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98800659179688, :y1 563.22119140625, :x2 134.2987518310547, :y2 585.22119140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "when a user program executes theecallinstruction to ask the kernel to do something forit."}, :properties {:color "blue"}} {:id #uuid "627b759f-564c-4918-9b25-fc3c03035371", :page 41, :position {:bounding {:x1 138.38548278808594, :y1 563.22119140625, :x2 402.2443542480469, :y2 585.22119140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 138.38548278808594, :y1 563.22119140625, :x2 402.2443542480469, :y2 585.22119140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "Another situation is anexception"}, :properties {:color "yellow"}} {:id #uuid "627b75c5-a463-4e66-8930-2f9be438f541", :page 41, :position {:bounding {:x1 119.99545288085938, :y1 563.2288818359375, :x2 899.9924926757812, :y2 609.3001708984375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 407.22235107421875, :y1 563.2288818359375, :x2 899.9924926757812, :y2 585.2288818359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99545288085938, :y1 587.3001708984375, :x2 507.046875, :y2 609.3001708984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text " an instruction (user or kernel) does something illegal, such asdivide by zero or use an invalid virtual address."}, :properties {:color "red"}} {:id #uuid "627b75d4-9a1d-4f7d-93ef-19c831fff82f", :page 41, :position {:bounding {:x1 511.8695068359375, :y1 587.3001708984375, :x2 835.78955078125, :y2 609.3001708984375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 511.8695068359375, :y1 587.3001708984375, :x2 835.78955078125, :y2 609.3001708984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "The third situation is a deviceinterrupt,"}, :properties {:color "purple"}} {:id #uuid "627b760d-f7c1-4623-b188-5ab254e6af2f", :page 41, :position {:bounding {:x1 -0.0000019073486328125, :y1 587.3001708984375, :x2 1019.9851055145264, :y2 657.45556640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 840.8675537109375, :y1 587.3001708984375, :x2 899.990966796875, :y2 609.3001708984375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.0000019073486328125, :y1 611.31494140625, :x2 1019.9851055145264, :y2 634.43994140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98989868164062, :y1 635.45556640625, :x2 182.52484130859375, :y2 657.45556640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "when adevice signals that it needs attention, for example when the disk hardware finishes a read or writerequest."}, :properties {:color "yellow"}} {:id #uuid "627b763a-5334-4fe2-b145-cc87e371df25", :page 41, :position {:bounding {:x1 149.2422637939453, :y1 669.9645385742188, :x2 606.507568359375, :y2 703.6051635742188, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 270.2742004394531, :y1 669.9645385742188, :x2 307.7597961425781, :y2 703.6051635742188, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.2422637939453, :y1 680.5426635742188, :x2 267.9856872558594, :y2 702.5426635742188, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 310.0496520996094, :y1 680.5426635742188, :x2 606.507568359375, :y2 702.5426635742188, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "This book usestrapas a generic term for these situations."}, :properties {:color "blue"}} {:id #uuid "627b76a9-89a3-428b-a75c-1c4ab2cf3d13", :page 41, :position {:bounding {:x1 119.99885559082031, :y1 728.68994140625, :x2 899.6838989257812, :y2 774.76806640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 341.17547607421875, :y1 728.68994140625, :x2 899.6838989257812, :y2 750.68994140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99885559082031, :y1 752.76806640625, :x2 235.12042236328125, :y2 774.76806640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text " we  often  want  traps  to  be  transparent;  this  is  particularly  importantfor interrupts, "}, :properties {:color "green"}} {:id #uuid "627b76dc-e904-4171-9f9b-95be70ed7652", :page 41, :position {:bounding {:x1 119.9898681640625, :y1 752.76806640625, :x2 899.6618041992188, :y2 798.84619140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 672.4652099609375, :y1 752.76806640625, :x2 899.6618041992188, :y2 774.76806640625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.9898681640625, :y1 776.84619140625, :x2 501.80078125, :y2 798.84619140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "he usual sequence is that atrap forces a transfer of control into the kernel; "}, :properties {:color "blue"}} {:id #uuid "627b76f6-e377-4279-84df-1bc701d164c2", :page 41, :position {:bounding {:x1 119.98870849609375, :y1 776.84619140625, :x2 899.989013671875, :y2 822.92431640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 506.9033203125, :y1 776.84619140625, :x2 899.989013671875, :y2 798.84619140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98870849609375, :y1 800.92431640625, :x2 328.0787048339844, :y2 822.92431640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "he kernel saves registers and other state so thatexecution can be resumed"}, :properties {:color "red"}} {:id #uuid "627b7771-0662-4dde-a2ae-7cfb905dea58", :page 41, :position {:bounding {:x1 149.23851013183594, :y1 1011.4957885742188, :x2 494.97264099121094, :y2 1033.495849609375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.23851013183594, :y1 1011.4957885742188, :x2 494.97264099121094, :y2 1033.495849609375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "Xv6 trap handling proceeds in four stages"}, :properties {:color "red"}} {:id #uuid "627b7785-0314-4752-b754-b81cb6a1368a", :page 41, :position {:bounding {:x1 505.3531494140625, :y1 1011.4957885742188, :x2 868.7312622070312, :y2 1033.495849609375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 505.3531494140625, :y1 1011.4957885742188, :x2 868.7312622070312, :y2 1033.495849609375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "hardware actions taken by the RISC-V CPU"}, :properties {:color "yellow"}} {:id #uuid "627b779b-a34c-494a-b4e0-03d414544ccc", :page 41, :position {:bounding {:x1 119.99920654296875, :y1 1011.4957885742188, :x2 899.9758911132812, :y2 1057.56494140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 879.1265258789062, :y1 1011.4957885742188, :x2 899.9758911132812, :y2 1033.495849609375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99920654296875, :y1 1035.56494140625, :x2 590.4191284179688, :y2 1057.56494140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "anassembly “vector” that prepares the way for kernel C code"}, :properties {:color "blue"}} {:id #uuid "627b77b6-8086-4bbb-b7aa-3fb0988485a0", :page 41, :position {:bounding {:x1 119.99702453613281, :y1 1035.56494140625, :x2 900.0012817382812, :y2 1081.62744140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 600.5856323242188, :y1 1035.56494140625, :x2 900.0012817382812, :y2 1057.56494140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99702453613281, :y1 1059.62744140625, :x2 246.42349243164062, :y2 1081.62744140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "a C trap handler that decides what todo with the trap"}, :properties {:color "red"}} {:id #uuid "627b77d1-c34f-4d6c-9799-1019b34f1769", :page 41, :position {:bounding {:x1 287.5400390625, :y1 1059.62744140625, :x2 672.9005737304688, :y2 1081.62744140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 287.5400390625, :y1 1059.62744140625, :x2 672.9005737304688, :y2 1081.62744140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text " the system call or device-driver service routine"}, :properties {:color "blue"}} {:id #uuid "627b77f6-5f99-4b4f-b7f8-d1daffc172eb", :page 41, :position {:bounding {:x1 119.99749755859375, :y1 1083.7064208984375, :x2 900.0015869140625, :y2 1129.78369140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 839.6925659179688, :y1 1083.7064208984375, :x2 900.0015869140625, :y2 1105.7064208984375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99749755859375, :y1 1107.78369140625, :x2 895.122802734375, :y2 1129.78369140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text " it turnsout to be convenient to have separate assembly vectors and C trap handlers for three distinct cases"}, :properties {:color "blue"}} {:id #uuid "627b7822-5cc1-430d-aa92-c32896e6d95b", :page 41, :position {:bounding {:x1 119.99101257324219, :y1 1131.86181640625, :x2 658.1975555419922, :y2 1153.86181640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.99101257324219, :y1 1131.86181640625, :x2 658.1975555419922, :y2 1153.86181640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 41}, :content {:text "traps from user space, traps from kernel space, and timer interrupts."}, :properties {:color "yellow"}} {:id #uuid "627b783d-7fda-48c8-9fd5-791db6fcab56", :page 42, :position {:bounding {:x1 119.98611450195312, :y1 114.425537109375, :x2 481.0058288574219, :y2 146.425537109375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.98611450195312, :y1 114.425537109375, :x2 481.0058288574219, :y2 146.425537109375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "4.1    RISC-V trap machinery"}, :properties {:color "yellow"}} {:id #uuid "627b7871-7936-4c2d-b274-274795c68bd0", :page 42, :position {:bounding {:x1 -0.0000019073486328125, :y1 166.6434326171875, :x2 1019.98486328125, :y2 260.885986328125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.99679565429688, :y1 166.6434326171875, :x2 900.0037536621094, :y2 188.6434326171875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.0000019073486328125, :y1 190.65869140625, :x2 1019.6650371551514, :y2 213.78369140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 326.72698974609375, :y1 212.25274658203125, :x2 543.1648559570312, :y2 241.25274658203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.000003814697265625, :y1 214.73681640625, :x2 413.2151184082031, :y2 238.09619140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 543.1705932617188, :y1 214.73681640625, :x2 1019.98486328125, :y2 238.09619140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99639892578125, :y1 238.885986328125, :x2 430.19464111328125, :y2 260.885986328125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "Each RISC-V CPU has a set of control registers that the kernel writes to tell the CPU how to handletraps, and that the kernel can read to find out about a trap that has occured. The RISC-V documentscontain the full story [1].riscv.h(kernel/riscv.h:1)contains definitions that xv6 uses. Here’s anoutline of the most important registers:"}, :properties {:color "yellow"}} {:id #uuid "627b78b4-b2f6-44ce-a6ae-778eee6c5371", :page 42, :position {:bounding {:x1 158.98458862304688, :y1 274.25732421875, :x2 1019.9709167480469, :y2 331.784912109375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 163.88839721679688, :y1 274.25732421875, :x2 1019.9709167480469, :y2 309.55419921875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 158.98458862304688, :y1 285.7064208984375, :x2 223.2952117919922, :y2 307.7064208984375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 168.75611877441406, :y1 309.784912109375, :x2 276.65966796875, :y2 331.784912109375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "stvec: The kernel writes the address of its trap handler here; the RISC-V jumps here tohandle a trap."}, :properties {:color "blue"}} {:id #uuid "627b78e9-2a4f-48bd-8490-35421b495204", :page 42, :position {:bounding {:x1 -0.009378433227539062, :y1 342.50372314453125, :x2 1020.546875, :y2 431.464111328125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 212.40611267089844, :y1 342.50372314453125, :x2 1019.984375, :y2 374.58184814453125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 168.75283813476562, :y1 351.1326904296875, :x2 838.980712890625, :y2 377.1326904296875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 306.38714599609375, :y1 372.81646728515625, :x2 366.16943359375, :y2 401.81646728515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 419.6729736328125, :y1 372.81646728515625, :x2 467.5024108886719, :y2 401.81646728515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 767.0165405273438, :y1 372.8228759765625, :x2 814.8434448242188, :y2 401.8228759765625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 871.0810546875, :y1 372.8228759765625, :x2 894.9976806640625, :y2 401.8228759765625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.009370803833007812, :y1 375.347412109375, :x2 1020.546875, :y2 398.659912109375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 168.76390075683594, :y1 399.448486328125, :x2 353.3802795410156, :y2 421.448486328125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 411.1430358886719, :y1 399.448486328125, :x2 541.7454223632812, :y2 421.448486328125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 599.5311889648438, :y1 399.448486328125, :x2 641.0413208007812, :y2 421.448486328125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.009378433227539062, :y1 399.604736328125, :x2 597.0505981445312, :y2 431.464111328125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "sepc: When a trap occurs, RISC-V saves the program counter here (since thepcis thenoverwritten withstvec). Thesret(return from trap) instruction copiessepcto thepc.The kernel can write tosepcto control wheresretgoes."}, :properties {:color "green"}} {:id #uuid "627b7aca-3f48-45d2-88ab-95f0ff479b6d", :page 42, :position {:bounding {:x1 168.752197265625, :y1 440.7889404296875, :x2 801.6558227539062, :y2 466.7889404296875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 168.752197265625, :y1 440.7889404296875, :x2 801.6558227539062, :y2 466.7889404296875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "scause: The RISC-V puts a number here that describes the reason for the trap."}, :properties {:color "red"}} {:id #uuid "627b7b3b-8938-409e-828d-83f50c161112", :page 42, :position {:bounding {:x1 158.98458862304688, :y1 474.6475830078125, :x2 1019.6596374511719, :y2 528.5349731445312, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 163.88839721679688, :y1 474.6475830078125, :x2 1019.6596374511719, :y2 506.3194580078125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 158.98458862304688, :y1 482.45684814453125, :x2 899.6639099121094, :y2 504.45684814453125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 168.7523956298828, :y1 506.534912109375, :x2 232.3995361328125, :y2 528.5349731445312, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "sscratch: The kernel places a value here that comes in handy at the very start of a traphandler."}, :properties {:color "purple"}} {:id #uuid "627b7b86-577e-414f-ac4a-f7f42eb43e73", :page 42, :position {:bounding {:x1 -0.009378433227539062, :y1 539.2701416015625, :x2 1019.9881858825684, :y2 654.95556640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 245.125, :y1 539.2701416015625, :x2 1019.9819641113281, :y2 569.0513916015625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 168.75222778320312, :y1 547.899169921875, :x2 463.7199401855469, :y2 573.899169921875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.00937652587890625, :y1 572.2913818359375, :x2 1019.6548080444336, :y2 595.1976318359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.009372711181640625, :y1 596.14306640625, :x2 1019.9881858825684, :y2 619.26806640625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 218.01341247558594, :y1 617.7371215820312, :x2 265.8428649902344, :y2 646.7371215820312, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.009378433227539062, :y1 620.22119140625, :x2 268.33111572265625, :y2 654.95556640625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 270.8233947753906, :y1 620.28369140625, :x2 331.15087890625, :y2 642.28369140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "sstatus: The SIE bit insstatuscontrols whether device interrupts are enabled. If thekernel clears SIE, the RISC-V will defer device interrupts until the kernel sets SIE. The SPPbit indicates whether a trap came from user mode or supervisor mode, and controls to whatmodesretreturns."}, :properties {:color "purple"}} {:id #uuid "627b7bf1-dece-4a2e-a338-abf46bd33b2f", :page 42, :position {:bounding {:x1 149.2401123046875, :y1 667.120361328125, :x2 672.144775390625, :y2 689.120361328125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.2401123046875, :y1 667.120361328125, :x2 672.144775390625, :y2 689.120361328125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "The above registers relate to traps handled in supervisor mode,"}, :properties {:color "purple"}} {:id #uuid "627b7c0e-f7f8-4cef-9815-3ee501830d00", :page 42, :position {:bounding {:x1 119.99929809570312, :y1 739.5128784179688, :x2 899.9673919677734, :y2 785.58056640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.2388153076172, :y1 739.5128784179688, :x2 899.9673919677734, :y2 761.512939453125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99929809570312, :y1 763.58056640625, :x2 409.9940490722656, :y2 785.58056640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "Each CPU on a multi-core chip has its own set of these registers, and more than one CPU maybe handling a trap at any given time."}, :properties {:color "purple"}} {:id #uuid "627b7c4f-89d6-4238-b599-8658a3c487a6", :page 42, :position {:bounding {:x1 119.99043273925781, :y1 787.8262329101562, :x2 899.9734649658203, :y2 833.89306640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.2440948486328, :y1 787.8262329101562, :x2 899.9734649658203, :y2 809.8262329101562, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99043273925781, :y1 811.89306640625, :x2 294.8843994140625, :y2 833.89306640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "When it needs to force a trap, the RISC-V hardware does the following for all trap types (otherthan timer interrupts):"}, :properties {:color "purple"}} {:id #uuid "627b7cd3-5081-47ef-8c14-3c413654af0b", :page 42, :position {:bounding {:x1 144.0560760498047, :y1 847.2847900390625, :x2 1019.9775390625, :y2 904.8070068359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 504.03533935546875, :y1 847.2847900390625, :x2 1019.9775390625, :y2 882.0191650390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 507.93603515625, :y1 856.1754150390625, :x2 591.6403198242188, :y2 885.1754150390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 144.0560760498047, :y1 858.7220458984375, :x2 500.12950134277344, :y2 880.7220458984375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 168.759765625, :y1 882.8070068359375, :x2 250.744384765625, :y2 904.8070068359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "1.  If  the  trap  is  a  device  interrupt,  and  thesstatusSIE  bit  is  clear,  don’t  do  any  of  thefollowing."}, :properties {:color "yellow"}} {:id #uuid "627b7cf5-3cf1-4204-9ebf-d7e5b9612ea6", :page 42, :position {:bounding {:x1 144.0580291748047, :y1 924.3013916015625, :x2 444.90452575683594, :y2 946.3013916015625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 144.0580291748047, :y1 924.3013916015625, :x2 444.90452575683594, :y2 946.3013916015625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "2.  Disable interrupts by clearing SIE."}, :properties {:color "yellow"}} {:id #uuid "627b7d1c-feb9-4627-b8d3-478cdeab5e58", :page 42, :position {:bounding {:x1 144.05184936523438, :y1 957.0352172851562, :x2 1019.9779052734375, :y2 997.8320922851562, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 243.5765380859375, :y1 957.0352172851562, :x2 1019.9779052734375, :y2 997.8320922851562, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 144.05184936523438, :y1 965.8162231445312, :x2 241.07504272460938, :y2 987.8162231445312, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "3.  Copy thepctosepc."}, :properties {:color "blue"}} {:id #uuid "627b7d39-fdb7-4ae8-a9f3-943d175f9359", :page 42, :position {:bounding {:x1 144.0487823486328, :y1 998.7772827148438, :x2 1020.005859375, :y2 1039.35546875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 644.8345336914062, :y1 998.7772827148438, :x2 1020.005859375, :y2 1039.35546875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 144.0487823486328, :y1 1007.3394775390625, :x2 642.0119781494141, :y2 1029.3394775390625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "4.  Save the current mode (user or supervisor) in the SPP bit insstatus."}, :properties {:color "blue"}} {:id #uuid "627b7d5b-5bae-4452-9031-72e3c85939fc", :page 42, :position {:bounding {:x1 144.05813598632812, :y1 1040.0665283203125, :x2 478.99847412109375, :y2 1080.8634033203125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 196.7330780029297, :y1 1040.0665283203125, :x2 273.4269714355469, :y2 1080.8634033203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 144.05813598632812, :y1 1048.847412109375, :x2 194.23480224609375, :y2 1070.847412109375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 275.9127502441406, :y1 1048.8551025390625, :x2 478.99847412109375, :y2 1070.8551025390625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "5.  Setscauseto reflect the trap’s cause."}, :properties {:color "blue"}} {:id #uuid "627b7d7b-44ce-4496-8a72-1acdc04fb122", :page 42, :position {:bounding {:x1 144.05047607421875, :y1 1090.35595703125, :x2 385.158203125, :y2 1112.35595703125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 144.05047607421875, :y1 1090.35595703125, :x2 385.158203125, :y2 1112.35595703125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "6.  Set the mode to supervisor."}, :properties {:color "blue"}} {:id #uuid "627b7d84-e06d-4714-8626-a769688e1453", :page 42, :position {:bounding {:x1 144.06005859375, :y1 1123.0821533203125, :x2 355.1976013183594, :y2 1168.0196533203125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 214.24838256835938, :y1 1123.0821533203125, :x2 328.812255859375, :y2 1168.0196533203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 331.2809143066406, :y1 1129.3165283203125, :x2 355.1976013183594, :y2 1158.3165283203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 144.06005859375, :y1 1131.863037109375, :x2 211.7531280517578, :y2 1153.863037109375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 42}, :content {:text "7.  Copystvecto thepc"}, :properties {:color "blue"}} {:id #uuid "627b7da8-15b4-4cfe-9f70-518aa8905732", :page 43, :position {:bounding {:x1 144.0533447265625, :y1 -0.0128173828125, :x2 409.0618591308594, :y2 157.2059326171875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 377.1148986816406, :y1 -0.0128173828125, :x2 403.52288818359375, :y2 157.2059326171875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 379.606201171875, :y1 119.0496826171875, :x2 403.52288818359375, :y2 148.0496826171875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 144.0533447265625, :y1 121.5963134765625, :x2 374.6228332519531, :y2 143.5963134765625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 403.5306091308594, :y1 121.5963134765625, :x2 409.0618591308594, :y2 143.5963134765625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "8.  Start executing at the newpc."}, :properties {:color "blue"}} {:id #uuid "627b7de9-b686-4d9f-831e-8e22167d3866", :page 43, :position {:bounding {:x1 0.0000019073486328125, :y1 170.30865478515625, :x2 899.9747314453125, :y2 220.83087158203125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.24774169921875, :y1 170.30865478515625, :x2 899.9747314453125, :y2 192.30865478515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 532.8013305664062, :y1 191.83087158203125, :x2 556.718017578125, :y2 220.83087158203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.0000019073486328125, :y1 194.31494140625, :x2 561.6796875, :y2 217.67431640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "Note that the CPU doesn’t switch to the kernel page table, doesn’t switch to a stack in thekernel, and doesn’t save any registers other than thepc."}, :properties {:color "blue"}} {:id #uuid "627b7e35-5ba6-4472-b0da-fe4ad2e441d1", :page 43, :position {:bounding {:x1 566.6116943359375, :y1 194.37744140625, :x2 900.017333984375, :y2 216.37744140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 566.6116943359375, :y1 194.37744140625, :x2 900.017333984375, :y2 216.37744140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "Kernel software must perform these tasks."}, :properties {:color "yellow"}} {:id #uuid "627b7e5b-de37-4434-806f-ad4549309efc", :page 43, :position {:bounding {:x1 119.989501953125, :y1 475.025146484375, :x2 456.3544616699219, :y2 507.025146484375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.989501953125, :y1 475.025146484375, :x2 456.3544616699219, :y2 507.025146484375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "4.2    Traps from user space"}, :properties {:color "yellow"}} {:id #uuid "627b7ed3-5abf-4d7a-baa7-be89eecd2ab4", :page 43, :position {:bounding {:x1 -0.0000019073486328125, :y1 551.8695068359375, :x2 1019.9940185546875, :y2 626.47119140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 629.0919799804688, :y1 551.8695068359375, :x2 899.6647338867188, :y2 573.8695068359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 230.35226440429688, :y1 573.3933715820312, :x2 314.04180908203125, :y2 602.3933715820312, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 552.0325317382812, :y1 573.3933715820312, :x2 780.7818603515625, :y2 602.3933715820312, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.000003814697265625, :y1 575.87744140625, :x2 1019.9940185546875, :y2 599.00244140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 187.50958251953125, :y1 597.47119140625, :x2 453.0264587402344, :y2 626.47119140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 528.5657958984375, :y1 597.47119140625, :x2 612.2715454101562, :y2 626.47119140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.0000019073486328125, :y1 599.95556640625, :x2 321.5140075683594, :y2 623.53369140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 453.0415344238281, :y1 599.95556640625, :x2 801.859375, :y2 623.53369140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "The high-level path of a trap fromuser space isuservec(kernel/trampoline.S:16), thenusertrap(kernel/trap.c:37); and when re-turning,usertrapret(kernel/trap.c:90)and thenuserret(kernel/trampoline.S:16)."}, :properties {:color "yellow"}} {:id #uuid "627b7f6a-1346-4fb4-b13b-8ce69610b57d", :page 43, :position {:bounding {:x1 0.0000019073486328125, :y1 697.1920166015625, :x2 899.9703216552734, :y2 747.7222900390625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.2425994873047, :y1 697.1920166015625, :x2 899.9703216552734, :y2 719.1920166015625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 308.3099365234375, :y1 718.7222900390625, :x2 391.9994812011719, :y2 747.7222900390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.0000019073486328125, :y1 721.2064208984375, :x2 391.9994812011719, :y2 744.5657958984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "Because the RISC-V hardware doesn’t switch page tables during a trap, the user page table mustinclude a mapping foruservec"}, :properties {:color "yellow"}} {:id #uuid "627b8017-9a70-45d7-9d7c-d45b8ed180fe", :page 43, :position {:bounding {:x1 402.4325256347656, :y1 718.7222900390625, :x2 809.3524169921875, :y2 747.7222900390625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 666.4510498046875, :y1 718.7222900390625, :x2 726.2333374023438, :y2 747.7222900390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 402.4325256347656, :y1 721.2689208984375, :x2 809.3524169921875, :y2 743.2689208984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "the trap vector instructions thatstvecpoints to."}, :properties {:color "yellow"}} {:id #uuid "627b8027-3c41-4747-8c05-045563d0e7ab", :page 43, :position {:bounding {:x1 0, :y1 718.7222900390625, :x2 899.9966430664062, :y2 771.7996215820312, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 816.3070678710938, :y1 718.7222900390625, :x2 899.9966430664062, :y2 747.7222900390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 224.36256408691406, :y1 742.7996215820312, :x2 272.1917419433594, :y2 771.7996215820312, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 745.28369140625, :x2 552.919189453125, :y2 768.64306640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "uservecmust switchsatpto point to the kernel page table; "}, :properties {:color "red"}} {:id #uuid "627b8063-4888-4983-8fe3-befc6e683264", :page 43, :position {:bounding {:x1 0, :y1 745.3538818359375, :x2 1019.9679260253906, :y2 815.4945068359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 552.9044189453125, :y1 745.3538818359375, :x2 899.9888305664062, :y2 767.3538818359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 253.86724853515625, :y1 766.8698120117188, :x2 337.55682373046875, :y2 795.8698120117188, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 769.5726318359375, :x2 1019.9679260253906, :y2 792.7132568359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99758911132812, :y1 793.4945068359375, :x2 244.49148559570312, :y2 815.4945068359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "in order to continue executing instructionsafter the switch,uservecmust be mapped at the same address in the kernel page table as in theuser page table."}, :properties {:color "blue"}} {:id #uuid "627b809e-1447-4528-88b9-f9e3744c74d1", :page 43, :position {:bounding {:x1 149.2459716796875, :y1 815.4579467773438, :x2 782.9171752929688, :y2 844.4579467773438, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 694.1280517578125, :y1 815.4579467773438, :x2 777.817626953125, :y2 844.4579467773438, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.2459716796875, :y1 818.0045166015625, :x2 782.9171752929688, :y2 840.0045166015625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "Xv6 satisfies these constraints with atrampolinepage that containsuservec."}, :properties {:color "blue"}} {:id #uuid "627b80e9-b910-45c3-a307-a0331f2e202e", :page 43, :position {:bounding {:x1 119.98941040039062, :y1 818.0045166015625, :x2 899.9983215332031, :y2 864.0882568359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 787.9920043945312, :y1 818.0045166015625, :x2 899.9976806640625, :y2 840.0045166015625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98941040039062, :y1 842.0882568359375, :x2 899.9983215332031, :y2 864.0882568359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "Xv6 maps thetrampoline page at the same virtual address in the kernel page table and in every user page table."}, :properties {:color "yellow"}} {:id #uuid "627b812c-d417-4f9e-b11d-5f2292c39723", :page 26, :position {:bounding {:x1 219, :y1 46, :x2 778, :y2 488, :width 1019.9999999999999, :height 1319.9999999999998}, :rects (), :page 26}, :content {:text "[:span]", :image 1652261164491}, :properties {:color "yellow"}} {:id #uuid "627b813f-f852-4f18-aaf6-0780421c177b", :page 43, :position {:bounding {:x1 119.98698425292969, :y1 866.15869140625, :x2 412.2496032714844, :y2 888.15869140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.98698425292969, :y1 866.15869140625, :x2 412.2496032714844, :y2 888.15869140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text "This virtual address isTRAMPOLINE"}, :properties {:color "blue"}} {:id #uuid "627b8193-b942-45cf-a695-991f8ddeb4df", :page 43, :position {:bounding {:x1 0, :y1 866.15869140625, :x2 1019.9715576171875, :y2 938.1798095703125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 772.0429077148438, :y1 866.15869140625, :x2 899.6715698242188, :y2 888.15869140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 270.0487060546875, :y1 887.6923217773438, :x2 413.51690673828125, :y2 916.6923217773438, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 683.919189453125, :y1 887.6923217773438, :x2 743.7014770507812, :y2 916.6923217773438, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 816.298583984375, :y1 887.6923217773438, :x2 899.9881591796875, :y2 916.6923217773438, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 890.1751708984375, :x2 1019.9715576171875, :y2 914.0189208984375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 914.9610595703125, :x2 304.609375, :y2 938.1798095703125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 43}, :content {:text " The trampolinecontents are set intrampoline.S, and (when executing user code)stvecis set touservec(kernel/trampoline.S:16)."}, :properties {:color "blue"}} {:id #uuid "627dc375-83b0-4632-b70b-d8f6931bd507", :page 43, :position {:bounding {:x1 124.5954806804657, :y1 803.0251159667969, :x2 243.60526156425476, :y2 825.8468933105469, :width 812, :height 1050.8235294117646}, :rects ({:x1 124.5954806804657, :y1 803.0251159667969, :x2 172.17681002616882, :y2 825.8468933105469, :width 812, :height 1050.8235294117646} {:x1 176.6127688884735, :y1 804.9546203613281, :x2 243.60526156425476, :y2 822.4513244628906, :width 812, :height 1050.8235294117646}), :page 43}, :content {:text "csrrwinstruction"}, :properties {:color "yellow"}} {:id #uuid "627dc3a1-f006-4f8c-817a-00c1c2d7376d", :page 43, :position {:bounding {:x1 531.1284282505512, :y1 709.3988189697266, :x2 598.3774516880512, :y2 729.1776885986328, :width 716.9999999999999, :height 927.8823529411764}, :rects ({:x1 531.1284282505512, :y1 709.3988189697266, :x2 598.3774516880512, :y2 729.1776885986328, :width 716.9999999999999, :height 927.8823529411764}), :page 43}, :content {:text "sscratch"}, :properties {:color "yellow"}} {:id #uuid "627dc408-b256-4c33-9796-98f65e87bf2a", :page 43, :position {:bounding {:x1 -0.007474988698959351, :y1 710.5920562744141, :x2 717.0044658482075, :y2 761.4351959228516, :width 716.9999999999999, :height 927.8823529411764}, :rects ({:x1 84.34074667096138, :y1 710.5920562744141, :x2 717.0044658482075, :y2 730.3709259033203, :width 716.9999999999999, :height 927.8823529411764} {:x1 -0.007472574710845947, :y1 727.7487335205078, :x2 716.9885356724262, :y2 747.5276031494141, :width 716.9999999999999, :height 927.8823529411764} {:x1 -0.007474988698959351, :y1 744.6754302978516, :x2 716.9929912388325, :y2 761.4351959228516, :width 716.9999999999999, :height 927.8823529411764}), :page 43}, :content {:text "Thecsrrwinstruction at the start ofuservecswaps the contents ofa0andsscratch. Nowthe user code’sa0is saved;uservechas one register (a0) to play with; anda0contains thevalue the kernel previously placed insscratch."}, :properties {:color "yellow"}} {:id #uuid "627dc4ca-f2aa-41c5-8b2c-e5af036e72cc", :page 43, :position {:bounding {:x1 157.6347198486328, :y1 721.9942016601562, :x2 222.10671997070312, :y2 743.6608581542969, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 157.6347198486328, :y1 721.9942016601562, :x2 222.10671997070312, :y2 743.6608581542969, :width 786.0000000000001, :height 1017.1764705882354}), :page 43}, :content {:text "uservec"}, :properties {:color "yellow"}} {:id #uuid "627dc555-850a-4897-8da6-e7117cb989c6", :page 43, :position {:bounding {:x1 115.00870513916016, :y1 833.6580200195312, :x2 447.30767822265625, :y2 855.3246765136719, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 115.00870513916016, :y1 833.6580200195312, :x2 447.30767822265625, :y2 855.3246765136719, :width 786.0000000000001, :height 1017.1764705882354}), :page 43}, :content {:text "uservec’s  next  task  is  to  save  the  user  registers. "}, :properties {:color "blue"}} {:id #uuid "627dc5e4-7863-4e5c-b11d-e5ec5d94db27", :page 43, :position {:bounding {:x1 -0.009652498178184032, :y1 834.9705200195312, :x2 785.9256591796875, :y2 900.4239501953125, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 450.9642333984375, :y1 834.9705200195312, :x2 693.3504638671875, :y2 852.4705200195312, :width 786.0000000000001, :height 1017.1764705882354} {:x1 -0.009652498178184032, :y1 853.7703247070312, :x2 785.9256591796875, :y2 875.4369812011719, :width 786.0000000000001, :height 1017.1764705882354} {:x1 92.45701599121094, :y1 872.0776062011719, :x2 419.3756408691406, :y2 889.5776062011719, :width 786.0000000000001, :height 1017.1764705882354} {:x1 -0.009652224369347095, :y1 872.3250122070312, :x2 415.586669921875, :y2 900.4239501953125, :width 786.0000000000001, :height 1017.1764705882354}), :page 43}, :content {:text "Before  entering  user  space,  the  kernelpreviously setsscratchto point to a per-processtrapframethat (among other things) hasspace to save all the user registers(kernel/proc.h:44)."}, :properties {:color "blue"}} {:id #uuid "627dc7ce-1fcc-4176-8c75-284ca878a593", :page 44, :position {:bounding {:x1 -0.0096563920378685, :y1 93.5921630859375, :x2 785.9487915039062, :y2 152.42398071289062, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 601.5838012695312, :y1 93.5921630859375, :x2 693.3531494140625, :y2 111.09210205078125, :width 786.0000000000001, :height 1017.1764705882354} {:x1 -0.009656118229031563, :y1 112.39007568359375, :x2 785.776232553646, :y2 130.39788818359375, :width 786.0000000000001, :height 1017.1764705882354} {:x1 -0.0096563920378685, :y1 130.75729370117188, :x2 785.9487915039062, :y2 152.42398071289062, :width 786.0000000000001, :height 1017.1764705882354} {:x1 371.65362548828125, :y1 130.75729370117188, :x2 504.91607666015625, :y2 147.3458251953125, :width 786.0000000000001, :height 1017.1764705882354}), :page 44}, :content {:text " When  creatingeach process, xv6 allocates a page for the process’s trapframe, and arranges for it always to bemapped at user virtual addressTRAPFRAME, which is just belowTRAMPOLINE. "}, :properties {:color "blue"}} {:id #uuid "627dc840-5dd5-454e-84e4-383831b6b9c2", :page 44, :position {:bounding {:x1 -0.009656354784965515, :y1 224.1875, :x2 785.9769287109375, :y2 283.1973876953125, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 115.01068878173828, :y1 224.1875, :x2 785.8333282470703, :y2 242.55987548828125, :width 786.0000000000001, :height 1017.1764705882354} {:x1 -0.009656354784965515, :y1 242.9766845703125, :x2 785.9769287109375, :y2 264.643310546875, :width 786.0000000000001, :height 1017.1764705882354} {:x1 -0.00965216662734747, :y1 261.53076171875, :x2 785.955078125, :y2 283.1973876953125, :width 786.0000000000001, :height 1017.1764705882354}), :page 44}, :content {:text "Thetrapframecontains pointers to the current process’s kernel stack, the current CPU’shartid, the address ofusertrap, and the address of the kernel page table.uservecretrievesthese values, switchessatpto the kernel page table, and callsusertrap."}, :properties {:color "blue"}} {:id #uuid "627dc928-9f01-450c-be95-eaa4536b3ec8", :page 44, :position {:bounding {:x1 187.69517517089844, :y1 278.89068603515625, :x2 261.37164306640625, :y2 300.557373046875, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 187.69517517089844, :y1 278.89068603515625, :x2 261.37164306640625, :y2 300.557373046875, :width 786.0000000000001, :height 1017.1764705882354}), :page 44}, :content {:text "usertrap"}, :properties {:color "blue"}} {:id #uuid "627dc951-371b-4765-bb15-4ab380d5bb23", :page 44, :position {:bounding {:x1 115.00897216796875, :y1 280.1979522705078, :x2 639.82666015625, :y2 298.5703582763672, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 115.00897216796875, :y1 280.1979522705078, :x2 639.82666015625, :y2 298.5703582763672, :width 786.0000000000001, :height 1017.1764705882354}), :page 44}, :content {:text "The job ofusertrapis to determine the cause of the trap, process it, and return"}, :properties {:color "blue"}} {:id #uuid "627dcb3b-b99f-4ce6-9b93-317616df3f99", :page 44, :position {:bounding {:x1 453.0839538574219, :y1 446.2291717529297, :x2 554.3912353515625, :y2 467.89585876464844, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 453.0839538574219, :y1 446.2291717529297, :x2 554.3912353515625, :y2 467.89585876464844, :width 786.0000000000001, :height 1017.1764705882354}), :page 44}, :content {:text "usertrapret"}, :properties {:color "blue"}} {:id #uuid "627dcb4e-d9d7-41bf-8402-f6d555af13b4", :page 44, :position {:bounding {:x1 115.00313568115234, :y1 447.5416717529297, :x2 556.9867553710938, :y2 465.0416717529297, :width 786.0000000000001, :height 1017.1764705882354}, :rects ({:x1 115.00313568115234, :y1 447.5416717529297, :x2 556.9867553710938, :y2 465.0416717529297, :width 786.0000000000001, :height 1017.1764705882354}), :page 44}, :content {:text "The first step in returning to user space is the call tousertrapret"}, :properties {:color "green"}} {:id #uuid "627dd01b-3779-4f0c-9b49-c676527226a9", :page 44, :position {:bounding {:x1 -0.009656161069869995, :y1 503.1973775178194, :x2 785.9579060971737, :y2 540.1849568635225, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 515.4790852963924, :y1 503.1973775178194, :x2 785.9579060971737, :y2 521.2051595002413, :width 785.9999999999999, :height 1017.1764705882352} {:x1 -0.009656161069869995, :y1 521.8255818635225, :x2 669.5785115659237, :y2 540.1849568635225, :width 785.9999999999999, :height 1017.1764705882352}), :page 44}, :content {:text " At the end,usertrapretcallsuserreton the trampoline page that is mapped in both user and kernel page tables;"}, :properties {:color "green"}} {:id #uuid "627dd094-f5f3-4c89-8b63-7ee7b06331c1", :page 44, :position {:bounding {:x1 92.44951376318932, :y1 447.5417073518038, :x2 693.2428182065487, :y2 483.60100300610065, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 665.1501058042049, :y1 447.5417073518038, :x2 693.2428182065487, :y2 465.0417073518038, :width 785.9999999999999, :height 1017.1764705882352} {:x1 92.44951376318932, :y1 466.10100300610065, :x2 643.5717061460018, :y2 483.60100300610065, :width 785.9999999999999, :height 1017.1764705882352}), :page 44}, :content {:text "Thisfunction sets up the RISC-V control registers to prepare for a future trap from user space."}, :properties {:color "blue"}} {:id #uuid "627dd0d0-cd07-4691-827b-e5f766e5ffbd", :page 44, :position {:bounding {:x1 92.45229849219322, :y1 775.33131916821, :x2 389.524014800787, :y2 800.33131916821, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 92.45229849219322, :y1 775.33131916821, :x2 389.524014800787, :y2 800.33131916821, :width 785.9999999999999, :height 1017.1764705882352}), :page 44}, :content {:text "4.3    Code: Calling system calls"}, :properties {:color "blue"}} {:id #uuid "627dd11c-0bb6-488a-9267-5666f95222d6", :page 44, :position {:bounding {:x1 -0.009652465581893921, :y1 816.0556030273438, :x2 693.4906209409237, :y2 853.2292785644531, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 631.5350545346737, :y1 816.0556030273438, :x2 693.4906209409237, :y2 833.5556030273438, :width 785.9999999999999, :height 1017.1764705882352} {:x1 -0.009652465581893921, :y1 834.7266540527344, :x2 648.2332967221737, :y2 853.2292785644531, :width 785.9999999999999, :height 1017.1764705882352}), :page 44}, :content {:text "Let’s lookat how the user call makes its way to theexecsystem call’s implementation in the kernel."}, :properties {:color "blue"}} {:id #uuid "627dd163-c26a-43d4-bec5-a7063f4c38bd", :page 44, :position {:bounding {:x1 -0.009656459093093872, :y1 853.5240478515625, :x2 785.9687703549862, :y2 900.418701171875, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 115.00657400488853, :y1 853.5240478515625, :x2 785.9687703549862, :y2 875.1907043457031, :width 785.9999999999999, :height 1017.1764705882352} {:x1 92.44932302832603, :y1 872.0723266601562, :x2 177.60309347510338, :y2 889.5723266601562, :width 785.9999999999999, :height 1017.1764705882352} {:x1 -0.009656459093093872, :y1 872.1504516601562, :x2 157.20056387782097, :y2 900.418701171875, :width 785.9999999999999, :height 1017.1764705882352}), :page 44}, :content {:text "The user code places the arguments forexecin registersa0anda1, and puts the system callnumber ina7"}, :properties {:color "yellow"}} {:id #uuid "627dd39a-00d5-4412-9eeb-7d4ad04da122", :page 45, :position {:bounding {:x1 -0.009650737047195435, :y1 -0.013031005859375, :x2 786.4192708432674, :y2 134.91873168945312, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 299.9962666928768, :y1 -0.013031005859375, :x2 786.4192708432674, :y2 111.67965698242188, :width 785.9999999999999, :height 1017.1764705882352} {:x1 625.1859334409237, :y1 92.25363159179688, :x2 689.6579183042049, :y2 113.92025756835938, :width 785.9999999999999, :height 1017.1764705882352} {:x1 274.0154317319393, :y1 93.59219360351562, :x2 343.90392050147057, :y2 111.09213256835938, :width 785.9999999999999, :height 1017.1764705882352} {:x1 -0.009650737047195435, :y1 112.37966918945312, :x2 785.9758656919003, :y2 134.91873168945312, :width 785.9999999999999, :height 1017.1764705882352}), :page 45}, :content {:text "Theecallinstruction traps into the kernel and executesuservec,usertrap, and thensyscall, as we saw above."}, :properties {:color "yellow"}} {:id #uuid "627dd42a-5618-4dd6-bf78-adbe02631755", :page 45, :position {:bounding {:x1 92.44899496436119, :y1 200.89810180664062, :x2 785.9322102963924, :y2 239.19442749023438, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 115.00907644629478, :y1 200.89810180664062, :x2 785.9322102963924, :y2 218.39810180664062, :width 785.9999999999999, :height 1017.1764705882352} {:x1 92.44899496436119, :y1 219.19442749023438, :x2 226.93152365088463, :y2 239.19442749023438, :width 785.9999999999999, :height 1017.1764705882352}), :page 45}, :content {:text "When the system call implementation function returns,syscallrecords its return value inp->trapframe->a0"}, :properties {:color "yellow"}} {:id #uuid "627dd4a1-3952-4d37-b034-eba8e2a94f0a", :page 45, :position {:bounding {:x1 92.45064291357994, :y1 238.00210571289062, :x2 693.4695638120174, :y2 274.0567932128906, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 522.1653645932674, :y1 238.00210571289062, :x2 693.4695638120174, :y2 255.50210571289062, :width 785.9999999999999, :height 1017.1764705882352} {:x1 92.45064291357994, :y1 256.5567932128906, :x2 615.1515706479549, :y2 274.0567932128906, :width 785.9999999999999, :height 1017.1764705882352}), :page 45}, :content {:text "System calls conventionallyreturn negative numbers to indicate errors, and zero or positive numbers for success. "}, :properties {:color "purple"}} {:id #uuid "627dd4d1-a4dd-4c4d-9603-ce0402ca23a8", :page 45, :position {:bounding {:x1 92.45712026953697, :y1 368.44512939453125, :x2 416.29314932227135, :y2 393.44512939453125, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 92.45712026953697, :y1 368.44512939453125, :x2 416.29314932227135, :y2 393.44512939453125, :width 785.9999999999999, :height 1017.1764705882352}), :page 45}, :content {:text "4.4    Code: System call arguments"}, :properties {:color "yellow"}} {:id #uuid "627dd518-e5e1-4458-88b2-a4d4361746a6", :page 45, :position {:bounding {:x1 92.45850118994713, :y1 460.64007568359375, :x2 693.0699666440487, :y2 496.69537353515625, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 359.0079549252987, :y1 460.64007568359375, :x2 693.0699666440487, :y2 478.14007568359375, :width 785.9999999999999, :height 1017.1764705882352} {:x1 92.45850118994713, :y1 479.19537353515625, :x2 445.6193288266659, :y2 496.69537353515625, :width 785.9999999999999, :height 1017.1764705882352}), :page 45}, :content {:text "The kernel trap code saves user registers to the currentprocess’s  trap  frame,  where  kernel  code  can  find  them."}, :properties {:color "yellow"}} {:id #uuid "627dd5f5-f7d6-463e-a5b6-0630d0f11573", :page 45, :position {:bounding {:x1 92.45693716406822, :y1 542.1265869140625, :x2 693.3202413022518, :y2 578.1791381835938, :width 785.9999999999999, :height 1017.1764705882352}, :rects ({:x1 115.00737509131432, :y1 542.1265869140625, :x2 693.3202413022518, :y2 559.6265869140625, :width 785.9999999999999, :height 1017.1764705882352} {:x1 92.45693716406822, :y1 560.6791381835938, :x2 232.83782705664635, :y2 578.1791381835938, :width 785.9999999999999, :height 1017.1764705882352}), :page 45}, :content {:text "Some system calls pass pointers as arguments, and the kernel must use those pointers to reador write user memory. "}, :properties {:color "yellow"}} {:id #uuid "627dd77c-4df5-4238-8db7-af999bcd1995", :page 45, :position {:bounding {:x1 462.3982849121094, :y1 751.8538818359375, :x2 750.0150756835938, :y2 773.8538818359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 462.3982849121094, :y1 751.8538818359375, :x2 750.0150756835938, :y2 773.8538818359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "These pointers pose two challenges."}, :properties {:color "yellow"}} {:id #uuid "627dd78e-e50c-4abc-a5c6-3f385f1e8398", :page 45, :position {:bounding {:x1 0.000003814697265625, :y1 751.8538818359375, :x2 1019.9956092834473, :y2 822.00244140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 754.9246215820312, :y1 751.8538818359375, :x2 899.6787719726562, :y2 773.8538818359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.000003814697265625, :y1 775.8626708984375, :x2 1019.9956092834473, :y2 798.9876708984375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99832153320312, :y1 800.00244140625, :x2 708.2062072753906, :y2 822.00244140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "First, the user pro-gram may be buggy or malicious, and may pass the kernel an invalid pointer or a pointer intendedto trick the kernel into accessing kernel memory instead of user memory."}, :properties {:color "blue"}} {:id #uuid "627dd7b5-55f1-4cdf-9d17-8d899dc14a15", :page 45, :position {:bounding {:x1 0.000003814697265625, :y1 800.00244140625, :x2 1020.0097694396973, :y2 870.14306640625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 713.2913818359375, :y1 800.00244140625, :x2 900.0018310546875, :y2 822.00244140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.000003814697265625, :y1 824.01806640625, :x2 1020.0097694396973, :y2 847.14306640625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98722839355469, :y1 848.14306640625, :x2 652.5222625732422, :y2 870.14306640625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "Second, the xv6 kernelpage table mappings are not the same as the user page table mappings, so the kernel cannot useordinary instructions to load or store from user-supplied addresses."}, :properties {:color "purple"}} {:id #uuid "627dd80d-b5da-4e2c-8982-9c1b6fc8fd45", :page 45, :position {:bounding {:x1 0.000003814697265625, :y1 881.6591186523438, :x2 899.9819488525391, :y2 932.1902465820312, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.24867248535156, :y1 881.6591186523438, :x2 899.9819488525391, :y2 903.6591186523438, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98507690429688, :y1 903.1902465820312, :x2 215.6302490234375, :y2 932.1902465820312, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.000003814697265625, :y1 905.6746215820312, :x2 494.446533203125, :y2 929.0339965820312, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "The kernel implements functions that safely transfer data to and from user-supplied addresses.fetchstris an example(kernel/syscall.c:25). "}, :properties {:color "purple"}} {:id #uuid "627dd83a-1698-44e7-bef8-3f1ab5b92a0c", :page 45, :position {:bounding {:x1 119.99337768554688, :y1 929.6712646484375, :x2 1019.9896240234375, :y2 975.8943481445312, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 546.6785278320312, :y1 929.6712646484375, :x2 1019.9896240234375, :y2 955.6712646484375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99337768554688, :y1 953.8943481445312, :x2 165.7251739501953, :y2 975.8943481445312, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "fetchstrcallscopyinstrto do the hardwork."}, :properties {:color "red"}} {:id #uuid "627dd913-c3cc-45b4-abe1-40642839255f", :page 45, :position {:bounding {:x1 149.23155212402344, :y1 987.2412719726562, :x2 247.41494750976562, :y2 1013.2412719726562, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.23155212402344, :y1 987.2412719726562, :x2 247.41494750976562, :y2 1013.2412719726562, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "copyinstr"}, :properties {:color "red"}} {:id #uuid "627dd935-9ca1-401c-88b2-e160e5d95bef", :page 45, :position {:bounding {:x1 0.0000057220458984375, :y1 987.2412719726562, :x2 1019.9736328125, :y2 1034.784912109375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.23155212402344, :y1 987.2412719726562, :x2 1019.9736328125, :y2 1013.2412719726562, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.0000057220458984375, :y1 1011.4724731445312, :x2 446.76361083984375, :y2 1034.784912109375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "copyinstr(kernel/vm.c:406)copies up tomaxbytes todstfrom virtual addresssrcvainthe user page tablepagetable."}, :properties {:color "red"}} {:id #uuid "627dd9fe-f1d3-4125-8615-8b5ac25406dc", :page 45, :position {:bounding {:x1 0.0000057220458984375, :y1 1008.9414672851562, :x2 1019.97802734375, :y2 1061.7288818359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 657.5327758789062, :y1 1008.9414672851562, :x2 705.3698120117188, :y2 1037.9415283203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 450.0879211425781, :y1 1008.9491577148438, :x2 545.7404174804688, :y2 1037.9490966796875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 549.0647583007812, :y1 1011.4724731445312, :x2 1019.97802734375, :y2 1034.784912109375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.0000057220458984375, :y1 1035.7288818359375, :x2 618.197021484375, :y2 1061.7288818359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "walkaddr(which callswalk) to walk the page tablein software to determine the physical addresspa0forsrcva."}, :properties {:color "yellow"}} {:id #uuid "627df551-74f3-478c-b9c1-8a9b52094c55", :page 45, :position {:bounding {:x1 -0.000003814697265625, :y1 1035.5726318359375, :x2 1019.980224609375, :y2 1110.1597900390625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 623.2864379882812, :y1 1035.5726318359375, :x2 899.9901733398438, :y2 1057.5726318359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 543.652587890625, :y1 1057.0897216796875, :x2 651.2686767578125, :y2 1086.0897216796875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 -0.000003814697265625, :y1 1059.613037109375, :x2 1019.980224609375, :y2 1082.972412109375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 163.3722381591797, :y1 1081.1597900390625, :x2 199.2408447265625, :y2 1110.1597900390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 224.0436248779297, :y1 1081.1597900390625, :x2 259.9216003417969, :y2 1110.1597900390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0.000003814697265625, :y1 1083.6439208984375, :x2 267.2181701660156, :y2 1107.0032958984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 45}, :content {:text "Since the kernel maps all physicalRAM addresses to the same kernel virtual address,copyinstrcan directly copy string bytesfrompa0todst."}, :properties {:color "blue"}} {:id #uuid "627df5a3-29cc-4d8a-87bd-12e50eef7f85", :page 45, :position {:bounding {:x1 118.80548858642578, :y1 1070.5283203125, :x2 1009.9853515625, :y2 1118.9189453125, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 266.8901672363281, :y1 1070.5283203125, :x2 488.8219299316406, :y2 1099.5283203125, :width 1010.0000000000002, :height 1307.058823529412} {:x1 488.82403564453125, :y1 1073.247802734375, :x2 1009.9853515625, :y2 1096.341552734375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80548858642578, :y1 1096.9189453125, :x2 891.168098449707, :y2 1118.9189453125, :width 1010.0000000000002, :height 1307.058823529412}), :page 45}, :content {:text "walkaddr(kernel/vm.c:95)checks that the user-supplied virtual address is partof the process’s user address space, so programs cannot trick the kernel into reading other memory."}, :properties {:color "blue"}} {:id #uuid "627df690-bad6-40f2-ab3f-2776355429be", :page 46, :position {:bounding {:x1 118.80109405517578, :y1 113.28594970703125, :x2 476.4122085571289, :y2 145.28594970703125, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 118.80109405517578, :y1 113.28594970703125, :x2 476.4122085571289, :y2 145.28594970703125, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "4.5    Traps from kernel space"}, :properties {:color "yellow"}} {:id #uuid "627df6f3-964e-4a8d-90aa-1dd6ef0a0040", :page 46, :position {:bounding {:x1 118.80731964111328, :y1 165.8740234375, :x2 891.1694412231445, :y2 211.6947021484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 118.80731964111328, :y1 165.8740234375, :x2 891.1694412231445, :y2 187.8740234375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.8117446899414, :y1 189.6947021484375, :x2 258.0124282836914, :y2 211.6947021484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "Xv6 configures the CPU trap registers somewhat differently depending on whether user or kernelcode is executing."}, :properties {:color "yellow"}} {:id #uuid "627df70e-dd1a-4ff6-bae3-a5abc1712490", :page 46, :position {:bounding {:x1 -0.011025719344615936, :y1 187.15252685546875, :x2 1009.9882202148438, :y2 239.99627685546875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 707.4473266601562, :y1 187.15252685546875, :x2 766.6409301757812, :y2 216.15252685546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 262.82098388671875, :y1 189.6947021484375, :x2 1009.9882202148438, :y2 211.6947021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 181.7160186767578, :y1 210.99627685546875, :x2 462.8361511230469, :y2 239.99627685546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011025719344615936, :y1 213.4915771484375, :x2 473.0011291503906, :y2 236.5853271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "When the kernel is executing on a CPU, the kernel pointsstvecto the assemblycode atkernelvec(kernel/kernelvec.S:10). "}, :properties {:color "yellow"}} {:id #uuid "627df757-0a4b-49f8-8f7b-260d3e3a319f", :page 46, :position {:bounding {:x1 -0.011026136577129364, :y1 210.986083984375, :x2 1009.9926300048828, :y2 283.22674560546875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 751.514892578125, :y1 210.986083984375, :x2 858.0617065429688, :y2 239.986083984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 472.98663330078125, :y1 213.54388427734375, :x2 1009.9735107421875, :y2 235.54388427734375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 178.6537628173828, :y1 234.829833984375, :x2 226.01727294921875, :y2 263.829833984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011026136577129364, :y1 237.3353271484375, :x2 1009.9926300048828, :y2 260.4290771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.81175994873047, :y1 261.22674560546875, :x2 164.30162048339844, :y2 283.22674560546875, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "Since xv6 is already in the kernel,kernelveccanrely onsatpbeing set to the kernel page table, and on the stack pointer referring to a valid kernelstack."}, :properties {:color "blue"}} {:id #uuid "627df78f-d860-4a3c-9405-59a78623179a", :page 46, :position {:bounding {:x1 118.8049545288086, :y1 258.66424560546875, :x2 1009.9702453613281, :y2 307.07513427734375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 169.74278259277344, :y1 258.66424560546875, :x2 276.28961181640625, :y2 287.66424560546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 279.0080871582031, :y1 261.17987060546875, :x2 1009.9702453613281, :y2 284.49237060546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.8049545288086, :y1 285.07513427734375, :x2 214.70571899414062, :y2 307.07513427734375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "kernelvecsaves all registers so that the interrupted code can eventually resume withoutdisturbance."}, :properties {:color "blue"}} {:id #uuid "627df862-929a-4fb6-ab2b-2131ae1f8b7f", :page 46, :position {:bounding {:x1 334.2142333984375, :y1 402.8629150390625, :x2 452.5980529785156, :y2 431.8629150390625, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 334.2142333984375, :y1 402.8629150390625, :x2 452.5980529785156, :y2 431.8629150390625, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "kerneltrap"}, :properties {:color "blue"}} {:id #uuid "627df877-cc28-4953-a013-933c0cd68520", :page 46, :position {:bounding {:x1 147.7884521484375, :y1 402.8629150390625, :x2 770.07373046875, :y2 431.8629150390625, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 147.7884521484375, :y1 402.8629150390625, :x2 254.33529663085938, :y2 431.8629150390625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 334.2142333984375, :y1 402.8629150390625, :x2 595.0214233398438, :y2 431.8629150390625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 257.0509033203125, :y1 405.092529296875, :x2 455.3097229003906, :y2 428.701904296875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 595.0367431640625, :y1 405.092529296875, :x2 770.07373046875, :y2 428.701904296875, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "kernelvecjumps tokerneltrap(kernel/trap.c:134)after saving registers."}, :properties {:color "yellow"}} {:id #uuid "627df947-368e-47ef-87a1-a3cd59e55bb3", :page 46, :position {:bounding {:x1 118.8072280883789, :y1 402.8629150390625, :x2 891.1749877929688, :y2 451.26263427734375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 772.7911987304688, :y1 402.8629150390625, :x2 891.1749877929688, :y2 431.8629150390625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.8072280883789, :y1 429.26263427734375, :x2 675.6989517211914, :y2 451.26263427734375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "kerneltrapis prepared for two types of traps: device interrrupts and exceptions."}, :properties {:color "blue"}} {:id #uuid "627df978-25a0-45a8-b42f-26336b4f1475", :page 46, :position {:bounding {:x1 -0.01102447509765625, :y1 426.7103271484375, :x2 1009.9791870117188, :y2 476.8822021484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 739.8885498046875, :y1 426.7103271484375, :x2 822.7607421875, :y2 455.7103271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 675.684326171875, :y1 429.26263427734375, :x2 1009.9791870117188, :y2 451.26263427734375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.01102447509765625, :y1 453.2884521484375, :x2 497.14955139160156, :y2 476.8822021484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text " It callsdevintr(kernel/-trap.c:177)to check for and handle the former."}, :properties {:color "green"}} {:id #uuid "627df9c5-a5ca-48a4-8cf6-8b88dce0f1a9", :page 46, :position {:bounding {:x1 -0.011027924716472626, :y1 522.6441650390625, :x2 1009.9844055175781, :y2 575.486083984375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 166.5663604736328, :y1 522.6441650390625, :x2 284.9501953125, :y2 551.6441650390625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 147.78395080566406, :y1 525.217529296875, :x2 1009.9844055175781, :y2 547.217529296875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 374.0980224609375, :y1 546.486083984375, :x2 492.4818420410156, :y2 575.486083984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 538.0875244140625, :y1 546.486083984375, :x2 597.2871704101562, :y2 575.486083984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011027924716472626, :y1 549.2157592773438, :x2 891.1881103515625, :y2 572.3095092773438, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "Ifkerneltrapwas called due to a timer interrupt, and a process’s kernel thread is running(rather than a scheduler thread),kerneltrapcallsyieldto give other threads a chance to run."}, :properties {:color "green"}} {:id #uuid "627dfa1c-0493-4f39-8f88-5dfdbdb61005", :page 46, :position {:bounding {:x1 118.80091857910156, :y1 570.329833984375, :x2 1009.994140625, :y2 618.7259521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 709.2144165039062, :y1 570.329833984375, :x2 827.5982666015625, :y2 599.329833984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80091857910156, :y1 572.8876342773438, :x2 1009.994140625, :y2 594.8876342773438, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.802978515625, :y1 596.7259521484375, :x2 166.8567657470703, :y2 618.7259521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "At some point one of those threads will yield, and let our thread and itskerneltrapresumeagain."}, :properties {:color "red"}} {:id #uuid "627dfa49-a99e-4e84-a4b5-cc4d789736b0", :page 46, :position {:bounding {:x1 118.81018829345703, :y1 453.107177734375, :x2 891.17041015625, :y2 498.9447021484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 497.134521484375, :y1 453.107177734375, :x2 891.17041015625, :y2 475.107177734375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.81018829345703, :y1 476.9447021484375, :x2 195.9540252685547, :y2 498.9447021484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text " If the trap isn’t a device interrupt, it must be anexception"}, :properties {:color "purple"}} {:id #uuid "627dfa65-3c26-4cf6-80d0-8f20b48b2fe8", :page 46, :position {:bounding {:x1 118.80924987792969, :y1 476.9447021484375, :x2 1009.9723510742188, :y2 522.7891845703125, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 200.93704223632812, :y1 476.9447021484375, :x2 1009.9723510742188, :y2 498.9447021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80924987792969, :y1 500.7891845703125, :x2 245.3584747314453, :y2 522.7891845703125, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text " and that is always a fatal error if it occurs in the xv6 kernel; the kernel callspanicandstops executing."}, :properties {:color "red"}} {:id #uuid "627dfaef-31fa-4886-8c5e-b82b787255ad", :page 46, :position {:bounding {:x1 118.80297088623047, :y1 618.6027221679688, :x2 1010.0029907226562, :y2 666.9978637695312, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 201.22540283203125, :y1 618.6027221679688, :x2 319.6092224121094, :y2 647.6027221679688, :width 1010.0000000000002, :height 1307.058823529412} {:x1 147.78370666503906, :y1 621.155029296875, :x2 1010.0029907226562, :y2 643.155029296875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80297088623047, :y1 644.9978637695312, :x2 183.76593017578125, :y2 666.9978637695312, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "Whenkerneltrap’s work is done, it needs to return to whatever code was interrupted bythe  trap."}, :properties {:color "purple"}} {:id #uuid "627dfb22-28ae-4c16-8668-363a4235873c", :page 46, :position {:bounding {:x1 -0.011029459536075592, :y1 642.4244384765625, :x2 1009.9888305664062, :y2 695.2775268554688, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 282.65386962890625, :y1 642.4244384765625, :x2 341.8535461425781, :y2 671.4244384765625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 598.6300659179688, :y1 642.4244384765625, :x2 645.9853515625, :y2 671.4244384765625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 192.90847778320312, :y1 644.9978637695312, :x2 1009.9888305664062, :y2 666.9978637695312, :width 1010.0000000000002, :height 1307.058823529412} {:x1 237.03330993652344, :y1 666.2728271484375, :x2 355.4171447753906, :y2 695.2728271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 141.69076538085938, :y1 666.2775268554688, :x2 224.5589599609375, :y2 695.2775268554688, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011029459536075592, :y1 668.7728271484375, :x2 572.17041015625, :y2 692.1009521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "Because  ayieldmay  have  disturbed  the  savedsepcand  the  saved  previous  modeinsstatus,kerneltrapsaves  them  when  it  starts"}, :properties {:color "green"}} {:id #uuid "627dfd3a-83d6-4c36-a0a0-7429c520e519", :page 46, :position {:bounding {:x1 -0.011025585234165192, :y1 668.8251342773438, :x2 891.1609497070312, :y2 719.1165771484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 581.5335693359375, :y1 668.8251342773438, :x2 891.1609497070312, :y2 690.8251342773438, :width 1010.0000000000002, :height 1307.058823529412} {:x1 231.67373657226562, :y1 690.1165771484375, :x2 338.2205810546875, :y2 719.1165771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011025585234165192, :y1 692.8407592773438, :x2 519.671875, :y2 716.1532592773438, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text " It  now  restores  those  control  registersand returns tokernelvec(kernel/kernelvec.S:48)."}, :properties {:color "purple"}} {:id #uuid "627dfd5d-459a-410d-a195-39eacc89da0d", :page 46, :position {:bounding {:x1 -0.011023931205272675, :y1 690.1212768554688, :x2 1009.986572265625, :y2 742.954833984375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 521.5045776367188, :y1 690.1212768554688, :x2 628.0513916015625, :y2 719.1212768554688, :width 1010.0000000000002, :height 1307.058823529412} {:x1 630.4229736328125, :y1 692.6165771484375, :x2 1009.986572265625, :y2 715.9290771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 269.9635009765625, :y1 713.954833984375, :x2 317.32818603515625, :y2 742.954833984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 435.69549560546875, :y1 713.954833984375, :x2 483.0508117675781, :y2 742.954833984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 508.2565002441406, :y1 713.954833984375, :x2 531.9482421875, :y2 742.954833984375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011023931205272675, :y1 716.6845092773438, :x2 856.6532592773438, :y2 740.0751342773438, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "kernelvecpops the saved registers from thestack and executessret, which copiessepctopcand resumes the interrupted kernel code."}, :properties {:color "red"}} {:id #uuid "627dfe54-8020-4309-87d6-debc72210188", :page 46, :position {:bounding {:x1 -0.01102534681558609, :y1 860.7157592773438, :x2 1009.9707336425781, :y2 927.8353271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 290.5460205078125, :y1 860.7157592773438, :x2 891.1609497070312, :y2 882.7157592773438, :width 1010.0000000000002, :height 1307.058823529412} {:x1 462.47857666015625, :y1 881.9962768554688, :x2 521.6721801757812, :y2 910.9962768554688, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.01102534681558609, :y1 884.5072021484375, :x2 1009.9707336425781, :y2 927.8353271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "he RISC-V always disables interrupts when it starts to take a trap, and xv6doesn’t enable them again until after it setsstvec."}, :properties {:color "yellow"}} {:id #uuid "627dfe9c-1f3a-4059-906a-aafa652d6aa8", :page 46, :position {:bounding {:x1 118.80626678466797, :y1 948.3970336914062, :x2 440.48021697998047, :y2 980.39697265625, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 118.80626678466797, :y1 948.3970336914062, :x2 440.48021697998047, :y2 980.39697265625, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "4.6    Page-fault exceptions"}, :properties {:color "blue"}} {:id #uuid "627dfee9-fd61-4eaf-aeb7-6e0b8055aca8", :page 46, :position {:bounding {:x1 644.002197265625, :y1 1073.076904296875, :x2 756.9619750976562, :y2 1095.076904296875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 644.002197265625, :y1 1073.076904296875, :x2 756.9619750976562, :y2 1095.076904296875, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "copy-on-write "}, :properties {:color "blue"}} {:id #uuid "627dfefe-6b89-476d-91a1-bf717cf49900", :page 46, :position {:bounding {:x1 284.1130676269531, :y1 1073.076904296875, :x2 858.0215454101562, :y2 1095.076904296875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 284.1130676269531, :y1 1073.076904296875, :x2 858.0215454101562, :y2 1095.076904296875, :width 1010.0000000000002, :height 1307.058823529412}), :page 46}, :content {:text "many  kernels  use  page  faults  to  implementcopy-on-write  (COW)  fork"}, :properties {:color "blue"}} {:id #uuid "627dff34-6b93-48e0-b889-8dbce9ff66f9", :page 47, :position {:bounding {:x1 118.80912017822266, :y1 120.40203857421875, :x2 891.1571655273438, :y2 166.2415771484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 666.3463745117188, :y1 120.40203857421875, :x2 891.1571655273438, :y2 142.40203857421875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80912017822266, :y1 144.2415771484375, :x2 616.0434646606445, :y2 166.2415771484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " It would be more efficient ifthe child and parent could share the parent’s physical memory"}, :properties {:color "blue"}} {:id #uuid "627dff47-d31c-4a64-a4de-8109b179f2f0", :page 47, :position {:bounding {:x1 -0.011025600135326385, :y1 144.2415771484375, :x2 1009.9732883647084, :y2 213.9134521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 621.0720825195312, :y1 144.2415771484375, :x2 889.1717529296875, :y2 166.2415771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011025600135326385, :y1 168.0228271484375, :x2 1009.9732883647084, :y2 191.1165771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80093383789062, :y1 191.9134521484375, :x2 560.9586791992188, :y2 213.9134521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " A straightforward implementationof this would not work, however, since it would cause the parent and child to disrupt each other’sexecution with their writes to the shared stack and heap."}, :properties {:color "green"}} {:id #uuid "627e001f-0f0d-4e21-899a-08a74d1ef889", :page 47, :position {:bounding {:x1 606.5867919921875, :y1 271.2259521484375, :x2 695.1455688476562, :y2 293.2259521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 606.5867919921875, :y1 271.2259521484375, :x2 695.1455688476562, :y2 293.2259521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "page fault:"}, :properties {:color "green"}} {:id #uuid "627e003b-ff48-454b-82ce-9ac304ddc845", :page 47, :position {:bounding {:x1 -0.0110321044921875, :y1 247.3822021484375, :x2 891.1544342041016, :y2 294.2728271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 172.2980499267578, :y1 247.3822021484375, :x2 891.1544342041016, :y2 269.3822021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.0110321044921875, :y1 271.1790771484375, :x2 303.45904541015625, :y2 294.2728271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "When a CPU cannot translate a virtual address to a physical address, the CPU generatesapage-fault exception."}, :properties {:color "green"}} {:id #uuid "627e0079-da7d-4ab9-a6e7-cfdba537d795", :page 47, :position {:bounding {:x1 308.71697998046875, :y1 271.2259521484375, :x2 700.4035034179688, :y2 293.2259521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 308.71697998046875, :y1 271.2259521484375, :x2 700.4035034179688, :y2 293.2259521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "RISC-V has three different kinds of page fault: "}, :properties {:color "red"}} {:id #uuid "627e0088-7e72-4028-a652-a21c57cf9ebf", :page 47, :position {:bounding {:x1 118.81208038330078, :y1 271.2259521484375, :x2 891.1765747070312, :y2 317.0697021484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 704.60986328125, :y1 271.2259521484375, :x2 891.1765747070312, :y2 293.2259521484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.81208038330078, :y1 295.0697021484375, :x2 543.4047317504883, :y2 317.0697021484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "oad page faults (whena load instruction cannot translate its virtual address)"}, :properties {:color "purple"}} {:id #uuid "627e00a6-95d4-4590-afbd-eef067b6fec6", :page 47, :position {:bounding {:x1 118.80091857910156, :y1 295.0697021484375, :x2 891.1694946289062, :y2 340.91424560546875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 553.4927978515625, :y1 295.0697021484375, :x2 891.1694946289062, :y2 317.0697021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80091857910156, :y1 318.91424560546875, :x2 391.55970764160156, :y2 340.91424560546875, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "store page faults (when a store instructioncannot translate its virtual address)"}, :properties {:color "red"}} {:id #uuid "627e00c9-f97e-4a80-a49e-110eefcbb856", :page 47, :position {:bounding {:x1 118.80118560791016, :y1 318.91424560546875, :x2 891.1552124023438, :y2 364.7415771484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 401.3155212402344, :y1 318.91424560546875, :x2 891.1552124023438, :y2 340.91424560546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80118560791016, :y1 342.7415771484375, :x2 264.63797760009766, :y2 364.7415771484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "and instruction page faults (when the address for an instructiondoesn’t translate)."}, :properties {:color "purple"}} {:id #uuid "627e0135-eff1-4f38-b8ea-87b84eed3683", :page 47, :position {:bounding {:x1 -0.01103343814611435, :y1 342.7415771484375, :x2 1009.978515625, :y2 394.311279296875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 264.6234436035156, :y1 342.7415771484375, :x2 1009.978515625, :y2 364.7415771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.01103343814611435, :y1 366.592529296875, :x2 615.4748687744141, :y2 394.311279296875, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " The value in thescauseregister indicates the type of the page fault and thestvalregister contains the address that couldn’t be translated."}, :properties {:color "yellow"}} {:id #uuid "627e01ca-51ed-4214-8f69-ec6b9332fafc", :page 47, :position {:bounding {:x1 118.7999038696289, :y1 398.22174072265625, :x2 891.1526489257812, :y2 444.05487060546875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 147.78436279296875, :y1 398.22174072265625, :x2 891.1526489257812, :y2 420.22174072265625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.7999038696289, :y1 422.05487060546875, :x2 311.29578399658203, :y2 444.05487060546875, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "The basic plan in COW fork is for the parent and child to initially share all physical pages, butto map them read-only. "}, :properties {:color "purple"}} {:id #uuid "627e020d-225f-4c7a-9897-b435a209f23b", :page 47, :position {:bounding {:x1 118.80194091796875, :y1 422.05487060546875, :x2 890.8232421875, :y2 467.8978271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 311.28118896484375, :y1 422.05487060546875, :x2 890.8232421875, :y2 444.05487060546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80194091796875, :y1 445.8978271484375, :x2 393.7067565917969, :y2 467.8978271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "Thus, when the child or parent executes a store instruction, the RISC-VCPU raises a page-fault exception"}, :properties {:color "red"}} {:id #uuid "627e022d-77cd-4e50-be62-0035cef36cbc", :page 47, :position {:bounding {:x1 118.80628967285156, :y1 445.8978271484375, :x2 891.1651611328125, :y2 491.7415771484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 398.7308654785156, :y1 445.8978271484375, :x2 891.1651611328125, :y2 467.8978271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80628967285156, :y1 469.7415771484375, :x2 419.3734893798828, :y2 491.7415771484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " In response to this exception, the kernel makes a copy of thepage that contains the faulted address."}, :properties {:color "yellow"}} {:id #uuid "627e0286-718a-41ee-8015-7fb0d1745ebf", :page 47, :position {:bounding {:x1 118.8028793334961, :y1 469.7415771484375, :x2 891.1603393554688, :y2 515.5853271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 424.210205078125, :y1 469.7415771484375, :x2 891.1603393554688, :y2 491.7415771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.8028793334961, :y1 493.5853271484375, :x2 554.0286178588867, :y2 515.5853271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "It maps one copy read/write in the child’s address space andthe other copy read/write in the parent’s address space"}, :properties {:color "blue"}} {:id #uuid "627e02c0-7999-483f-993f-d07ce7e0b455", :page 47, :position {:bounding {:x1 118.79884338378906, :y1 493.5853271484375, :x2 890.171875, :y2 539.4290771484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 562.9588012695312, :y1 493.5853271484375, :x2 890.171875, :y2 515.5853271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.79884338378906, :y1 517.4290771484375, :x2 642.6604156494141, :y2 539.4290771484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "After updating the page tables, the kernelresumes the faulting process at the instruction that caused the fault. "}, :properties {:color "green"}} {:id #uuid "627e02dc-639f-4342-ba9d-4fe316395d99", :page 47, :position {:bounding {:x1 118.80513000488281, :y1 517.4290771484375, :x2 891.1521606445312, :y2 563.2579956054688, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 642.6466674804688, :y1 517.4290771484375, :x2 891.1521606445312, :y2 539.4290771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80513000488281, :y1 541.2579956054688, :x2 824.9713897705078, :y2 563.2579956054688, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "Because the kernel has updatedthe relevant PTE to allow writes, the faulting instruction will now execute without a fault."}, :properties {:color "purple"}} {:id #uuid "627e035c-2b86-436f-9dc8-702b171e12af", :page 47, :position {:bounding {:x1 118.80728912353516, :y1 676.033447265625, :x2 891.1549224853516, :y2 721.8822021484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 147.7832794189453, :y1 676.033447265625, :x2 891.1549224853516, :y2 698.033447265625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80728912353516, :y1 699.8822021484375, :x2 326.9192886352539, :y2 721.8822021484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "The combination of page tables and page faults opens up a wide-range of interesting possibil-ities other than COW fork"}, :properties {:color "purple"}} {:id #uuid "627e037d-6165-4bf1-bfde-4078aede59aa", :page 47, :position {:bounding {:x1 118.8089599609375, :y1 699.8822021484375, :x2 1009.9970092773438, :y2 745.7259521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 336.17327880859375, :y1 699.8822021484375, :x2 1009.9970092773438, :y2 721.8822021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.8089599609375, :y1 723.7259521484375, :x2 163.3805694580078, :y2 745.7259521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "Another widely-used feature is calledlazy allocation, which has twoparts."}, :properties {:color "purple"}} {:id #uuid "627e03d4-e15a-428f-a359-87b3dc10da70", :page 47, :position {:bounding {:x1 118.8030014038086, :y1 723.7259521484375, :x2 1009.9979858398438, :y2 769.5712890625, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 163.366455078125, :y1 723.7259521484375, :x2 1009.9979858398438, :y2 745.7259521484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.8030014038086, :y1 747.5712890625, :x2 426.96923065185547, :y2 769.5712890625, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " First, when an application callssbrk, the kernel grows the address space, but marks the newaddresses as not valid in the page table."}, :properties {:color "green"}} {:id #uuid "627e03f6-cb66-49f5-a32b-e54b3ac0fa83", :page 47, :position {:bounding {:x1 118.81241607666016, :y1 747.5712890625, :x2 891.1624755859375, :y2 793.3978271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 431.7436218261719, :y1 747.5712890625, :x2 891.1624755859375, :y2 769.5712890625, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.81241607666016, :y1 771.3978271484375, :x2 638.0327529907227, :y2 793.3978271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "Second, on a page fault on one of those new addresses, thekernel allocates physical memory and maps it into the page table."}, :properties {:color "purple"}} {:id #uuid "627e0775-b6d3-417d-8847-0d18d5aaee28", :page 47, :position {:bounding {:x1 -0.011024504899978638, :y1 771.3978271484375, :x2 1009.9725570380688, :y2 841.0853271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 643.0050659179688, :y1 771.3978271484375, :x2 891.164794921875, :y2 793.3978271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011024504899978638, :y1 795.1947021484375, :x2 1009.9725570380688, :y2 818.2884521484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80680084228516, :y1 819.0853271484375, :x2 328.4718704223633, :y2 841.0853271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "Since applications often ask formore memory than they need, lazy allocation is a win: the kernel allocates memory only when theapplication actually uses it"}, :properties {:color "yellow"}} {:id #uuid "627e07ce-cdd6-4aab-98e9-f210300ed913", :page 47, :position {:bounding {:x1 147.7947235107422, :y1 874.5499267578125, :x2 764.6355590820312, :y2 896.5499267578125, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 147.7947235107422, :y1 874.5499267578125, :x2 764.6355590820312, :y2 896.5499267578125, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "Yet another widely-used feature that exploits page faults ispaging from disk"}, :properties {:color "yellow"}} {:id #uuid "627e0809-3601-46dd-b5c7-50e28c7b95f8", :page 47, :position {:bounding {:x1 -0.01102757453918457, :y1 874.5499267578125, :x2 1009.9749343395233, :y2 944.2415771484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 770.0509643554688, :y1 874.5499267578125, :x2 891.1815185546875, :y2 896.5499267578125, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.01102757453918457, :y1 898.3509521484375, :x2 1009.9749343395233, :y2 921.4447021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80702209472656, :y1 922.2415771484375, :x2 639.5483551025391, :y2 944.2415771484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " If applicationsneed more memory than the available physical RAM, the kernel can evict some pages: write themto a storage device such as a disk and mark their PTEs as not valid"}, :properties {:color "yellow"}} {:id #uuid "627e0890-8767-4e26-99c1-99700fea55b3", :page 47, :position {:bounding {:x1 118.80406951904297, :y1 922.2415771484375, :x2 891.1589965820312, :y2 968.0853271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 644.3819580078125, :y1 922.2415771484375, :x2 891.1589965820312, :y2 944.2415771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80406951904297, :y1 946.0853271484375, :x2 563.088981628418, :y2 968.0853271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " If an application reads or writesan evicted page, the CPU will experience a page fault."}, :properties {:color "blue"}} {:id #uuid "627e08ad-7300-4dab-97c1-5e9a0204e8a4", :page 47, :position {:bounding {:x1 -0.011030822992324829, :y1 946.0853271484375, :x2 1009.9714520871639, :y2 1039.6009521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 567.8826293945312, :y1 946.0853271484375, :x2 890.8309936523438, :y2 968.0853271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011030822992324829, :y1 969.8673706054688, :x2 1009.9714520871639, :y2 992.9611206054688, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011029712855815887, :y1 993.7103271484375, :x2 1009.9709649160504, :y2 1016.8040771484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80572509765625, :y1 1017.6009521484375, :x2 428.3599853515625, :y2 1039.6009521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "The kernel can then inspect the faultingaddress. If the address belongs to a page that is on disk, the kernel allocates a page of physicalmemory, reads the page from disk to that memory, updates the PTE to be valid and refer to thatmemory, and resumes the application."}, :properties {:color "green"}} {:id #uuid "627e08d6-7930-48e4-9165-d788a980e34a", :page 47, :position {:bounding {:x1 118.80738830566406, :y1 1017.6009521484375, :x2 890.8385009765625, :y2 1063.4447021484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 428.345458984375, :y1 1017.6009521484375, :x2 890.8385009765625, :y2 1039.6009521484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80738830566406, :y1 1041.4447021484375, :x2 228.04684448242188, :y2 1063.4447021484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text " To make room for the page, the kernel may have to evictanother page."}, :properties {:color "red"}} {:id #uuid "627e0904-424a-4296-9693-8e6eb0015454", :page 47, :position {:bounding {:x1 118.80701446533203, :y1 1041.4447021484375, :x2 890.8465881347656, :y2 1087.2884521484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 232.63296508789062, :y1 1041.4447021484375, :x2 890.8465881347656, :y2 1063.4447021484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80701446533203, :y1 1065.2884521484375, :x2 274.8590774536133, :y2 1087.2884521484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 47}, :content {:text "This feature requires no changes to applications, and works well if applications havelocality of reference"}, :properties {:color "yellow"}} {:id #uuid "627e093a-d901-49bf-800f-59158b67b1c7", :page 48, :position {:bounding {:x1 118.8100814819336, :y1 113.28594970703125, :x2 315.8254623413086, :y2 145.28594970703125, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 118.8100814819336, :y1 113.28594970703125, :x2 315.8254623413086, :y2 145.28594970703125, :width 1010.0000000000002, :height 1307.058823529412}), :page 48}, :content {:text "4.7    Real world"}, :properties {:color "yellow"}} {:id #uuid "627e09cf-5f49-4095-a0da-a042b27e2dd0", :page 48, :position {:bounding {:x1 118.8072509765625, :y1 164.6639404296875, :x2 891.1611938476562, :y2 210.49237060546875, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 118.8072509765625, :y1 164.6639404296875, :x2 891.1611938476562, :y2 186.6639404296875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80853271484375, :y1 188.49237060546875, :x2 681.8818969726562, :y2 210.49237060546875, :width 1010.0000000000002, :height 1307.058823529412}), :page 48}, :content {:text "The need for special trampoline pages could be eliminated if kernel memory were mapped into ev-ery process’s user page table (with appropriate PTE permission flags)."}, :properties {:color "yellow"}} {:id #uuid "627e0a2b-f166-485f-8a67-8608a9ff47c5", :page 48, :position {:bounding {:x1 118.80241394042969, :y1 188.49237060546875, :x2 890.8345336914062, :y2 234.3353271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 681.8675537109375, :y1 188.49237060546875, :x2 890.8345336914062, :y2 210.49237060546875, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80241394042969, :y1 212.3353271484375, :x2 735.3134002685547, :y2 234.3353271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 48}, :content {:text " That would also eliminatethe need for a page table switch when trapping from user space into the kerne"}, :properties {:color "blue"}} {:id #uuid "627e0a3e-607e-40f6-8e12-8bed1f69ae64", :page 48, :position {:bounding {:x1 -0.011029697954654694, :y1 212.3353271484375, :x2 1009.9849419817328, :y2 282.0228271484375, :width 1010.0000000000002, :height 1307.058823529412}, :rects ({:x1 748.8703002929688, :y1 212.3353271484375, :x2 890.8350830078125, :y2 234.3353271484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 -0.011029697954654694, :y1 236.1322021484375, :x2 1009.9849419817328, :y2 259.2259521484375, :width 1010.0000000000002, :height 1307.058823529412} {:x1 118.80046844482422, :y1 260.0228271484375, :x2 774.0555953979492, :y2 282.0228271484375, :width 1010.0000000000002, :height 1307.058823529412}), :page 48}, :content {:text "That in turn wouldallow system call implementations in the kernel to take advantage of the current process’s usermemory being mapped, allowing kernel code to directly dereference user pointers"}, :properties {:color "purple"}} {:id #uuid "628062a0-f5d8-4387-99cb-e0a515685ca2", :page 48, :position {:bounding {:x1 119.98995971679688, :y1 262.6118469238281, :x2 900.0068969726562, :y2 308.6899719238281, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 791.9190673828125, :y1 262.6118469238281, :x2 900.0068969726562, :y2 284.6118469238281, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98995971679688, :y1 286.6899719238281, :x2 576.9869995117188, :y2 308.6899719238281, :width 1019.9999999999999, :height 1319.9999999999998}), :page 48}, :content {:text "Many operat-ing systems have used these ideas to increase efficiency"}, :properties {:color "yellow"}} {:id #uuid "628062df-079c-4e1d-91fb-678b0f57271e", :page 48, :position {:bounding {:x1 582.0342407226562, :y1 286.6899719238281, :x2 813.9071655273438, :y2 308.6899719238281, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 582.0342407226562, :y1 286.6899719238281, :x2 813.9071655273438, :y2 308.6899719238281, :width 1019.9999999999999, :height 1319.9999999999998}), :page 48}, :content {:text " Xv6 avoids them in order to "}, :properties {:color "blue"}} {:id #uuid "628062f3-ff0b-46fa-8c7d-87430bee9066", :page 48, :position {:bounding {:x1 119.99728393554688, :y1 286.6899719238281, :x2 899.9962158203125, :y2 332.7524719238281, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 813.892822265625, :y1 286.6899719238281, :x2 899.9962158203125, :y2 308.6899719238281, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99728393554688, :y1 310.7524719238281, :x2 736.4200134277344, :y2 332.7524719238281, :width 1019.9999999999999, :height 1319.9999999999998}), :page 48}, :content {:text "reduce thechances of security bugs in the kernel due to inadvertent use of user pointers,"}, :properties {:color "purple"}} {:id #uuid "62806389-0d54-4327-b4a5-4f25edeac394", :page 48, :position {:bounding {:x1 119.99710083007812, :y1 310.7524719238281, :x2 900.0078735351562, :y2 356.8314208984375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 796.2637329101562, :y1 310.7524719238281, :x2 900.0078735351562, :y2 332.7524719238281, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99710083007812, :y1 334.8314208984375, :x2 886.9917297363281, :y2 356.8314208984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 48}, :content {:text "reduce somecomplexity that would be required to ensure that user and kernel virtual addresses don’t overlap."}, :properties {:color "yellow"}} {:id #uuid "632178fd-7fde-49d5-a2f3-5068757123e8", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 613.3496704101562, :y2 371.0198669433594, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99822998046875, :y1 232.85154724121094, :x2 297.85015869140625, :y2 287.8515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.990478515625, :y1 316.0198669433594, :x2 613.3496704101562, :y2 371.0198669433594, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "Chapter 1 Operating system interfaces"}, :properties {:color "yellow"}} {:id #uuid "63217948-ff5b-4cd4-9de6-d3d299df7bf6", :page 3, :position {:bounding {:x1 119.98977661132812, :y1 232.908203125, :x2 278.3434143066406, :y2 287.908203125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 119.98977661132812, :y1 232.908203125, :x2 278.3434143066406, :y2 287.908203125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 3}, :content {:text "Contents"}, :properties {:color "yellow"}} {:id #uuid "63217956-7643-4bfa-bd40-fe7a01d57912", :page 21, :position {:bounding {:x1 0, :y1 0, :x2 663.488037109375, :y2 375.91009521484375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99822998046875, :y1 235.2865447998047, :x2 297.85015869140625, :y2 290.28656005859375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98675537109375, :y1 320.91009521484375, :x2 663.488037109375, :y2 375.91009521484375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 21}, :content {:text "Chapter 2 Operating system organization"}, :properties {:color "yellow"}} {:id #uuid "6321bf76-fb5b-4cdf-80be-7632b96090ed", :page 29, :position {:bounding {:x1 0, :y1 0, :x2 318.0918884277344, :y2 372.7084045410156, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.99822998046875, :y1 233.69570922851562, :x2 297.85015869140625, :y2 288.6957092285156, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.98861694335938, :y1 317.7084045410156, :x2 318.0918884277344, :y2 372.7084045410156, :width 1019.9999999999999, :height 1319.9999999999998}), :page 29}, :content {:text "Chapter 3 Page tables"}, :properties {:color "yellow"}} {:id #uuid "6321bf89-2bf5-4bf9-b40a-9755e4293ec3", :page 29, :position {:bounding {:x1 119.9959716796875, :y1 645.4732055664062, :x2 394.5218200683594, :y2 710.3794555664062, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 155.859375, :y1 645.4732055664062, :x2 184.5878143310547, :y2 710.3794555664062, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 119.9959716796875, :y1 664.1450805664062, :x2 394.5218200683594, :y2 702.1450805664062, :width 1019.9999999999999, :height 1319.9999999999998}), :page 29}, :content {:text "3.1 Paging hardware"}, :properties {:color "yellow"}} {:id #uuid "633e3e1f-e2ea-481c-b91f-57085b798ffd", :page 11, :position {:bounding {:x1 70, :y1 96, :x2 992, :y2 737, :width 1019.9999999999999, :height 1319.9999999999998}, :rects (), :page 11}, :content {:text "[:span]", :image 1665023518550}, :properties {:color "red"}} {:id #uuid "633e7f2e-d0bc-41cb-b1bd-08880c930640", :page 9, :position {:bounding {:x1 0, :y1 32, :x2 900.0056762695312, :y2 474.515625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 32, :x2 0, :y2 48, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 428.4375, :x2 900.0056762695312, :y2 450.4375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 452.515625, :x2 619.2070922851562, :y2 474.515625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "The job of an operating system is to share a computer among multiple programs and to provide a more useful set of services than the hardware alone supports. "}, :properties {:color "blue"}} {:id #uuid "633e7f76-bac0-44a0-b688-b1145c8b7d81", :page 9, :position {:bounding {:x1 0, :y1 48, :x2 899.0109252929688, :y2 498.59375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 619.19287109375, :y1 452.515625, :x2 899.0109252929688, :y2 474.515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 476.59375, :x2 384.77801513671875, :y2 498.59375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "An operating system manages and abstracts the low-level hardware"}, :properties {:color "green"}} {:id #uuid "633e7fa3-dd7b-464f-8f2f-e3ca2b00d775", :page 9, :position {:bounding {:x1 0, :y1 80, :x2 898.9952392578125, :y2 546.734375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 502.4300537109375, :y1 500.671875, :x2 898.9952392578125, :y2 522.671875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 524.734375, :x2 686.0614624023438, :y2 546.734375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "An operating system shares the hardware among multiple programs so that they run (or appear to run) at the same time."}, :properties {:color "red"}} {:id #uuid "633e7fb8-4024-4b75-8d3a-d831a4686870", :page 9, :position {:bounding {:x1 0, :y1 96, :x2 900.0010986328125, :y2 570.8125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 691.1005249023438, :y1 524.734375, :x2 900.0010986328125, :y2 546.734375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 548.8125, :x2 866.609619140625, :y2 570.8125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "Finally, operating systems provide controlled ways for programs to interact, so that they can share data or work together."}, :properties {:color "purple"}} {:id #uuid "633e7fd9-331e-4d7f-ae14-55f5fb8db53c", :page 9, :position {:bounding {:x1 149.25, :y1 573.046875, :x2 757.4679565429688, :y2 595.046875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 573.046875, :x2 757.4679565429688, :y2 595.046875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "An operating system provides services to user programs through an interface."}, :properties {:color "blue"}} {:id #uuid "633e8036-e0e8-4cfb-99e9-9fac9af41d78", :page 9, :position {:bounding {:x1 0, :y1 144, :x2 900.0023803710938, :y2 643.203125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 389.4417724609375, :y1 597.125, :x2 900.0023803710938, :y2 619.125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 621.203125, :x2 655.4951782226562, :y2 643.203125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "On the one hand, we would like the interface to be simple and narrow because that makes it easier to get the implementation right."}, :properties {:color "green"}} {:id #uuid "633e8040-e800-443c-926e-31f15fb17c43", :page 9, :position {:bounding {:x1 0, :y1 160, :x2 900.0050659179688, :y2 667.28125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 660.4292602539062, :y1 621.203125, :x2 900.0050659179688, :y2 643.203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 645.28125, :x2 597.4585571289062, :y2 667.28125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "On the other hand, we may be tempted to offer many sophisticated features to applications."}, :properties {:color "purple"}} {:id #uuid "633e806f-200f-4420-ad92-ab030015cb1e", :page 9, :position {:bounding {:x1 0, :y1 176, :x2 900.0067749023438, :y2 691.359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 192, :x2 0, :y2 208, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 602.0968017578125, :y1 645.28125, :x2 899.6756591796875, :y2 667.28125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 669.359375, :x2 900.0067749023438, :y2 691.359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "The trick in resolving this tension is to design interfaces that rely on a few mechanisms that can be combined to provide much generality."}, :properties {:color "yellow"}} {:id #uuid "633e81eb-5cc1-4dd5-bc0d-51e3cc595cb8", :page 9, :position {:bounding {:x1 0, :y1 320, :x2 899.9969482421875, :y2 908.359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 593.0625, :y1 862.28125, :x2 899.9969482421875, :y2 884.28125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 886.359375, :x2 365.4230041503906, :y2 908.359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "kernel, a special program that provides services to running programs."}, :properties {:color "blue"}} {:id #uuid "633e8219-7367-4b6b-9f2d-70b2fe45fbad", :page 9, :position {:bounding {:x1 0, :y1 336, :x2 900.0060424804688, :y2 932.4375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 370.5853576660156, :y1 886.359375, :x2 900.0060424804688, :y2 908.359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 910.4375, :x2 368.86578369140625, :y2 932.4375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "Each running program, called a process, has memory containing instructions, data, and a stack."}, :properties {:color "red"}} {:id #uuid "633e8249-b387-4d9c-9d51-06a4696b8460", :page 9, :position {:bounding {:x1 373.6380310058594, :y1 910.4375, :x2 826.6116333007812, :y2 932.4375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 373.6380310058594, :y1 910.4375, :x2 826.6116333007812, :y2 932.4375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "The instructions implement the program’s computation. "}, :properties {:color "yellow"}} {:id #uuid "633e825f-4b0b-4e57-8e8a-73123707cfe0", :page 9, :position {:bounding {:x1 0, :y1 352, :x2 899.337890625, :y2 956.515625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 826.59716796875, :y1 910.4375, :x2 899.337890625, :y2 932.4375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 934.515625, :x2 501.06134033203125, :y2 956.515625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "The data are the variables on which the computation acts. "}, :properties {:color "blue"}} {:id #uuid "633e8275-935f-4af0-bd1c-85e287f4bb7f", :page 9, :position {:bounding {:x1 501.0474853515625, :y1 934.515625, :x2 894.7989501953125, :y2 956.515625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 501.0474853515625, :y1 934.515625, :x2 894.7989501953125, :y2 956.515625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "The stack organizes the program’s procedure calls"}, :properties {:color "green"}} {:id #uuid "633e82bd-8cd3-483a-91c0-7eaf825100d6", :page 9, :position {:bounding {:x1 0, :y1 400, :x2 900.0188598632812, :y2 1028.890625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 982.8125, :x2 900.0188598632812, :y2 1004.8125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1006.890625, :x2 381.80035400390625, :y2 1028.890625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "When a process needs to invoke a kernel service, it invokes a system call, one of the calls in the operating system’s interface. "}, :properties {:color "yellow"}} {:id #uuid "633e830b-b193-44ec-9847-d06003528762", :page 9, :position {:bounding {:x1 149.25, :y1 1054.40625, :x2 900.006591796875, :y2 1077.203125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 736.09375, :y1 1054.40625, :x2 749.1975708007812, :y2 1069.40625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 1055.203125, :x2 736.096435546875, :y2 1077.203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 749.203125, :y1 1055.203125, :x2 900.006591796875, :y2 1077.203125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 9}, :content {:text "The kernel uses the hardware protection mechanisms provided by a CPU1 to ensure that each"}, :properties {:color "yellow"}} {:id #uuid "633e8326-d961-4320-9dc7-ed55abc5229c", :page 10, :position {:bounding {:x1 120, :y1 325.734375, :x2 659.4158325195312, :y2 347.734375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 325.734375, :x2 659.4158325195312, :y2 347.734375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 10}, :content {:text "process executing in user space can access only its own memory."}, :properties {:color "yellow"}} {:id #uuid "633e83bc-6900-4d9c-aab3-ec08f62a93aa", :page 10, :position {:bounding {:x1 149.25, :y1 423.015625, :x2 864.6106567382812, :y2 445.015625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 423.015625, :x2 864.6106567382812, :y2 445.015625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 10}, :content {:text "The collection of system calls that a kernel provides is the interface that user programs see."}, :properties {:color "blue"}} {:id #uuid "633e844c-2f4e-4b05-bd79-dcb034d36f3a", :page 10, :position {:bounding {:x1 120, :y1 780.734375, :x2 462.9318542480469, :y2 812.734375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 780.734375, :x2 462.9318542480469, :y2 812.734375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 10}, :content {:text "1.1 Processes and memory"}, :properties {:color "blue"}} {:id #uuid "633e84c3-3ed2-4717-b06b-f852c36fe538", :page 10, :position {:bounding {:x1 0, :y1 416, :x2 900.0067749023438, :y2 880.671875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 834.59375, :x2 900.0067749023438, :y2 856.59375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 858.671875, :x2 326.9549255371094, :y2 880.671875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 10}, :content {:text "An xv6 process consists of user-space memory (instructions, data, and stack) and per-process state private to the kernel."}, :properties {:color "blue"}} {:id #uuid "633e84fb-ebf5-4da1-b196-6ec9642acec4", :page 10, :position {:bounding {:x1 149.25, :y1 955.9375, :x2 667.3031616210938, :y2 977.9375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 955.9375, :x2 667.3031616210938, :y2 977.9375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 10}, :content {:text "A process may create a new process using the fork system call."}, :properties {:color "yellow"}} {:id #uuid "633e850c-9eda-487d-8642-c1f39db2f252", :page 10, :position {:bounding {:x1 0, :y1 496, :x2 899.9952392578125, :y2 1026.09375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 496, :x2 0, :y2 512, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 512, :x2 0, :y2 528, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 672.78125, :y1 955.78125, :x2 899.9901123046875, :y2 981.78125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 716.421875, :y1 959.78125, :x2 899.9901123046875, :y2 977.96875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 980.015625, :x2 899.9952392578125, :y2 1002.015625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1004.09375, :x2 272.703125, :y2 1026.09375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 10}, :content {:text "Fork creates a new process, called the child process, with exactly the same memory contents as the calling process, called the parent process."}, :properties {:color "green"}} {:id #uuid "633e8586-4302-4871-a145-5564c75cb2a8", :page 11, :position {:bounding {:x1 0, :y1 512, :x2 900.0068969726562, :y2 1006.25, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 512, :x2 0, :y2 528, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 960.171875, :x2 900.0068969726562, :y2 982.171875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 984.25, :x2 310.76861572265625, :y2 1006.25, :width 1019.9999999999999, :height 1319.9999999999998}), :page 11}, :content {:text "The exit system call causes the calling process to stop executing and to release resources such as memory and open files. "}, :properties {:color "blue"}} {:id #uuid "6344b32d-c924-4a1d-88df-9b5ffa070e15", :page 11, :position {:bounding {:x1 0, :y1 528, :x2 900.0101318359375, :y2 1030.328125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 528, :x2 0, :y2 544, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 310.75457763671875, :y1 984.25, :x2 900.0101318359375, :y2 1006.25, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1008.328125, :x2 325.5013427734375, :y2 1030.328125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 11}, :content {:text "Exit takes an integer status argument, conventionally 0 to indicate success and 1 to indicate failure. "}, :properties {:color "yellow"}} {:id #uuid "6344b371-0ea7-452d-948f-771d7392769e", :page 11, :position {:bounding {:x1 0, :y1 544, :x2 874.4036865234375, :y2 1024.984375, :width 991, :height 1282.4705882352941}, :rects ({:x1 0, :y1 544, :x2 0, :y2 560, :width 991, :height 1282.4705882352941} {:x1 316.2163391113281, :y1 979.59375, :x2 874.4036865234375, :y2 1001.59375, :width 991, :height 1282.4705882352941} {:x1 116.578125, :y1 1002.984375, :x2 792.4741821289062, :y2 1024.984375, :width 991, :height 1282.4705882352941}), :page 11}, :content {:text "The wait system call returns the PID of an exited (or killed) child of the current process and copies the exit status of the child to the address passed to wait"}, :properties {:color "green"}} {:id #uuid "6344b37f-6612-45fc-bffa-77a723666404", :page 11, :position {:bounding {:x1 0, :y1 560, :x2 874.40478515625, :y2 1048.375, :width 991, :height 1282.4705882352941}, :rects ({:x1 0, :y1 560, :x2 0, :y2 576, :width 991, :height 1282.4705882352941} {:x1 797.3352661132812, :y1 1002.984375, :x2 874.40478515625, :y2 1024.984375, :width 991, :height 1282.4705882352941} {:x1 116.578125, :y1 1026.375, :x2 601.4537963867188, :y2 1048.375, :width 991, :height 1282.4705882352941}), :page 11}, :content {:text " if none of the caller’s children has exited, wait waits for one to do so. "}, :properties {:color "red"}} {:id #uuid "6344b3b1-09ec-43b7-8109-46d86d92fb49", :page 11, :position {:bounding {:x1 0, :y1 576, :x2 874.4154052734375, :y2 1071.765625, :width 991, :height 1282.4705882352941}, :rects ({:x1 0, :y1 576, :x2 0, :y2 592, :width 991, :height 1282.4705882352941} {:x1 601.43896484375, :y1 1026.375, :x2 874.4154052734375, :y2 1048.375, :width 991, :height 1282.4705882352941} {:x1 116.578125, :y1 1049.765625, :x2 294.9777526855469, :y2 1071.765625, :width 991, :height 1282.4705882352941}), :page 11}, :content {:text "If the caller has no children, wait immediately returns -1"}, :properties {:color "yellow"}} {:id #uuid "6344b416-6a25-460e-8488-f0946afdb74f", :page 11, :position {:bounding {:x1 0, :y1 592, :x2 874.4014282226562, :y2 1095.171875, :width 991, :height 1282.4705882352941}, :rects ({:x1 0, :y1 592, :x2 0, :y2 608, :width 991, :height 1282.4705882352941} {:x1 299.97418212890625, :y1 1049.765625, :x2 874.4014282226562, :y2 1071.765625, :width 991, :height 1282.4705882352941} {:x1 116.578125, :y1 1073.171875, :x2 247.15625, :y2 1095.171875, :width 991, :height 1282.4705882352941}), :page 11}, :content {:text " If the parent doesn’t care about the exit status of a child, it can pass a 0 address to wait."}, :properties {:color "purple"}} {:id #uuid "6344b491-d49e-40df-a4ca-d10004f85459", :page 12, :position {:bounding {:x1 0, :y1 80, :x2 874.4111938476562, :y2 311.546875, :width 991, :height 1282.4705882352941}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 991, :height 1282.4705882352941} {:x1 116.578125, :y1 266.15625, :x2 874.4111938476562, :y2 288.15625, :width 991, :height 1282.4705882352941} {:x1 116.578125, :y1 289.546875, :x2 544.1892700195312, :y2 311.546875, :width 991, :height 1282.4705882352941}), :page 12}, :content {:text "Although the child has the same memory contents as the parent initially, the parent and child are executing with different memory and different registers:"}, :properties {:color "yellow"}} {:id #uuid "6344b4c1-ec2a-426a-a5a1-7dc08eff1cab", :page 12, :position {:bounding {:x1 0, :y1 96, :x2 874.3997192382812, :y2 334.9375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 990.9999999999999, :height 1282.470588235294} {:x1 557.8438720703125, :y1 289.546875, :x2 874.3997192382812, :y2 311.546875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 312.9375, :x2 190.50970458984375, :y2 334.9375, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "hanging a variable in one does not affect the other."}, :properties {:color "blue"}} {:id #uuid "6344b524-f085-4065-8a1f-234484a952f2", :page 12, :position {:bounding {:x1 0, :y1 144, :x2 874.40869140625, :y2 405.734375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 360.34375, :x2 874.40869140625, :y2 382.34375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 383.734375, :x2 397.69610595703125, :y2 405.734375, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "The exec system call replaces the calling process’s memory with a new memory image loaded from a file stored in the file system. "}, :properties {:color "yellow"}} {:id #uuid "6344b565-db66-4057-bdea-7518a42abb67", :page 12, :position {:bounding {:x1 0, :y1 160, :x2 874.0891723632812, :y2 429.125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 990.9999999999999, :height 1282.470588235294} {:x1 397.6816711425781, :y1 383.734375, :x2 874.0891723632812, :y2 405.734375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 407.125, :x2 775.1202392578125, :y2 429.125, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "The file must have a particular format, which specifies which part of the file holds instructions, which part is data, at which instruction to start, etc. "}, :properties {:color "blue"}} {:id #uuid "6344b585-5dba-4f26-ab06-7f8c455c91a6", :page 12, :position {:bounding {:x1 0, :y1 176, :x2 874.4093017578125, :y2 452.515625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 990.9999999999999, :height 1282.470588235294} {:x1 775.10595703125, :y1 407.125, :x2 874.4093017578125, :y2 429.125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 430.515625, :x2 556.0079956054688, :y2 452.515625, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "xv6 uses the ELF format, which Chapter 3 discusses in more detail. "}, :properties {:color "green"}} {:id #uuid "6344b5e7-e6ae-42d4-90fa-b3855999e5f2", :page 12, :position {:bounding {:x1 0, :y1 192, :x2 874.4121704101562, :y2 499.296875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 208, :x2 0, :y2 224, :width 990.9999999999999, :height 1282.470588235294} {:x1 555.9933471679688, :y1 430.515625, :x2 874.4121704101562, :y2 452.515625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 453.90625, :x2 874.401611328125, :y2 475.90625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 477.296875, :x2 384.93621826171875, :y2 499.296875, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "When exec succeeds, it does not return to the calling program; instead, the instructions loaded from the file start executing at the entry point declared in the ELF header. "}, :properties {:color "red"}} {:id #uuid "6344b664-8a66-4310-8c87-6a56d8c922d8", :page 12, :position {:bounding {:x1 0, :y1 224, :x2 874.4143676757812, :y2 522.6875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 990.9999999999999, :height 1282.470588235294} {:x1 384.9375, :y1 477.078125, :x2 874.4143676757812, :y2 502.078125, :width 990.9999999999999, :height 1282.470588235294} {:x1 427.328125, :y1 481.078125, :x2 874.4143676757812, :y2 498.75, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 500.6875, :x2 460.2598571777344, :y2 522.6875, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "Exec takes two arguments: the name of the file containing the executable and an array of string arguments."}, :properties {:color "purple"}} {:id #uuid "6344b837-d278-4562-8b7c-2a601dd2f8fe", :page 12, :position {:bounding {:x1 0, :y1 256, :x2 408.58477783203125, :y2 689.96875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 272, :x2 0, :y2 288, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 288, :x2 0, :y2 304, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 304, :x2 0, :y2 320, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 320, :x2 0, :y2 336, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 533.328125, :x2 302.5970764160156, :y2 558.328125, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 577.21875, :x2 334.3855285644531, :y2 602.21875, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 581.21875, :x2 334.3855285644531, :y2 598.890625, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 599.15625, :x2 344.9880065917969, :y2 624.15625, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 603.15625, :x2 344.9880065917969, :y2 620.828125, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 621.09375, :x2 281.4023132324219, :y2 646.09375, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 625.09375, :x2 281.4023132324219, :y2 642.765625, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 643.03125, :x2 408.58477783203125, :y2 668.03125, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 647.03125, :x2 408.58477783203125, :y2 664.703125, :width 990.9999999999999, :height 1282.470588235294} {:x1 154.203125, :y1 664.96875, :x2 397.9826354980469, :y2 689.96875, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "char *argv[3]; argv[0] = \"echo\"; argv[1] = \"hello\"; argv[2] = 0; exec(\"/bin/echo\", argv); printf(\"exec error\\n\");"}, :properties {:color "yellow"}} {:id #uuid "6344b8c0-1f85-462c-bc5d-ec086896dc2d", :page 12, :position {:bounding {:x1 0, :y1 352, :x2 874.3988037109375, :y2 745.515625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 700.125, :x2 874.3988037109375, :y2 722.125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 723.515625, :x2 399.4525451660156, :y2 745.515625, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "This fragment replaces the calling program with an instance of the program /bin/echo running with the argument list echo hello. "}, :properties {:color "blue"}} {:id #uuid "6344b8f2-f8f3-4673-ad85-f7587dffeb43", :page 12, :position {:bounding {:x1 0, :y1 368, :x2 874.4138793945312, :y2 768.90625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 990.9999999999999, :height 1282.470588235294} {:x1 399.43841552734375, :y1 723.515625, :x2 874.4138793945312, :y2 745.515625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 746.90625, :x2 500.4881896972656, :y2 768.90625, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "Most programs ignore the first element of the argument array, which is conventionally the name of the program."}, :properties {:color "green"}} {:id #uuid "6344b974-f0d1-4c49-9e19-e71681ca1448", :page 12, :position {:bounding {:x1 0, :y1 400, :x2 874.075439453125, :y2 816.3125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 990.9999999999999, :height 1282.470588235294} {:x1 705.1610107421875, :y1 770.90625, :x2 874.075439453125, :y2 792.90625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 794.3125, :x2 257.6253967285156, :y2 816.3125, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "The main structure of the shell is simple;"}, :properties {:color "yellow"}} {:id #uuid "6344b988-259d-45ad-8b23-c6cff09c6205", :page 12, :position {:bounding {:x1 0, :y1 416, :x2 874.0991821289062, :y2 842.484375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 990.9999999999999, :height 1282.470588235294} {:x1 457.0365905761719, :y1 794.3125, :x2 874.0991821289062, :y2 816.3125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 817.484375, :x2 185.41856384277344, :y2 842.484375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 821.484375, :x2 180.18283081054688, :y2 839.15625, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "The main loop reads a line of input from the user with getcmd."}, :properties {:color "blue"}} {:id #uuid "6344b9b2-37a8-46ac-bd67-0c6446a01e91", :page 12, :position {:bounding {:x1 190.314453125, :y1 817.703125, :x2 691.0343627929688, :y2 839.703125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 190.314453125, :y1 817.703125, :x2 691.0343627929688, :y2 839.703125, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "Then it calls fork, which creates a copy of the shell process. "}, :properties {:color "blue"}} {:id #uuid "6344b9e4-ebee-467d-817d-1f77a01b5cbd", :page 12, :position {:bounding {:x1 0, :y1 432, :x2 874.9375, :y2 863.09375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 990.9999999999999, :height 1282.470588235294} {:x1 691.0197143554688, :y1 817.703125, :x2 874.9375, :y2 839.703125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 841.09375, :x2 387.6338806152344, :y2 863.09375, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "The parent calls wait, while the child runs the command. "}, :properties {:color "green"}} {:id #uuid "6344baaf-cd32-4d3e-932d-8a39c3806a96", :page 12, :position {:bounding {:x1 0, :y1 448, :x2 874.4200439453125, :y2 959.4375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 464, :x2 0, :y2 480, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 480, :x2 0, :y2 496, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 496, :x2 0, :y2 512, :width 990.9999999999999, :height 1282.470588235294} {:x1 387.6196594238281, :y1 841.09375, :x2 874.4088134765625, :y2 866.09375, :width 990.9999999999999, :height 1282.470588235294} {:x1 665.53125, :y1 844.875, :x2 874.4088134765625, :y2 862.546875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 864.265625, :x2 739.5439453125, :y2 889.265625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 868.265625, :x2 874.4081420898438, :y2 888.265625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 887.875, :x2 874.4200439453125, :y2 912.875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 889.875, :x2 594.890625, :y2 909.234375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 911.265625, :x2 874.3985595703125, :y2 933.265625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 934.4375, :x2 723.984375, :y2 959.4375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 938.4375, :x2 612.265625, :y2 957.796875, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "For example, if the user had typed “echo hello” to the shell, runcmd would have been called with “echo hello” as the argument. runcmd (user/sh.c:58) runs the actual command. For “echo hello”, it would call exec (user/sh.c:78). If exec succeeds then the child will execute instructions from echo instead of runcmd. At some point echo will call exit, which will cause the parent to return from wait in main (user/sh.c:145)."}, :properties {:color "yellow"}} {:id #uuid "6344bb20-11ac-46df-8596-c0433ad0b5ff", :page 12, :position {:bounding {:x1 0, :y1 544, :x2 874.4285278320312, :y2 1074.234375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 544, :x2 0, :y2 560, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 560, :x2 0, :y2 576, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 576, :x2 0, :y2 592, :width 990.9999999999999, :height 1282.470588235294} {:x1 681.4273071289062, :y1 982.0625, :x2 874.0822143554688, :y2 1004.0625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1005.453125, :x2 874.4285278320312, :y2 1027.453125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1028.84375, :x2 874.415283203125, :y2 1050.84375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1052.234375, :x2 386.2723083496094, :y2 1074.234375, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "o avoid the wastefulness of creating a duplicate process and then immediately replacing it (with exec), operating kernels optimize the implementation of fork for this use case by using virtual memory techniques such as copy-on-write (see Section 4.6)."}, :properties {:color "yellow"}} {:id #uuid "6344bb94-7427-44c0-b1ad-632193634bb0", :page 12, :position {:bounding {:x1 145.015625, :y1 1076.25, :x2 528.2830200195312, :y2 1098.25, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 145.015625, :y1 1076.25, :x2 528.2830200195312, :y2 1098.25, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "Xv6 allocates most user-space memory implicitly"}, :properties {:color "yellow"}} {:id #uuid "6344bba2-69ed-4a3a-aec1-05e2e18657f4", :page 12, :position {:bounding {:x1 0, :y1 608, :x2 874.4108276367188, :y2 1121.640625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 608, :x2 0, :y2 624, :width 990.9999999999999, :height 1282.470588235294} {:x1 537.8125, :y1 1076.03125, :x2 874.4108276367188, :y2 1101.03125, :width 990.9999999999999, :height 1282.470588235294} {:x1 580.203125, :y1 1080.03125, :x2 874.4108276367188, :y2 1099.390625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1099.640625, :x2 398.7351379394531, :y2 1121.640625, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "fork allocates the memory required for the child’s copy of the parent’s memory"}, :properties {:color "blue"}} {:id #uuid "6344bbfb-849c-449a-a0d6-df5ffa4920d6", :page 12, :position {:bounding {:x1 445.109375, :y1 1099.421875, :x2 874.4135131835938, :y2 1124.421875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 445.109375, :y1 1099.421875, :x2 874.4135131835938, :y2 1124.421875, :width 990.9999999999999, :height 1282.470588235294} {:x1 487.5, :y1 1103.421875, :x2 493.5676574707031, :y2 1121.09375, :width 990.9999999999999, :height 1282.470588235294}), :page 12}, :content {:text "exec allocates enough memory to hold the executable"}, :properties {:color "yellow"}} {:id #uuid "6344bc71-f58e-41e9-b272-4b963619ea28", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 874.41259765625, :y2 163.484375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 990.9999999999999, :height 1282.470588235294} {:x1 148.650146484375, :y1 118.09375, :x2 874.41259765625, :y2 143.09375, :width 990.9999999999999, :height 1282.470588235294} {:x1 628.671875, :y1 120.09375, :x2 874.41259765625, :y2 139.453125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 141.484375, :x2 381.5625, :y2 163.484375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "A process that needs more memory at run-time (perhaps for malloc) can call sbrk(n) to grow its data memory by n bytes; "}, :properties {:color "yellow"}} {:id #uuid "6344bd02-d444-4268-a907-5e23b2fb0860", :page 13, :position {:bounding {:x1 381.03125, :y1 141.28125, :x2 736.7588500976562, :y2 166.28125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 381.03125, :y1 141.28125, :x2 736.7588500976562, :y2 166.28125, :width 990.9999999999999, :height 1282.470588235294} {:x1 423.421875, :y1 145.28125, :x2 428.2789611816406, :y2 162.953125, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "sbrk returns the location of the new memory."}, :properties {:color "blue"}} {:id #uuid "6344bd45-3f7b-4539-8cb2-459b1ab42188", :page 13, :position {:bounding {:x1 116.578125, :y1 206.21875, :x2 463.5047302246094, :y2 237.21875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 116.578125, :y1 206.21875, :x2 463.5047302246094, :y2 237.21875, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "1.2 I/O and File descriptors"}, :properties {:color "blue"}} {:id #uuid "6344bda5-2a5f-4548-bb0b-dc20618488a1", :page 13, :position {:bounding {:x1 0, :y1 48, :x2 874.4053344726562, :y2 303.859375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 258.46875, :x2 874.4053344726562, :y2 280.46875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 281.859375, :x2 261.56573486328125, :y2 303.859375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "A file descriptor is a small integer representing a kernel-managed object that a process may read from or write to. A"}, :properties {:color "yellow"}} {:id #uuid "6344be27-4e01-4056-8a45-a816c0da63a8", :page 13, :position {:bounding {:x1 0, :y1 64, :x2 872.3440246582031, :y2 327.25, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 990.9999999999999, :height 1282.470588235294} {:x1 261.5506896972656, :y1 281.859375, :x2 872.3440246582031, :y2 303.859375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 305.25, :x2 625.0097045898438, :y2 327.25, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text " process may obtain a file descriptor by opening a file, directory, or device, or by creating a pipe, or by duplicating an existing descriptor."}, :properties {:color "blue"}} {:id #uuid "6344beb2-7e7e-44f8-8d72-1c8cf57dbca5", :page 13, :position {:bounding {:x1 0, :y1 80, :x2 874.3995361328125, :y2 350.640625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 990.9999999999999, :height 1282.470588235294} {:x1 624.9944458007812, :y1 305.25, :x2 874.3995361328125, :y2 327.25, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 328.640625, :x2 505.07757568359375, :y2 350.640625, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text " For simplicity we’ll often refer to the object a file descriptor refers to as a “file”; "}, :properties {:color "green"}} {:id #uuid "6344bee3-e454-406f-a780-272e1ddf19ce", :page 13, :position {:bounding {:x1 0, :y1 96, :x2 874.41015625, :y2 374.03125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 990.9999999999999, :height 1282.470588235294} {:x1 510.10760498046875, :y1 328.640625, :x2 874.41015625, :y2 350.640625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 352.03125, :x2 830.194580078125, :y2 374.03125, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "he file descriptor interface abstracts away the differences between files, pipes, and devices, making them all look like streams of bytes."}, :properties {:color "red"}} {:id #uuid "6344bf03-34f3-4f2d-8fda-8572e10356d3", :page 13, :position {:bounding {:x1 0, :y1 112, :x2 874.40380859375, :y2 397.421875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 990.9999999999999, :height 1282.470588235294} {:x1 835.242431640625, :y1 352.03125, :x2 874.40380859375, :y2 374.03125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 375.421875, :x2 361.75, :y2 397.421875, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "We’ll refer to input and output as I/O."}, :properties {:color "yellow"}} {:id #uuid "6344c146-eed3-479f-917b-1c04891a471b", :page 13, :position {:bounding {:x1 0, :y1 144, :x2 874.4090576171875, :y2 445.109375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 399.71875, :x2 874.4090576171875, :y2 421.71875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 423.109375, :x2 636.3253784179688, :y2 445.109375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "Internally, the xv6 kernel uses the file descriptor as an index into a per-process table, so that every process has a private space of file descriptors starting at zero. "}, :properties {:color "yellow"}} {:id #uuid "6344c1a1-db97-46e3-a438-c2f53e508211", :page 13, :position {:bounding {:x1 0, :y1 160, :x2 874.4073486328125, :y2 491.890625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 176, :x2 0, :y2 192, :width 990.9999999999999, :height 1282.470588235294} {:x1 636.3115844726562, :y1 423.109375, :x2 874.4073486328125, :y2 445.109375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 446.5, :x2 874.4039306640625, :y2 468.5, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 469.890625, :x2 575.2911987304688, :y2 491.890625, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "By convention, a process reads from file descriptor 0 (standard input), writes output to file descriptor 1 (standard output), and writes error messages to file descriptor 2 (standard error)"}, :properties {:color "green"}} {:id #uuid "6344c21d-b4ee-4391-a24e-8f68f742b5ff", :page 13, :position {:bounding {:x1 0, :y1 208, :x2 874.0904541015625, :y2 538.671875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 208, :x2 0, :y2 224, :width 990.9999999999999, :height 1282.470588235294} {:x1 546.1787109375, :y1 493.28125, :x2 874.0904541015625, :y2 515.28125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 516.671875, :x2 796.0670776367188, :y2 538.671875, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "The shell ensures that it always has three file descriptors open (user/sh.c:151), which are by default file descriptors for the console."}, :properties {:color "red"}} {:id #uuid "6344c260-06d9-43b4-bd80-e55e334ea5b4", :page 13, :position {:bounding {:x1 0, :y1 240, :x2 874.4129638671875, :y2 586.34375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 540.953125, :x2 874.4129638671875, :y2 565.953125, :width 990.9999999999999, :height 1282.470588235294} {:x1 175.109375, :y1 542.953125, :x2 874.4129638671875, :y2 562.3125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 564.34375, :x2 208.5019989013672, :y2 586.34375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "The read and write system calls read bytes from and write bytes to open files named by file descriptors."}, :properties {:color "yellow"}} {:id #uuid "6344c2c4-70a3-43ac-96b9-5310689f6e25", :page 13, :position {:bounding {:x1 0, :y1 256, :x2 874.41064453125, :y2 609.734375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 990.9999999999999, :height 1282.470588235294} {:x1 213.11328125, :y1 564.34375, :x2 874.41064453125, :y2 589.34375, :width 990.9999999999999, :height 1282.470588235294} {:x1 275.703125, :y1 566.34375, :x2 874.41064453125, :y2 585.703125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 587.734375, :x2 524.049560546875, :y2 609.734375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "The call read(fd, buf, n) reads at most n bytes from the file descriptor fd, copies them into buf, and returns the number of bytes read."}, :properties {:color "blue"}} {:id #uuid "6344c318-cab2-42bd-8745-c15e8d864017", :page 13, :position {:bounding {:x1 0, :y1 272, :x2 874.4164428710938, :y2 633.125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 990.9999999999999, :height 1282.470588235294} {:x1 524.03564453125, :y1 587.734375, :x2 874.4164428710938, :y2 609.734375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 611.125, :x2 310.203125, :y2 633.125, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text " Each file descriptor that refers to a file has an offset associated with it. "}, :properties {:color "green"}} {:id #uuid "6344c33b-b882-4633-ab71-e67e0e1ad2e3", :page 13, :position {:bounding {:x1 0, :y1 288, :x2 874.4149169921875, :y2 656.515625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 990.9999999999999, :height 1282.470588235294} {:x1 309.84375, :y1 610.921875, :x2 874.4149169921875, :y2 635.921875, :width 990.9999999999999, :height 1282.470588235294} {:x1 352.234375, :y1 614.921875, :x2 874.4149169921875, :y2 634.28125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 634.515625, :x2 336.9113464355469, :y2 656.515625, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "Read reads data from the current file offset and then advances that offset by the number of bytes read:"}, :properties {:color "red"}} {:id #uuid "6344c3e8-7369-4f05-9526-e7cdc45aa5ff", :page 13, :position {:bounding {:x1 0, :y1 304, :x2 874.414306640625, :y2 679.921875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 990.9999999999999, :height 1282.470588235294} {:x1 341.7066650390625, :y1 634.515625, :x2 874.414306640625, :y2 656.515625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 657.921875, :x2 257.9385681152344, :y2 679.921875, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "a subsequent read will return the bytes following the ones returned by the first read. "}, :properties {:color "purple"}} {:id #uuid "6344c44f-79cc-46d7-9389-ad9e875a9be9", :page 13, :position {:bounding {:x1 0, :y1 320, :x2 874.4010620117188, :y2 703.3125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 990.9999999999999, :height 1282.470588235294} {:x1 257.9244689941406, :y1 657.921875, :x2 874.4010620117188, :y2 679.921875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 681.3125, :x2 174.66244506835938, :y2 703.3125, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "When there are no more bytes to read, read returns zero to indicate the end of the file."}, :properties {:color "green"}} {:id #uuid "6344c48d-f39f-490c-9ae2-f0a98b62b4ee", :page 13, :position {:bounding {:x1 0, :y1 352, :x2 874.4098510742188, :y2 750.984375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 705.59375, :x2 874.4098510742188, :y2 730.59375, :width 990.9999999999999, :height 1282.470588235294} {:x1 208.265625, :y1 707.59375, :x2 874.4098510742188, :y2 726.953125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 728.984375, :x2 314.620361328125, :y2 750.984375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "The call write(fd, buf, n) writes n bytes from buf to the file descriptor fd and returns the number of bytes written. "}, :properties {:color "yellow"}} {:id #uuid "6344c50b-a516-4b7a-8785-fd50a502c59f", :page 13, :position {:bounding {:x1 314.6057434082031, :y1 728.984375, :x2 782.3383178710938, :y2 750.984375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 314.6057434082031, :y1 728.984375, :x2 782.3383178710938, :y2 750.984375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "Fewer than n bytes are written only when an error occurs."}, :properties {:color "blue"}} {:id #uuid "6344c555-b4d5-4865-bb02-70d92fb3fb2b", :page 13, :position {:bounding {:x1 0, :y1 384, :x2 874.40966796875, :y2 797.765625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 752.15625, :x2 874.40966796875, :y2 777.15625, :width 990.9999999999999, :height 1282.470588235294} {:x1 169.578125, :y1 756.15625, :x2 874.40966796875, :y2 775.515625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 775.765625, :x2 173.7416229248047, :y2 797.765625, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "write writes data at the current file offset and then advances that offset by the number of bytes written:"}, :properties {:color "purple"}} {:id #uuid "6344c573-fdcd-4312-98d5-f6ccd7cbb45c", :page 13, :position {:bounding {:x1 178.65444946289062, :y1 775.765625, :x2 591.7166137695312, :y2 797.765625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 178.65444946289062, :y1 775.765625, :x2 591.7166137695312, :y2 797.765625, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "each write picks up where the previous one left off."}, :properties {:color "yellow"}} {:id #uuid "6344c636-d276-4b36-8ffd-6c03a0b50ca9", :page 13, :position {:bounding {:x1 0, :y1 416, :x2 874.4173583984375, :y2 845.4375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 800.046875, :x2 874.4173583984375, :y2 822.046875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 823.4375, :x2 464.66510009765625, :y2 845.4375, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "The following program fragment (which forms the essence of the program cat) copies data from its standard input to its standard output. "}, :properties {:color "yellow"}} {:id #uuid "6344c794-a6e4-447a-a7dc-66fdc2ee7f06", :page 13, :position {:bounding {:x1 0, :y1 432, :x2 874.4025268554688, :y2 868.828125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 990.9999999999999, :height 1282.470588235294} {:x1 469.4710388183594, :y1 823.4375, :x2 874.4025268554688, :y2 845.4375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 846.828125, :x2 157.9751739501953, :y2 868.828125, :width 990.9999999999999, :height 1282.470588235294}), :page 13}, :content {:text "f an error occurs, it writes a message to the standard error."}, :properties {:color "red"}} {:id #uuid "6344cb18-e5ca-4cd2-9710-a2dcf94950fe", :page 14, :position {:bounding {:x1 0, :y1 80, :x2 874.4254760742188, :y2 287.15625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 241.765625, :x2 874.4254760742188, :y2 263.765625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 265.15625, :x2 358.6910400390625, :y2 287.15625, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The important thing to note in the code fragment is that cat doesn’t know whether it is reading from a file, console, or a pipe."}, :properties {:color "purple"}} {:id #uuid "6344cb53-c258-4422-b5af-54c416791e9c", :page 14, :position {:bounding {:x1 0, :y1 96, :x2 874.4151611328125, :y2 310.5625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 990.9999999999999, :height 1282.470588235294} {:x1 363.8046569824219, :y1 265.15625, :x2 874.4151611328125, :y2 287.15625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 288.5625, :x2 252.2113800048828, :y2 310.5625, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "Similarly cat doesn’t know whether it is printing to a console, a file, or whatever. "}, :properties {:color "yellow"}} {:id #uuid "6344cb8b-ffcf-419c-a579-3bfd22df1ba8", :page 14, :position {:bounding {:x1 0, :y1 112, :x2 874.0817413330078, :y2 333.953125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 990.9999999999999, :height 1282.470588235294} {:x1 252.1968536376953, :y1 288.5625, :x2 874.0817413330078, :y2 310.5625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 311.953125, :x2 624.3125, :y2 333.953125, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The use of file descriptors and the convention that file descriptor 0 is input and file descriptor 1 is output allows a simple implementation of cat."}, :properties {:color "red"}} {:id #uuid "6344cbc4-c355-44c2-8066-ee4e11b15971", :page 14, :position {:bounding {:x1 0, :y1 144, :x2 874.9375, :y2 384.46875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 336.28125, :x2 874.9375, :y2 358.28125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 359.46875, :x2 427.61505126953125, :y2 384.46875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 363.46875, :x2 230.6875, :y2 382.828125, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The close system call releases a file descriptor, making it free for reuse by a future open, pipe, or dup system call (see below)"}, :properties {:color "yellow"}} {:id #uuid "6344cc03-45e4-4be8-aab1-8f152a8356d1", :page 14, :position {:bounding {:x1 0, :y1 160, :x2 872.369384765625, :y2 405.0625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 990.9999999999999, :height 1282.470588235294} {:x1 436.9045715332031, :y1 359.671875, :x2 872.369384765625, :y2 381.671875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 383.0625, :x2 512.7979736328125, :y2 405.0625, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "A newly allocated file descriptor is always the lowestnumbered unused descriptor of the current process."}, :properties {:color "blue"}} {:id #uuid "6344cc65-397a-49e8-8f14-6a41cb26004f", :page 14, :position {:bounding {:x1 145.015625, :y1 407.40625, :x2 775.5930786132812, :y2 429.40625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 145.015625, :y1 407.40625, :x2 775.5930786132812, :y2 429.40625, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "File descriptors and fork interact to make I/O redirection easy to implement. "}, :properties {:color "yellow"}} {:id #uuid "6344cc8f-b3b9-426a-8f0b-b7e350b77686", :page 14, :position {:bounding {:x1 0, :y1 192, :x2 874.40869140625, :y2 476.1875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 208, :x2 0, :y2 224, :width 990.9999999999999, :height 1282.470588235294} {:x1 775.59375, :y1 407.203125, :x2 874.4049072265625, :y2 432.203125, :width 990.9999999999999, :height 1282.470588235294} {:x1 817.984375, :y1 411.203125, :x2 874.4049072265625, :y2 428.875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 430.796875, :x2 874.40869140625, :y2 452.796875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 454.1875, :x2 360.67388916015625, :y2 476.1875, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "Fork copies the parent’s file descriptor table along with its memory, so that the child starts with exactly the same open files as the parent. "}, :properties {:color "blue"}} {:id #uuid "6344cccb-3dc3-41df-b0ed-41f210d134f5", :page 14, :position {:bounding {:x1 0, :y1 224, :x2 874.42236328125, :y2 499.578125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 990.9999999999999, :height 1282.470588235294} {:x1 360.6594543457031, :y1 454.1875, :x2 874.42236328125, :y2 476.1875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 477.578125, :x2 292.9462585449219, :y2 499.578125, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The system call exec replaces the calling process’s memory but preserves its file table."}, :properties {:color "red"}} {:id #uuid "6344cd0d-ed64-45cd-8194-2ef1beee6560", :page 14, :position {:bounding {:x1 0, :y1 240, :x2 874.4238891601562, :y2 522.96875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 990.9999999999999, :height 1282.470588235294} {:x1 297.54266357421875, :y1 477.578125, :x2 874.4238891601562, :y2 499.578125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 500.96875, :x2 835.8866577148438, :y2 522.96875, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "This behavior allows the shell to implement I/O redirection by forking, reopening chosen file descriptors in the child, and then calling exec to run the new program. "}, :properties {:color "yellow"}} {:id #uuid "6344cd7c-b120-419e-99be-e06257cc7e08", :page 14, :position {:bounding {:x1 0, :y1 256, :x2 874.4043579101562, :y2 546.375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 990.9999999999999, :height 1282.470588235294} {:x1 835.872314453125, :y1 500.96875, :x2 874.4043579101562, :y2 522.96875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 524.375, :x2 765.40625, :y2 546.375, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "Here is a simplified version of the code a shell runs for the command cat < input.txt:"}, :properties {:color "blue"}} {:id #uuid "6344cdf7-db0a-43e3-a30f-3dc7ae58518a", :page 14, :position {:bounding {:x1 0, :y1 416, :x2 874.4237670898438, :y2 814.703125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 769.3125, :x2 874.4237670898438, :y2 791.3125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 792.703125, :x2 274.3614196777344, :y2 814.703125, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "After the child closes file descriptor 0, open is guaranteed to use that file descriptor for the newly opened input.txt"}, :properties {:color "yellow"}} {:id #uuid "6344ce19-9962-4a49-8b97-7050b536feed", :page 14, :position {:bounding {:x1 284.5962829589844, :y1 792.703125, :x2 657.046875, :y2 814.703125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 284.5962829589844, :y1 792.703125, :x2 657.046875, :y2 814.703125, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "0 will be the smallest available file descriptor. "}, :properties {:color "blue"}} {:id #uuid "6344ce2c-587a-443c-a960-60a55cd2cb0c", :page 14, :position {:bounding {:x1 0, :y1 432, :x2 874.3983764648438, :y2 838.09375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 990.9999999999999, :height 1282.470588235294} {:x1 658.140625, :y1 792.484375, :x2 874.3983764648438, :y2 817.484375, :width 990.9999999999999, :height 1282.470588235294} {:x1 689.9375, :y1 796.484375, :x2 874.3983764648438, :y2 815.84375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 816.09375, :x2 533.508056640625, :y2 838.09375, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "Cat then executes with file descriptor 0 (standard input) referring to input.txt."}, :properties {:color "purple"}} {:id #uuid "6344ce91-0053-4762-8b26-b088ccdce991", :page 14, :position {:bounding {:x1 0, :y1 448, :x2 874.0848388671875, :y2 861.484375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 990.9999999999999, :height 1282.470588235294} {:x1 537.99169921875, :y1 816.09375, :x2 874.0848388671875, :y2 838.09375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 839.484375, :x2 669.343505859375, :y2 861.484375, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The parent process’s file descriptors are not changed by this sequence, since it modifies only the child’s descriptors."}, :properties {:color "yellow"}} {:id #uuid "6344cefd-57b0-4fd5-bb34-29a49250a622", :page 14, :position {:bounding {:x1 0, :y1 528, :x2 874.415283203125, :y2 983.125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 528, :x2 0, :y2 544, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 934.953125, :x2 874.415283203125, :y2 956.953125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 958.125, :x2 205.96286010742188, :y2 983.125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 962.125, :x2 166.19007873535156, :y2 979.796875, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The second argument to open consists of a set of flags, expressed as bits, that control what open does"}, :properties {:color "yellow"}} {:id #uuid "6344cf40-1d94-42f6-8f64-f3167ea3a4ad", :page 14, :position {:bounding {:x1 215.81797790527344, :y1 958.34375, :x2 869.0387573242188, :y2 980.34375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 215.81797790527344, :y1 958.34375, :x2 869.0387573242188, :y2 980.34375, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "The possible values are defined in the file control (fcntl) header (kernel/fcntl.h:1-5)"}, :properties {:color "blue"}} {:id #uuid "6344cf52-9e70-4104-91c7-5b20649a45d4", :page 14, :position {:bounding {:x1 0, :y1 560, :x2 874.4132690429688, :y2 1050.515625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 560, :x2 0, :y2 576, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 576, :x2 0, :y2 592, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 981.515625, :x2 874.4132690429688, :y2 1006.515625, :width 990.9999999999999, :height 1282.470588235294} {:x1 201.375, :y1 983.734375, :x2 874.4132690429688, :y2 1003.09375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1005.125, :x2 874.4091186523438, :y2 1027.125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1028.515625, :x2 373.0468444824219, :y2 1050.515625, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "O_RDONLY, O_WRONLY, O_RDWR, O_CREATE, and O_TRUNC, which instruct open to open the file for reading, or for writing, or for both reading and writing, to create the file if it doesn’t exist, and to truncate the file to zero length."}, :properties {:color "purple"}} {:id #uuid "6344cfac-f44d-4f65-aa97-71e15e2c405e", :page 14, :position {:bounding {:x1 372.0513916015625, :y1 1052.859375, :x2 770.45263671875, :y2 1077.859375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 372.0513916015625, :y1 1052.859375, :x2 770.45263671875, :y2 1077.859375, :width 990.9999999999999, :height 1282.470588235294} {:x1 496.46875, :y1 1054.859375, :x2 631.609375, :y2 1074.21875, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "it is helpful that fork and exec are separate calls"}, :properties {:color "yellow"}} {:id #uuid "6344cfda-cf80-4aaa-939c-2fce3bd0b9df", :page 14, :position {:bounding {:x1 0, :y1 608, :x2 874.4246826171875, :y2 1121.640625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 608, :x2 0, :y2 624, :width 990.9999999999999, :height 1282.470588235294} {:x1 0, :y1 624, :x2 0, :y2 640, :width 990.9999999999999, :height 1282.470588235294} {:x1 780.06103515625, :y1 1052.859375, :x2 874.4246826171875, :y2 1074.859375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1076.25, :x2 874.4100952148438, :y2 1098.25, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1099.640625, :x2 162.71627807617188, :y2 1121.640625, :width 990.9999999999999, :height 1282.470588235294}), :page 14}, :content {:text "between the two, the shell has a chance to redirect the child’s I/O without disturbing the I/O setup of the main shell. "}, :properties {:color "blue"}} {:id #uuid "6344d07f-ebb5-412d-bd4a-a33b969d5e9e", :page 15, :position {:bounding {:x1 0, :y1 64, :x2 874.4191284179688, :y2 257.3125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 211.921875, :x2 874.4191284179688, :y2 233.921875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 235.3125, :x2 251.005859375, :y2 257.3125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Although fork copies the file descriptor table, each underlying file offset is shared between parent and child. "}, :properties {:color "blue"}} {:id #uuid "6344d116-aa93-4f4f-9103-db5229e1da26", :page 15, :position {:bounding {:x1 250.99169921875, :y1 235.3125, :x2 429.2237854003906, :y2 257.3125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 250.99169921875, :y1 235.3125, :x2 429.2237854003906, :y2 257.3125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Consider this example:"}, :properties {:color "yellow"}} {:id #uuid "6344d190-f244-4191-8a14-6e9df61d59c1", :page 15, :position {:bounding {:x1 116.578125, :y1 432.9375, :x2 874.9375, :y2 454.9375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 116.578125, :y1 432.9375, :x2 874.9375, :y2 454.9375, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "At the end of this fragment, the file attached to file descriptor 1 will contain the data hello world."}, :properties {:color "blue"}} {:id #uuid "6344d1e4-0842-4cc2-97c8-3fa0bc284021", :page 15, :position {:bounding {:x1 0, :y1 224, :x2 874.4171752929688, :y2 501.734375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 456.328125, :x2 874.4171752929688, :y2 481.328125, :width 990.9999999999999, :height 1282.470588235294} {:x1 146.6875, :y1 458.328125, :x2 874.4171752929688, :y2 477.6875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 479.734375, :x2 318.5226745605469, :y2 501.734375, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "The write in the parent (which, thanks to wait, runs only after the child is done) picks up where the child’s write left off. "}, :properties {:color "green"}} {:id #uuid "6344d3e9-2b76-453c-a572-9626acbdcadd", :page 15, :position {:bounding {:x1 0, :y1 240, :x2 874.0849609375, :y2 525.125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 990.9999999999999, :height 1282.470588235294} {:x1 318.50836181640625, :y1 479.734375, :x2 874.0849609375, :y2 501.734375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 503.125, :x2 602.5, :y2 525.125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "This behavior helps produce sequential output from sequences of shell commands, like (echo hello; echo world) >output.txt."}, :properties {:color "red"}} {:id #uuid "6344d479-0775-409f-b00c-f667ccbec696", :page 15, :position {:bounding {:x1 0, :y1 272, :x2 874.3936157226562, :y2 572.15625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 526.765625, :x2 874.3936157226562, :y2 548.765625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 550.15625, :x2 373.69189453125, :y2 572.15625, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "The dup system call duplicates an existing file descriptor, returning a new one that refers to the same underlying I/O object. "}, :properties {:color "yellow"}} {:id #uuid "6344d4e5-3289-47de-842f-db30344391ee", :page 15, :position {:bounding {:x1 0, :y1 288, :x2 874.4010620117188, :y2 595.546875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 990.9999999999999, :height 1282.470588235294} {:x1 373.67718505859375, :y1 550.15625, :x2 874.4010620117188, :y2 572.15625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 573.546875, :x2 302.8956604003906, :y2 595.546875, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Both file descriptors share an offset, just as the file descriptors duplicated by fork do. "}, :properties {:color "blue"}} {:id #uuid "6344d55d-d7d4-467d-9e5d-1d4856685856", :page 15, :position {:bounding {:x1 302.88128662109375, :y1 573.546875, :x2 718.0509643554688, :y2 595.546875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 302.88128662109375, :y1 573.546875, :x2 718.0509643554688, :y2 595.546875, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "This is another way to write hello world into a file:"}, :properties {:color "red"}} {:id #uuid "6344d5ad-7123-44c7-8f25-5956c7b23ca6", :page 15, :position {:bounding {:x1 0, :y1 368, :x2 874.399169921875, :y2 731.8125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 683.421875, :x2 874.399169921875, :y2 705.421875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 706.8125, :x2 410.8963928222656, :y2 731.8125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 708.8125, :x2 369.3125, :y2 728.171875, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Two file descriptors share an offset if they were derived from the same original file descriptor by a sequence of fork and dup calls."}, :properties {:color "yellow"}} {:id #uuid "6344d5fa-22cd-4760-89a5-40d53b1c1633", :page 15, :position {:bounding {:x1 0, :y1 384, :x2 874.4042358398438, :y2 752.203125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 990.9999999999999, :height 1282.470588235294} {:x1 415.7948303222656, :y1 706.8125, :x2 874.4042358398438, :y2 728.8125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 730.203125, :x2 453.552978515625, :y2 752.203125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Otherwise file descriptors do not share offsets, even if they resulted from open calls for the same file."}, :properties {:color "blue"}} {:id #uuid "6344d671-cd3d-421a-bfd7-f89bcb4d5c09", :page 15, :position {:bounding {:x1 0, :y1 400, :x2 874.3972778320312, :y2 778.375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 990.9999999999999, :height 1282.470588235294} {:x1 459.9062805175781, :y1 730.203125, :x2 874.3972778320312, :y2 755.203125, :width 990.9999999999999, :height 1282.470588235294} {:x1 459.921875, :y1 733.984375, :x2 874.3972778320312, :y2 751.65625, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 753.375, :x2 587.7646484375, :y2 778.375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 757.375, :x2 582.7406005859375, :y2 775.046875, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Dup allows shells to implement commands like this: ls existing-file non-existing-file > tmp1 2>&1."}, :properties {:color "yellow"}} {:id #uuid "6344d6d2-c597-4a3b-99e8-a7506af07a9d", :page 15, :position {:bounding {:x1 0, :y1 416, :x2 874.4006958007812, :y2 798.984375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 990.9999999999999, :height 1282.470588235294} {:x1 592.4586181640625, :y1 753.59375, :x2 874.4006958007812, :y2 775.59375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 776.984375, :x2 602.7452392578125, :y2 798.984375, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "The 2>&1 tells the shell to give the command a file descriptor 2 that is a duplicate of descriptor 1"}, :properties {:color "red"}} {:id #uuid "6344d76f-2e7c-443b-b62a-4e1b385c3bba", :page 15, :position {:bounding {:x1 0, :y1 432, :x2 874.4015502929688, :y2 822.375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 990.9999999999999, :height 1282.470588235294} {:x1 612.738037109375, :y1 776.984375, :x2 874.4015502929688, :y2 798.984375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 800.375, :x2 703.746826171875, :y2 822.375, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Both the name of the existing file and the error message for the non-existing file will show up in the file tmp1."}, :properties {:color "blue"}} {:id #uuid "6344d78f-dfd4-44b9-9d86-24cb05b44c2d", :page 15, :position {:bounding {:x1 0, :y1 448, :x2 874.09912109375, :y2 845.765625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 990.9999999999999, :height 1282.470588235294} {:x1 708.322021484375, :y1 800.375, :x2 874.09912109375, :y2 822.375, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 823.765625, :x2 822.1013793945312, :y2 845.765625, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "The xv6 shell doesn’t support I/O redirection for the error file descriptor, but now you know how to implement it."}, :properties {:color "purple"}} {:id #uuid "6344d7f8-2a4a-4d04-8da8-cd8e0ab64d2a", :page 15, :position {:bounding {:x1 0, :y1 480, :x2 874.4046020507812, :y2 892.8125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 480, :x2 0, :y2 496, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 847.421875, :x2 874.4046020507812, :y2 869.421875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 870.8125, :x2 188.40855407714844, :y2 892.8125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "File descriptors are a powerful abstraction, because they hide the details of what they are connected to"}, :properties {:color "blue"}} {:id #uuid "6344d81f-3435-4ff6-8f0c-ad20a1714b66", :page 15, :position {:bounding {:x1 0, :y1 496, :x2 874.4075164794922, :y2 916.203125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 496, :x2 0, :y2 512, :width 990.9999999999999, :height 1282.470588235294} {:x1 198.09593200683594, :y1 870.8125, :x2 874.4075164794922, :y2 892.8125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 894.203125, :x2 204.20115661621094, :y2 916.203125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "a process writing to file descriptor 1 may be writing to a file, to a device like the console, or to a pipe"}, :properties {:color "red"}} {:id #uuid "6344d865-6e15-4086-83cd-1042e1e2b9d4", :page 15, :position {:bounding {:x1 116.578125, :y1 954.875, :x2 242.8123321533203, :y2 985.875, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 116.578125, :y1 954.875, :x2 242.8123321533203, :y2 985.875, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "1.3 Pipes"}, :properties {:color "yellow"}} {:id #uuid "6344d8e2-61c6-4c24-bb7e-fdb66bd25d0c", :page 15, :position {:bounding {:x1 0, :y1 544, :x2 874.4171142578125, :y2 1051.203125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 544, :x2 0, :y2 560, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1005.8125, :x2 874.4171142578125, :y2 1027.8125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1029.203125, :x2 271.3502197265625, :y2 1051.203125, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "A pipe is a small kernel buffer exposed to processes as a pair of file descriptors, one for reading and one for writing. "}, :properties {:color "blue"}} {:id #uuid "6344d92e-d209-4788-ba48-caec1e5bc2de", :page 15, :position {:bounding {:x1 0, :y1 560, :x2 874.4120178222656, :y2 1074.59375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 560, :x2 0, :y2 576, :width 990.9999999999999, :height 1282.470588235294} {:x1 271.3359680175781, :y1 1029.203125, :x2 874.4120178222656, :y2 1051.203125, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1052.59375, :x2 309.71075439453125, :y2 1074.59375, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Writing data to one end of the pipe makes that data available for reading from the other end of the pipe."}, :properties {:color "yellow"}} {:id #uuid "6344d938-956d-4f44-aab5-0fcf5bd6271c", :page 15, :position {:bounding {:x1 314.5225830078125, :y1 1052.59375, :x2 711.2672729492188, :y2 1074.59375, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 314.5225830078125, :y1 1052.59375, :x2 711.2672729492188, :y2 1074.59375, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "Pipes provide a way for processes to communicate."}, :properties {:color "red"}} {:id #uuid "6344d98e-41ad-4b2d-813b-7f049ee75ae5", :page 15, :position {:bounding {:x1 0, :y1 592, :x2 874.4085693359375, :y2 1121.640625, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 592, :x2 0, :y2 608, :width 990.9999999999999, :height 1282.470588235294} {:x1 145.015625, :y1 1076.25, :x2 874.4085693359375, :y2 1098.25, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 1099.640625, :x2 221.94883728027344, :y2 1121.640625, :width 990.9999999999999, :height 1282.470588235294}), :page 15}, :content {:text "The following example code runs the program wc with standard input connected to the read end of a pipe."}, :properties {:color "yellow"}} {:id #uuid "6344da98-534b-4e9b-bade-a9b4b226fd31", :page 16, :position {:bounding {:x1 0, :y1 256, :x2 874.4234619140625, :y2 576.578125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 531.1875, :x2 874.4234619140625, :y2 553.1875, :width 990.9999999999999, :height 1282.470588235294} {:x1 116.578125, :y1 554.578125, :x2 234.12281799316406, :y2 576.578125, :width 990.9999999999999, :height 1282.470588235294}), :page 16}, :content {:text "The program calls pipe, which creates a new pipe and records the read and write file descriptors in the array p. "}, :properties {:color "yellow"}} {:id #uuid "6344db0a-f3df-47e2-bbc2-275b112e1ffc", :page 16, :position {:bounding {:x1 234.1071014404297, :y1 554.578125, :x2 842.832275390625, :y2 576.578125, :width 990.9999999999999, :height 1282.470588235294}, :rects ({:x1 234.1071014404297, :y1 554.578125, :x2 842.832275390625, :y2 576.578125, :width 990.9999999999999, :height 1282.470588235294}), :page 16}, :content {:text "After fork, both parent and child have file descriptors referring to the pipe. "}, :properties {:color "blue"}} {:id #uuid "6344e508-5dfe-417f-baea-0b775a71c4b4", :page 16, :position {:bounding {:x1 0, :y1 272, :x2 899.9983520507812, :y2 645.03125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 288, :x2 0, :y2 304, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 867.4890747070312, :y1 570.875, :x2 899.6663818359375, :y2 592.875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 594.953125, :x2 899.9983520507812, :y2 620.953125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 596.953125, :x2 899.9983520507812, :y2 616.875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 619.03125, :x2 486.6806640625, :y2 645.03125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 621.03125, :x2 476.7047424316406, :y2 640.953125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "The child calls close and dup to make file descriptor zero refer to the read end of the pipe, closes the file descriptors in p, and calls exec to run wc. "}, :properties {:color "yellow"}} {:id #uuid "6344e566-dc30-4849-b840-c6376a94d4b6", :page 16, :position {:bounding {:x1 0, :y1 304, :x2 900.0044555664062, :y2 665.09375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 486.6665344238281, :y1 619.03125, :x2 900.0044555664062, :y2 641.03125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 643.09375, :x2 194.64996337890625, :y2 665.09375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "When wc reads from its standard input, it reads from the pipe. "}, :properties {:color "blue"}} {:id #uuid "6344e584-1a17-4165-a766-6d2e43d3d07b", :page 16, :position {:bounding {:x1 0, :y1 320, :x2 899.6694641113281, :y2 689.171875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 336, :x2 0, :y2 352, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 194.63565063476562, :y1 643.09375, :x2 899.6694641113281, :y2 665.09375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 667.171875, :x2 157.09378051757812, :y2 689.171875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "The parent closes the read side of the pipe, writes to the pipe, and then closes the write side."}, :properties {:color "red"}} {:id #uuid "6344e5e1-08d0-4f6d-b40d-8051dc65f222", :page 16, :position {:bounding {:x1 0, :y1 352, :x2 900.0052490234375, :y2 739.75, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 693.671875, :x2 900.0052490234375, :y2 715.671875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 717.75, :x2 452.1592712402344, :y2 739.75, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "If no data is available, a read on a pipe waits for either data to be written or for all file descriptors referring to the write end to be closed;"}, :properties {:color "yellow"}} {:id #uuid "6344e64a-db7c-4c7a-b05c-1becfad7b201", :page 16, :position {:bounding {:x1 0, :y1 368, :x2 899.9895629882812, :y2 763.828125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 461.01129150390625, :y1 717.75, :x2 899.9895629882812, :y2 739.75, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 741.828125, :x2 348.57501220703125, :y2 763.828125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "n the latter case, read will return 0, just as if the end of a data file had been reached."}, :properties {:color "blue"}} {:id #uuid "6344e6f8-3d35-4c04-9e9c-0cc0eb1ac617", :page 16, :position {:bounding {:x1 0, :y1 384, :x2 900.0089721679688, :y2 815.8125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 400, :x2 0, :y2 416, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 353.1451110839844, :y1 741.828125, :x2 899.9840087890625, :y2 763.828125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 765.890625, :x2 900.0089721679688, :y2 787.890625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 789.8125, :x2 197.41339111328125, :y2 815.8125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 793.8125, :x2 147.16934204101562, :y2 812, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "The fact that read blocks until it is impossible for new data to arrive is one reason that it’s important for the child to close the write end of the pipe before executing wc above"}, :properties {:color "purple"}} {:id #uuid "6344e71f-e6ae-4a92-8e7a-dda807083654", :page 16, :position {:bounding {:x1 0, :y1 416, :x2 900.0032348632812, :y2 836.046875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 202.5230712890625, :y1 789.96875, :x2 900.0032348632812, :y2 815.96875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 273.265625, :y1 791.96875, :x2 900.0032348632812, :y2 811.890625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 814.046875, :x2 209.0987091064453, :y2 836.046875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text " if one of wc ’s file descriptors referred to the write end of the pipe, wc would never see end-of-file."}, :properties {:color "red"}} {:id #uuid "6344e7da-3818-443f-b75d-ff4a12bb2e4f", :page 16, :position {:bounding {:x1 0, :y1 448, :x2 899.9934692382812, :y2 886.625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 840.546875, :x2 899.9934692382812, :y2 862.546875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 864.625, :x2 270.234375, :y2 886.625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "The xv6 shell implements pipelines such as grep fork sh.c | wc -l in a manner similar to the above code "}, :properties {:color "blue"}} {:id #uuid "6344e82f-4100-406e-be3d-d2e9d6a7bb5f", :page 16, :position {:bounding {:x1 0, :y1 464, :x2 899.6654052734375, :y2 910.703125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 464, :x2 0, :y2 480, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 390.0552062988281, :y1 864.625, :x2 899.6654052734375, :y2 886.625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 888.703125, :x2 348.2625732421875, :y2 910.703125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "The child process creates a pipe to connect the left end of the pipeline with the right end. "}, :properties {:color "red"}} {:id #uuid "6344e852-bfa6-4dbf-bb0f-a9c4d901436e", :page 16, :position {:bounding {:x1 0, :y1 480, :x2 899.995361328125, :y2 938.609375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 480, :x2 0, :y2 496, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 348.24749755859375, :y1 888.703125, :x2 899.995361328125, :y2 914.703125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 451.109375, :y1 890.703125, :x2 899.995361328125, :y2 910.625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 912.609375, :x2 660.0380859375, :y2 938.609375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 916.609375, :x2 278.9654846191406, :y2 934.796875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "Then it calls fork and runcmd for the left end of the pipeline and fork and runcmd for the right end, and waits for both to finish. "}, :properties {:color "yellow"}} {:id #uuid "6344e8c1-bf3f-4a6a-8fdb-a60a3749eaeb", :page 16, :position {:bounding {:x1 0, :y1 496, :x2 899.9812622070312, :y2 982.921875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 496, :x2 0, :y2 512, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 512, :x2 0, :y2 528, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 660.0228881835938, :y1 912.765625, :x2 899.6612548828125, :y2 934.765625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 936.84375, :x2 899.9812622070312, :y2 958.84375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 960.921875, :x2 422.36505126953125, :y2 982.921875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "The right end of the pipeline may be a command that itself includes a pipe (e.g., a | b | c), which itself forks two new child processes (one for b and one for c). "}, :properties {:color "red"}} {:id #uuid "6344e91d-c099-4b72-9589-abc088468de7", :page 16, :position {:bounding {:x1 0, :y1 528, :x2 900.00537109375, :y2 1031.078125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 528, :x2 0, :y2 544, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 544, :x2 0, :y2 560, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 422.3506164550781, :y1 960.921875, :x2 899.3382568359375, :y2 982.921875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 985, :x2 900.00537109375, :y2 1007, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1009.078125, :x2 268.3070068359375, :y2 1031.078125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 16}, :content {:text "Thus, the shell may create a tree of processes. The leaves of this tree are commands and the interior nodes are processes that wait until the left and right children complete."}, :properties {:color "purple"}} {:id #uuid "6344e9f4-baef-45a0-8ef7-1e12810f2681", :page 17, :position {:bounding {:x1 0, :y1 96, :x2 693.318359375, :y2 391.09375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 112, :x2 0, :y2 128, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 128, :x2 0, :y2 144, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 266.078125, :x2 693.318359375, :y2 288.078125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 158.71875, :y1 298.484375, :x2 387.81622314453125, :y2 324.484375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 158.71875, :y1 302.484375, :x2 387.81622314453125, :y2 320.671875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 332.703125, :x2 431.6050720214844, :y2 354.703125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 158.71875, :y1 365.09375, :x2 595.0955200195312, :y2 391.09375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 158.71875, :y1 369.09375, :x2 213.28895568847656, :y2 387.28125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "Pipes may seem no more powerful than temporary files: the pipeline echo hello world | wc could be implemented without pipes as echo hello world >/tmp/xyz; wc </tmp/xyz"}, :properties {:color "blue"}} {:id #uuid "6344ea75-09f0-439c-a1d9-5476d0064948", :page 17, :position {:bounding {:x1 120, :y1 399.3125, :x2 697.2916259765625, :y2 421.3125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 399.3125, :x2 697.2916259765625, :y2 421.3125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "Pipes have at least four advantages over temporary files in this situation."}, :properties {:color "green"}} {:id #uuid "6344ebb9-4948-4451-8efd-a3e6f42a31d4", :page 17, :position {:bounding {:x1 0, :y1 160, :x2 900.0037231445312, :y2 445.390625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 702.2702026367188, :y1 399.3125, :x2 900.0037231445312, :y2 421.3125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 423.390625, :x2 286.3070983886719, :y2 445.390625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "First, pipes automatically clean themselves up;"}, :properties {:color "yellow"}} {:id #uuid "6344ebe9-0a3a-4f73-ab3f-67e079bc60cf", :page 17, :position {:bounding {:x1 0, :y1 176, :x2 899.9923095703125, :y2 469.46875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 291.1980895996094, :y1 423.390625, :x2 899.9923095703125, :y2 445.390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 447.46875, :x2 213.75123596191406, :y2 469.46875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "with the file redirection, a shell would have to be careful to remove /tmp/xyz when done."}, :properties {:color "red"}} {:id #uuid "6344ee94-c9fe-447e-919c-f41fc85b2ae2", :page 17, :position {:bounding {:x1 0, :y1 192, :x2 900.0079803466797, :y2 493.546875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 218.77464294433594, :y1 447.46875, :x2 900.0079803466797, :y2 469.46875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 471.546875, :x2 490.4537353515625, :y2 493.546875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "Second, pipes can pass arbitrarily long streams of data, while file redirection requires enough free space on disk to store all the data"}, :properties {:color "yellow"}} {:id #uuid "6344eed1-5fa8-469c-93ab-30d8c9589035", :page 17, :position {:bounding {:x1 0, :y1 208, :x2 899.6751098632812, :y2 517.625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 208, :x2 0, :y2 224, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 495.4573974609375, :y1 471.546875, :x2 899.6751098632812, :y2 493.546875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 495.625, :x2 838.0057983398438, :y2 517.625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text " Third, pipes allow for parallel execution of pipeline stages, while the file approach requires the first program to finish before the second starts."}, :properties {:color "blue"}} {:id #uuid "6344ef05-e9e5-42fc-9f6b-e307e76566ad", :page 17, :position {:bounding {:x1 0, :y1 224, :x2 899.9990234375, :y2 565.765625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 240, :x2 0, :y2 256, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 842.9906616210938, :y1 495.625, :x2 899.9990234375, :y2 517.625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 519.6875, :x2 899.31787109375, :y2 541.6875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 543.765625, :x2 512.9888305664062, :y2 565.765625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "Fourth, if you are implementing inter-process communication, pipes’ blocking reads and writes are more efficient than the non-blocking semantics of files."}, :properties {:color "yellow"}} {:id #uuid "6350e9e4-5561-47de-adf0-77eb59eb9ffd", :page 17, :position {:bounding {:x1 120, :y1 604.546875, :x2 320.8200378417969, :y2 636.546875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 604.546875, :x2 320.8200378417969, :y2 636.546875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "1.4 File system"}, :properties {:color "blue"}} {:id #uuid "6350ea1f-9a41-4a3b-96ab-a4b57694fa6d", :page 19, :position {:bounding {:x1 0, :y1 176, :x2 899.99755859375, :y2 517.21875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 874.3269653320312, :y1 471.140625, :x2 899.99755859375, :y2 493.140625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 495.21875, :x2 516.3353271484375, :y2 517.21875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "the shell was the first so-called “scripting language.” "}, :properties {:color "yellow"}} {:id #uuid "6350ea58-c4b5-4559-b250-8321e039d8be", :page 19, :position {:bounding {:x1 0, :y1 224, :x2 899.9786987304688, :y2 591.578125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 224, :x2 0, :y2 240, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 545.515625, :x2 899.9786987304688, :y2 567.515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 569.578125, :x2 347.8243713378906, :y2 591.578125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "The Unix system call interface has been standardized through the Portable Operating System Interface (POSIX) standard"}, :properties {:color "blue"}} {:id #uuid "6350eb06-1bf8-4063-9ebb-878951df99d3", :page 19, :position {:bounding {:x1 0, :y1 336, :x2 900.00927734375, :y2 760.125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 836.1187133789062, :y1 714.046875, :x2 900.00927734375, :y2 736.046875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 738.125, :x2 765.8854370117188, :y2 760.125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "Modern kernels evolve continuously and rapidly, and offer many features beyond POSIX."}, :properties {:color "yellow"}} {:id #uuid "6350eb18-ce64-4b07-9b09-8d5c54f9a89b", :page 19, :position {:bounding {:x1 120, :y1 366.6875, :x2 318.9497375488281, :y2 398.6875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 366.6875, :x2 318.9497375488281, :y2 398.6875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "1.5 Real world"}, :properties {:color "blue"}} {:id #uuid "6350eb57-a9fe-4ee5-a534-f354f5f3ccbb", :page 19, :position {:bounding {:x1 0, :y1 368, :x2 899.9808349609375, :y2 810.40625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 368, :x2 0, :y2 384, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 764.328125, :x2 899.9808349609375, :y2 786.328125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 788.40625, :x2 486.6660461425781, :y2 810.40625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "Unix unified access to multiple types of resources (files, directories, and devices) with a single set of file-name and file-descriptor interfaces. T"}, :properties {:color "yellow"}} {:id #uuid "6350ebf1-3396-4b96-8b9d-b2a127ae6e44", :page 19, :position {:bounding {:x1 0, :y1 560, :x2 900.0003051757812, :y2 1129.796875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 560, :x2 0, :y2 576, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 576, :x2 0, :y2 592, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 350.65625, :y1 1059.640625, :x2 899.0023803710938, :y2 1081.640625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1083.71875, :x2 900.0003051757812, :y2 1105.71875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1107.796875, :x2 253.24212646484375, :y2 1129.796875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text " Any operating system must multiplex processes onto the underlying hardware, isolate processes from each other, and provide mechanisms for controlled inter-process communication. "}, :properties {:color "yellow"}} {:id #uuid "635132db-5a3c-4c23-9c64-b27f9f851bb8", :page 17, :position {:bounding {:x1 0, :y1 288, :x2 900.0104370117188, :y2 702.515625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 656.4375, :x2 900.0104370117188, :y2 678.4375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 680.515625, :x2 670.50732421875, :y2 702.515625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "The xv6 file system provides data files, which contain uninterpreted byte arrays, and directories, which contain named references to data files and other directories."}, :properties {:color "blue"}} {:id #uuid "6351333d-7463-4872-b624-9538de57dff5", :page 17, :position {:bounding {:x1 0, :y1 304, :x2 899.6629638671875, :y2 726.59375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 675.347412109375, :y1 680.515625, :x2 899.6629638671875, :y2 702.515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 704.59375, :x2 493.3487548828125, :y2 726.59375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "The directories form a tree, starting at a special directory called the root. "}, :properties {:color "blue"}} {:id #uuid "6351335a-3c93-4a80-b8f8-5daebfc03cd6", :page 17, :position {:bounding {:x1 0, :y1 320, :x2 900.0030517578125, :y2 750.671875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 493.33197021484375, :y1 704.59375, :x2 900.0030517578125, :y2 730.59375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 666.6875, :y1 706.59375, :x2 900.0030517578125, :y2 726.515625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 728.671875, :x2 851.1751708984375, :y2 750.671875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "A path like /a/b/c refers to the file or directory named c inside the directory named b inside the directory named a in the root directory /."}, :properties {:color "yellow"}} {:id #uuid "635133bd-f7a9-4ec2-8383-e94af0f108ec", :page 17, :position {:bounding {:x1 0, :y1 336, :x2 899.9983520507812, :y2 798.828125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 352, :x2 0, :y2 368, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 855.9462280273438, :y1 728.671875, :x2 899.9938354492188, :y2 750.671875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 752.75, :x2 899.9983520507812, :y2 774.75, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 776.828125, :x2 445.94195556640625, :y2 798.828125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "Paths that don’t begin with / are evaluated relative to the calling process’s current directory, which can be changed with the chdir system call. "}, :properties {:color "green"}} {:id #uuid "635134ae-d980-4854-9055-ee9ac982894c", :page 17, :position {:bounding {:x1 149.25, :y1 1006, :x2 596.3964233398438, :y2 1028, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 1006, :x2 596.3964233398438, :y2 1028, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "There are system calls to create new files and directories"}, :properties {:color "yellow"}} {:id #uuid "635134c3-0677-4835-b2cb-8a635bb07f79", :page 17, :position {:bounding {:x1 606, :y1 1005.84375, :x2 846.7714233398438, :y2 1031.84375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 606, :y1 1005.84375, :x2 846.7714233398438, :y2 1031.84375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 606, :y1 1009.84375, :x2 665.2234497070312, :y2 1028.03125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "mkdir creates a new directory"}, :properties {:color "yellow"}} {:id #uuid "635134ce-a289-42b6-898a-2bd19b071abf", :page 17, :position {:bounding {:x1 0, :y1 496, :x2 900.0027465820312, :y2 1052.078125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 496, :x2 0, :y2 512, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 856.359375, :y1 1005.84375, :x2 900.0027465820312, :y2 1031.84375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 856.359375, :y1 1009.84375, :x2 900.0027465820312, :y2 1028.03125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1030.078125, :x2 488.5428466796875, :y2 1052.078125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "open with the O_CREATE flag creates a new data file"}, :properties {:color "blue"}} {:id #uuid "635134d7-2992-48e6-a7a2-cddd1a5bd86e", :page 17, :position {:bounding {:x1 531.9573974609375, :y1 1030.078125, :x2 784.9127197265625, :y2 1056.078125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 531.9573974609375, :y1 1030.078125, :x2 784.9127197265625, :y2 1056.078125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 531.96875, :y1 1033.921875, :x2 590.59375, :y2 1052.109375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 17}, :content {:text "mknod creates a new device file"}, :properties {:color "blue"}} {:id #uuid "63513593-d3e3-4d71-a284-bf69e27e3ce2", :page 18, :position {:bounding {:x1 120, :y1 156.125, :x2 524.8583374023438, :y2 182.125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 156.125, :x2 524.8583374023438, :y2 182.125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 174.53125, :y1 160.125, :x2 179.64199829101562, :y2 178.3125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "Mknod creates a special file that refers to a device."}, :properties {:color "blue"}} {:id #uuid "635135e0-bb92-4930-a628-2bc1247b2b07", :page 18, :position {:bounding {:x1 0, :y1 16, :x2 899.9910278320312, :y2 202.375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 528.8456420898438, :y1 156.296875, :x2 899.0156860351562, :y2 178.296875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 180.375, :x2 899.9910278320312, :y2 202.375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "Associated with a device file are the major and minor device numbers (the two arguments to mknod), which uniquely identify a kernel device."}, :properties {:color "yellow"}} {:id #uuid "6351362c-32b1-42b4-839f-6cdac3bff7ec", :page 18, :position {:bounding {:x1 0, :y1 48, :x2 899.9945678710938, :y2 250.515625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 204.4375, :x2 899.9945678710938, :y2 230.4375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 598.0625, :y1 206.4375, :x2 899.9945678710938, :y2 226.359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 228.515625, :x2 694.3363037109375, :y2 250.515625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "When a process later opens a device file, the kernel diverts read and write system calls to the kernel device implementation instead of passing them to the file system."}, :properties {:color "blue"}} {:id #uuid "63513675-1a5a-4c0d-94f5-161b82ec8d88", :page 18, :position {:bounding {:x1 149.25, :y1 252.8125, :x2 485.0901794433594, :y2 274.8125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 252.8125, :x2 485.0901794433594, :y2 274.8125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "A file’s name is distinct from the file itself;"}, :properties {:color "blue"}} {:id #uuid "6351369e-1fdb-4db2-b2b2-63d307ff0181", :page 18, :position {:bounding {:x1 0, :y1 80, :x2 899.9884643554688, :y2 298.890625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 495.3555908203125, :y1 252.8125, :x2 899.9884643554688, :y2 274.8125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 276.890625, :x2 343.30078125, :y2 298.890625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "he same underlying file, called an inode, can have multiple names, called links"}, :properties {:color "yellow"}} {:id #uuid "635136ff-e792-4ecd-a85b-ebe258bb06e7", :page 18, :position {:bounding {:x1 353.4765625, :y1 276.890625, :x2 701.169677734375, :y2 298.890625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 353.4765625, :y1 276.890625, :x2 701.169677734375, :y2 298.890625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "Each link consists of an entry in a directory"}, :properties {:color "blue"}} {:id #uuid "63513710-073c-496b-b0bb-8183ad302417", :page 18, :position {:bounding {:x1 0, :y1 96, :x2 899.9974975585938, :y2 322.96875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 716.4464111328125, :y1 276.890625, :x2 899.9974975585938, :y2 298.890625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 300.96875, :x2 389.1303405761719, :y2 322.96875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "he entry contains a file name and a reference to an inode"}, :properties {:color "green"}} {:id #uuid "6351372c-2cbe-408e-8ae3-2a9a7f8464b6", :page 18, :position {:bounding {:x1 0, :y1 112, :x2 900.0103759765625, :y2 371.109375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 128, :x2 0, :y2 144, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 389.11627197265625, :y1 300.96875, :x2 900.00048828125, :y2 322.96875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 325.046875, :x2 900.0103759765625, :y2 347.046875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 349.109375, :x2 164.2881317138672, :y2 371.109375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text ". An inode holds metadata about a file, including its type (file or directory or device), its length, the location of the file’s content on disk, and the number of links to a file."}, :properties {:color "blue"}} {:id #uuid "6351375e-a488-4570-830a-8d45bea4914e", :page 18, :position {:bounding {:x1 149.25, :y1 373.40625, :x2 879.2725219726562, :y2 395.40625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 373.40625, :x2 879.2725219726562, :y2 395.40625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "The fstat system call retrieves information from the inode that a file descriptor refers to"}, :properties {:color "yellow"}} {:id #uuid "63513786-bc55-4243-8d8f-5407f8dff5c9", :page 18, :position {:bounding {:x1 0, :y1 160, :x2 900.0075073242188, :y2 423.484375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 884.4415893554688, :y1 373.40625, :x2 900.0075073242188, :y2 395.40625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 397.484375, :x2 467.80224609375, :y2 423.484375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 399.484375, :x2 591.6106567382812, :y2 419.484375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text " It fills in a struct stat, defined in stat.h (kernel/stat.h) as"}, :properties {:color "blue"}} {:id #uuid "63513823-0905-4e34-af99-1c55da57eca9", :page 18, :position {:bounding {:x1 0, :y1 352, :x2 900.0106811523438, :y2 737.03125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 690.953125, :x2 900.0106811523438, :y2 712.953125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 715.03125, :x2 181.97361755371094, :y2 737.03125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "The link system call creates another file system name referring to the same inode as an existing file. "}, :properties {:color "yellow"}} {:id #uuid "6351383d-0975-42e7-bff6-1731eb29b75d", :page 18, :position {:bounding {:x1 181.9594268798828, :y1 715.03125, :x2 610.015625, :y2 741.03125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 181.9594268798828, :y1 715.03125, :x2 610.015625, :y2 741.03125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 538.96875, :y1 717.03125, :x2 604.8125, :y2 736.953125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "This fragment creates a new file named both a and b."}, :properties {:color "yellow"}} {:id #uuid "635138b6-21cd-40b8-9aab-3c937b52e77d", :page 18, :position {:bounding {:x1 0, :y1 416, :x2 900.000732421875, :y2 851.328125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 416, :x2 0, :y2 432, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 710.9794921875, :y1 805.25, :x2 900.000732421875, :y2 827.25, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 829.328125, :x2 328.7113037109375, :y2 851.328125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "Each inode is identified by a unique inode number"}, :properties {:color "blue"}} {:id #uuid "63513952-ae38-4eda-8e90-4eb136316c29", :page 18, :position {:bounding {:x1 0, :y1 432, :x2 900.3125, :y2 875.40625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 337.6669616699219, :y1 829.328125, :x2 900.3125, :y2 855.328125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 833.96875, :y1 831.328125, :x2 900.3125, :y2 851.25, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 853.40625, :x2 689.4055786132812, :y2 875.40625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "After the code sequence above, it is possible to determine that a and b refer to the same underlying contents by inspecting the result of fstat"}, :properties {:color "blue"}} {:id #uuid "6351396b-49e7-49ca-b626-eaf7600ad21f", :page 18, :position {:bounding {:x1 0, :y1 448, :x2 899.9825439453125, :y2 903.484375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 699.5975341796875, :y1 853.40625, :x2 899.9825439453125, :y2 875.40625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 877.484375, :x2 280.3667297363281, :y2 903.484375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 879.484375, :x2 274.4801025390625, :y2 899.40625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "both will return the same inode number (ino)"}, :properties {:color "blue"}} {:id #uuid "63513985-7988-43d7-9d9f-0dd3d16eb337", :page 18, :position {:bounding {:x1 290.17822265625, :y1 877.484375, :x2 580.1566772460938, :y2 899.484375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 290.17822265625, :y1 877.484375, :x2 580.1566772460938, :y2 899.484375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "and the nlink count will be set to 2"}, :properties {:color "yellow"}} {:id #uuid "635139b4-8d35-435f-8909-1c258a84130e", :page 18, :position {:bounding {:x1 149.25, :y1 901.765625, :x2 659.8382568359375, :y2 923.765625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 901.765625, :x2 659.8382568359375, :y2 923.765625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "The unlink system call removes a name from the file system"}, :properties {:color "blue"}} {:id #uuid "635139ee-4854-4807-8bc2-524a67cb3f1b", :page 18, :position {:bounding {:x1 0, :y1 480, :x2 900.0003662109375, :y2 971.921875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 480, :x2 0, :y2 496, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 496, :x2 0, :y2 512, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 669.8069458007812, :y1 901.765625, :x2 899.655029296875, :y2 923.765625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 925.84375, :x2 900.0003662109375, :y2 947.84375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 949.921875, :x2 192.2385711669922, :y2 971.921875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "The file’s inode and the disk space holding its content are only freed when the file’s link count is zero and no file descriptors refer to it"}, :properties {:color "blue"}} {:id #uuid "63513aa1-fc97-4841-9862-2313fd77af4a", :page 18, :position {:bounding {:x1 0, :y1 592, :x2 900.0109252929688, :y2 1153.875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 592, :x2 0, :y2 608, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1107.796875, :x2 900.0109252929688, :y2 1129.796875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1131.875, :x2 329.114501953125, :y2 1153.875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 18}, :content {:text "is an idiomatic way to create a temporary inode with no name that will be cleaned up when the process closes fd or exits."}, :properties {:color "blue"}} {:id #uuid "63513b46-1d55-4216-a06e-59903eda8d69", :page 19, :position {:bounding {:x1 0, :y1 0, :x2 900.546875, :y2 171.53125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 149.25, :y1 121.609375, :x2 900.546875, :y2 143.609375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 145.53125, :x2 212.78778076171875, :y2 171.53125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 149.53125, :x2 207.76748657226562, :y2 169.453125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "Unix provides file utilities callable from the shell as user-level programs, for example mkdir, ln, and rm."}, :properties {:color "blue"}} {:id #uuid "63513b72-80e5-442d-be12-4a7d8882d535", :page 19, :position {:bounding {:x1 0, :y1 16, :x2 899.6749725341797, :y2 191.765625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 217.46946716308594, :y1 145.6875, :x2 899.6749725341797, :y2 167.6875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 169.765625, :x2 241.74346923828125, :y2 191.765625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "This design allows anyone to extend the command-line interface by adding new userlevel programs"}, :properties {:color "yellow"}} {:id #uuid "63513b83-b9ae-4160-a9c4-856d2d33b5a4", :page 19, :position {:bounding {:x1 149.25, :y1 220.046875, :x2 549.5460815429688, :y2 242.046875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 149.25, :y1 220.046875, :x2 549.5460815429688, :y2 242.046875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "One exception is cd, which is built into the shell"}, :properties {:color "blue"}} {:id #uuid "63513ba8-0d1c-4b21-a3a9-e611f1f60a69", :page 19, :position {:bounding {:x1 0, :y1 64, :x2 900.0042724609375, :y2 266.125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 676.125, :y1 219.890625, :x2 900.0042724609375, :y2 245.890625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 697.9375, :y1 223.890625, :x2 900.0042724609375, :y2 242.078125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 244.125, :x2 411.06781005859375, :y2 266.125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "cd must change the current working directory of the shell itself"}, :properties {:color "blue"}} {:id #uuid "63513bc1-4679-419b-914f-9d7153ee4a5b", :page 19, :position {:bounding {:x1 416.4418640136719, :y1 244.125, :x2 726.98486328125, :y2 266.125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 416.4418640136719, :y1 244.125, :x2 726.98486328125, :y2 266.125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text " If cd were run as a regular command"}, :properties {:color "yellow"}} {:id #uuid "63513bc8-8781-499d-afc6-225f64a91ed9", :page 19, :position {:bounding {:x1 0, :y1 80, :x2 900.0093383789062, :y2 314.28125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 96, :x2 0, :y2 112, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 737.2044067382812, :y1 244.125, :x2 900.0093383789062, :y2 266.125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 268.203125, :x2 900.0055541992188, :y2 290.203125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 292.28125, :x2 194.11094665527344, :y2 314.28125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "then the shell would fork a child process, the child process would run cd, and cd would change the child ’s working directory."}, :properties {:color "blue"}} {:id #uuid "63513bd3-fb42-4cc9-ae03-e47adf14e384", :page 19, :position {:bounding {:x1 198.86441040039062, :y1 292.28125, :x2 731.6853332519531, :y2 314.28125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 198.86441040039062, :y1 292.28125, :x2 731.6853332519531, :y2 314.28125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 19}, :content {:text "The parent’s (i.e., the shell’s) working directory would not change."}, :properties {:color "green"}} {:id #uuid "6359e6f6-5c54-4d7c-89e2-70e978600bd2", :page 21, :position {:bounding {:x1 120, :y1 435.75, :x2 790.9469604492188, :y2 457.75, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 435.75, :x2 790.9469604492188, :y2 457.75, :width 1019.9999999999999, :height 1319.9999999999998}), :page 21}, :content {:text "A key requirement for an operating system is to support several activities at once. "}, :properties {:color "yellow"}} {:id #uuid "6359e720-e50f-4e03-ad8d-9c337aa316dc", :page 21, :position {:bounding {:x1 120, :y1 483.90625, :x2 868.4068603515625, :y2 505.90625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 483.90625, :x2 868.4068603515625, :y2 505.90625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 21}, :content {:text "The operating system must time-share the resources of the computer among these processes."}, :properties {:color "yellow"}} {:id #uuid "6359e81a-afe0-4240-84a0-08e9a8261a2b", :page 21, :position {:bounding {:x1 0, :y1 96, :x2 899.666259765625, :y2 578.140625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 631.4083862304688, :y1 532.0625, :x2 899.666259765625, :y2 554.0625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 556.140625, :x2 472.69964599609375, :y2 578.140625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 21}, :content {:text " The operating system must also arrange for isolation between the processes"}, :properties {:color "yellow"}} {:id #uuid "6359e860-a74e-41fc-b7ae-c59ffe70f1ab", :page 21, :position {:bounding {:x1 0, :y1 128, :x2 900.009033203125, :y2 650.359375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 128, :x2 0, :y2 144, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 144, :x2 0, :y2 160, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 666.6223754882812, :y1 580.21875, :x2 900.009033203125, :y2 602.21875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 604.28125, :x2 899.999755859375, :y2 626.28125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 628.359375, :x2 196.23538208007812, :y2 650.359375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 21}, :content {:text "Complete isolation, however, is too strong, since it should be possible for processes to intentionally interact; pipelines are an example."}, :properties {:color "blue"}} {:id #uuid "6359e87d-22ae-4f80-be28-0590701315c4", :page 21, :position {:bounding {:x1 0, :y1 160, :x2 899.6653137207031, :y2 674.4375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 242.86135864257812, :y1 628.359375, :x2 899.6653137207031, :y2 650.359375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 652.4375, :x2 210.20343017578125, :y2 674.4375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 21}, :content {:text " an operating system must fulfill three requirements: multiplexing, isolation, and interaction."}, :properties {:color "yellow"}} {:id #uuid "6359e923-0a0f-4bec-a17c-8342aa248bb6", :page 22, :position {:bounding {:x1 120, :y1 114.4375, :x2 559.24072265625, :y2 146.4375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 114.4375, :x2 559.24072265625, :y2 146.4375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 22}, :content {:text "2.1 Abstracting physical resources"}, :properties {:color "yellow"}} {:id #uuid "6359e9c9-f448-448b-a339-20e38b874424", :page 22, :position {:bounding {:x1 0, :y1 32, :x2 1080.001708984375, :y2 286.3125, :width 1224, :height 1584}, :rects ({:x1 0, :y1 32, :x2 0, :y2 48, :width 1224, :height 1584} {:x1 1061.7158203125, :y1 230.421875, :x2 1080.001708984375, :y2 257.421875, :width 1224, :height 1584} {:x1 144, :y1 259.3125, :x2 892.56884765625, :y2 286.3125, :width 1224, :height 1584}), :page 22}, :content {:text "In this plan, each application could even have its own library tailored to its needs"}, :properties {:color "purple"}} {:id #uuid "6359ea75-6c96-49aa-b079-92503368a015", :page 22, :position {:bounding {:x1 183.44970703125, :y1 245.921875, :x2 817.326171875, :y2 273.921875, :width 1305.6, :height 1689.6}, :rects ({:x1 183.44970703125, :y1 245.921875, :x2 817.326171875, :y2 273.921875, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "one could implement the system calls in Figure 1.2 as a librar"}, :properties {:color "yellow"}} {:id #uuid "6359ea99-75d0-4f3f-9eab-6e84dca8cfd1", :page 22, :position {:bounding {:x1 0, :y1 80, :x2 1151.9976806640625, :y2 397.1875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 1305.6, :height 1689.6} {:x1 667.456298828125, :y1 338.359375, :x2 1151.9976806640625, :y2 366.359375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 369.1875, :x2 620.6929931640625, :y2 397.1875, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "Some operating systems for embedded devices or real-time systems are organized in this way"}, :properties {:color "blue"}} {:id #uuid "6359eaeb-39fa-4f99-a397-25d58f630529", :page 22, :position {:bounding {:x1 191.046875, :y1 400.796875, :x2 575.6768188476562, :y2 428.796875, :width 1305.6, :height 1689.6}, :rects ({:x1 191.046875, :y1 400.796875, :x2 575.6768188476562, :y2 428.796875, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "The downside of this library approach"}, :properties {:color "yellow"}} {:id #uuid "6359eaef-a4b3-4e63-a1ad-6b85b91ae58e", :page 22, :position {:bounding {:x1 0, :y1 112, :x2 1151.99072265625, :y2 459.609375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 1305.6, :height 1689.6} {:x1 656.6865234375, :y1 400.796875, :x2 1151.99072265625, :y2 428.796875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 431.609375, :x2 516.3017578125, :y2 459.609375, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "if there is more than one application running, the applications must be well-behaved"}, :properties {:color "blue"}} {:id #uuid "6359eb52-8677-400a-8145-028e5009a684", :page 22, :position {:bounding {:x1 0, :y1 128, :x2 1152.000244140625, :y2 490.4375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 128, :x2 0, :y2 144, :width 1305.6, :height 1689.6} {:x1 674.52490234375, :y1 431.609375, :x2 1152.000244140625, :y2 459.609375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 462.4375, :x2 545.33056640625, :y2 490.4375, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "each application must periodically give up the CPU so that other applications can run"}, :properties {:color "green"}} {:id #uuid "6359eb66-287e-42bd-8f58-f1a68220e49f", :page 22, :position {:bounding {:x1 629.28125, :y1 462.4375, :x2 979.8907470703125, :y2 490.4375, :width 1305.6, :height 1689.6}, :rects ({:x1 629.28125, :y1 462.4375, :x2 979.8907470703125, :y2 490.4375, :width 1305.6, :height 1689.6}), :page 22}, :content {:text " cooperative time-sharing scheme"}, :properties {:color "blue"}} {:id #uuid "6359ebae-e114-4686-80ad-414cf4190880", :page 21, :position {:bounding {:x1 0, :y1 112, :x2 1151.5992431640625, :y2 771.234375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 1305.6, :height 1689.6} {:x1 611.3964233398438, :y1 712.421875, :x2 1151.5992431640625, :y2 740.421875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 743.234375, :x2 846.7896728515625, :y2 771.234375, :width 1305.6, :height 1689.6}), :page 21}, :content {:text " That is, if one process has a bug and malfunctions, it shouldn’t affect processes that don’t depend on the buggy process."}, :properties {:color "blue"}} {:id #uuid "635a0695-69e3-4f73-9005-4829157acae7", :page 22, :position {:bounding {:x1 0, :y1 192, :x2 1151.9912109375, :y2 614.5, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 1305.6, :height 1689.6} {:x1 191.046875, :y1 555.6875, :x2 1151.9912109375, :y2 583.6875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 586.5, :x2 870.3642578125, :y2 614.5, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "To achieve strong isolation it’s helpful to forbid applications from directly accessing sensitive hardware resources, and instead to abstract the resources into services"}, :properties {:color "yellow"}} {:id #uuid "635a0709-4554-4851-89bd-a43b4cdb150c", :page 22, :position {:bounding {:x1 0, :y1 320, :x2 1151.988525390625, :y2 861.828125, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 1305.6, :height 1689.6} {:x1 292.110595703125, :y1 803.015625, :x2 1151.988525390625, :y2 831.015625, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 833.828125, :x2 1100.83154296875, :y2 861.828125, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "Unix transparently switches hardware CPUs among processes, saving and restoring register state as necessary, so that applications don’t have to be aware of time sharing."}, :properties {:color "yellow"}} {:id #uuid "635a0732-c0e7-4fff-8b4e-0c1debb56ef3", :page 22, :position {:bounding {:x1 0, :y1 336, :x2 1151.99072265625, :y2 923.46875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 1305.6, :height 1689.6} {:x1 0, :y1 352, :x2 0, :y2 368, :width 1305.6, :height 1689.6} {:x1 1106.951904296875, :y1 833.828125, :x2 1151.5733642578125, :y2 861.828125, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 864.65625, :x2 1151.99072265625, :y2 892.65625, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 895.46875, :x2 208.8267822265625, :y2 923.46875, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "This transparency allows the operating system to share CPUs even if some applications are in infinite loops"}, :properties {:color "blue"}} {:id #uuid "635a082d-e355-4a51-9860-2f6fababebc3", :page 22, :position {:bounding {:x1 0, :y1 528, :x2 1151.9776611328125, :y2 1264.84375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 528, :x2 0, :y2 544, :width 1305.6, :height 1689.6} {:x1 191.046875, :y1 1206.03125, :x2 1151.9776611328125, :y2 1234.03125, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 1236.84375, :x2 644.5619506835938, :y2 1264.84375, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "The system-call interface in Figure 1.2 is carefully designed to provide both programmer convenience and the possibility of strong isolation. "}, :properties {:color "yellow"}} {:id #uuid "635a0874-8aa2-4841-822c-187346b9ea9d", :page 22, :position {:bounding {:x1 0, :y1 544, :x2 1151.577880859375, :y2 1295.671875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 544, :x2 0, :y2 560, :width 1305.6, :height 1689.6} {:x1 644.5475463867188, :y1 1236.84375, :x2 1151.577880859375, :y2 1264.84375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 1267.671875, :x2 664.76513671875, :y2 1295.671875, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "The Unix interface is not the only way to abstract resources, but it has proven to be a very good one."}, :properties {:color "blue"}} {:id #uuid "635a0883-cf09-45ed-a253-7e1a8f1aa188", :page 22, :position {:bounding {:x1 153.59375, :y1 1349.5, :x2 954.006103515625, :y2 1390.5, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 1349.5, :x2 954.006103515625, :y2 1390.5, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "2.2 User mode, supervisor mode, and system calls"}, :properties {:color "yellow"}} {:id #uuid "635a08b6-ba82-4e3d-a104-bc69d636d236", :page 22, :position {:bounding {:x1 153.59375, :y1 1418.546875, :x2 1086.31396484375, :y2 1446.546875, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 1418.546875, :x2 1086.31396484375, :y2 1446.546875, :width 1305.6, :height 1689.6}), :page 22}, :content {:text "Strong isolation requires a hard boundary between applications and the operating system"}, :properties {:color "blue"}} {:id #uuid "635a08c1-a080-48c7-b9e3-d50a3c2866f3", :page 23, :position {:bounding {:x1 0, :y1 0, :x2 1151.9981689453125, :y2 215.046875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 1305.6, :height 1689.6} {:x1 287.39398193359375, :y1 156.234375, :x2 1151.9981689453125, :y2 184.234375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 187.046875, :x2 427.4837646484375, :y2 215.046875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "the operating system should be able to clean up the failed application and continue running other applications"}, :properties {:color "blue"}} {:id #uuid "635a0908-8762-497d-8050-0ab772c2e826", :page 23, :position {:bounding {:x1 0, :y1 16, :x2 1151.992919921875, :y2 276.6875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 1305.6, :height 1689.6} {:x1 0, :y1 32, :x2 0, :y2 48, :width 1305.6, :height 1689.6} {:x1 440.335693359375, :y1 187.046875, :x2 1151.570556640625, :y2 215.046875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 217.859375, :x2 1151.992919921875, :y2 245.859375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 248.6875, :x2 777.240966796875, :y2 276.6875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "To achieve strong isolation, the operating system must arrange that applications cannot modify (or even read) the operating system’s data structures and instructions and that applications cannot access other processes’ memory."}, :properties {:color "green"}} {:id #uuid "635a095c-b00f-4520-b411-339a2100e1d5", :page 23, :position {:bounding {:x1 191.046875, :y1 280.140625, :x2 742.811767578125, :y2 308.140625, :width 1305.6, :height 1689.6}, :rects ({:x1 191.046875, :y1 280.140625, :x2 742.811767578125, :y2 308.140625, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "CPUs provide hardware support for strong isolation. "}, :properties {:color "yellow"}} {:id #uuid "635a097d-e871-4982-9e2f-d09ba44deac2", :page 23, :position {:bounding {:x1 0, :y1 64, :x2 1151.982421875, :y2 338.96875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 1305.6, :height 1689.6} {:x1 887.981689453125, :y1 280.140625, :x2 1151.982421875, :y2 308.140625, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 310.96875, :x2 1115.2633056640625, :y2 338.96875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "RISC-V has three modes in which the CPU can execute instructions: machine mode, supervisor mode, and user mode."}, :properties {:color "blue"}} {:id #uuid "635a09a6-fb82-4c48-a51f-0ba2b9b605eb", :page 23, :position {:bounding {:x1 0, :y1 80, :x2 1152.0137939453125, :y2 369.78125, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 80, :x2 0, :y2 96, :width 1305.6, :height 1689.6} {:x1 1122.3079833984375, :y1 310.96875, :x2 1152.0137939453125, :y2 338.96875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 341.78125, :x2 731.8482666015625, :y2 369.78125, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "Instructions executing in machine mode have full privilege;"}, :properties {:color "yellow"}} {:id #uuid "635a09b3-8b43-40a8-80ba-6ea5c01851fe", :page 23, :position {:bounding {:x1 738.2509765625, :y1 341.78125, :x2 1064.61865234375, :y2 369.78125, :width 1305.6, :height 1689.6}, :rects ({:x1 738.2509765625, :y1 341.78125, :x2 1064.61865234375, :y2 369.78125, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "a CPU starts in machine mode. "}, :properties {:color "blue"}} {:id #uuid "635a09bb-2def-48e7-a963-0a1204abaa69", :page 23, :position {:bounding {:x1 0, :y1 96, :x2 1151.989990234375, :y2 400.609375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 96, :x2 0, :y2 112, :width 1305.6, :height 1689.6} {:x1 1064.6044921875, :y1 341.78125, :x2 1151.989990234375, :y2 369.78125, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 372.609375, :x2 696.985107421875, :y2 400.609375, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "Machine mode is mostly intended for configuring a computer."}, :properties {:color "green"}} {:id #uuid "635a09bf-4635-4003-9a04-3632f2666f46", :page 23, :position {:bounding {:x1 0, :y1 112, :x2 1151.994384765625, :y2 431.421875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 112, :x2 0, :y2 128, :width 1305.6, :height 1689.6} {:x1 703.556640625, :y1 372.609375, :x2 1151.994384765625, :y2 400.609375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 403.421875, :x2 537.5183715820312, :y2 431.421875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "Xv6 executes a few lines in machine mode and then changes to supervisor mode."}, :properties {:color "red"}} {:id #uuid "635a09ed-8353-4716-a6fb-848f4edce288", :page 23, :position {:bounding {:x1 191.046875, :y1 434.890625, :x2 963.07080078125, :y2 462.890625, :width 1305.6, :height 1689.6}, :rects ({:x1 191.046875, :y1 434.890625, :x2 963.07080078125, :y2 462.890625, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "In supervisor mode the CPU is allowed to execute privileged instructions"}, :properties {:color "yellow"}} {:id #uuid "635a0a45-d047-44fc-80f4-56a39be0dd72", :page 23, :position {:bounding {:x1 0, :y1 144, :x2 1151.9970703125, :y2 524.515625, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 144, :x2 0, :y2 160, :width 1305.6, :height 1689.6} {:x1 0, :y1 160, :x2 0, :y2 176, :width 1305.6, :height 1689.6} {:x1 976.555908203125, :y1 434.890625, :x2 1151.9893798828125, :y2 462.890625, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 465.703125, :x2 1151.9970703125, :y2 493.703125, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 496.515625, :x2 253.1927490234375, :y2 524.515625, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "for example, enabling and disabling interrupts, reading and writing the register that holds the address of a page table, etc."}, :properties {:color "blue"}} {:id #uuid "635a0a6f-bcc9-4281-9bfc-7f7b2f8b55b4", :page 23, :position {:bounding {:x1 0, :y1 176, :x2 1152.00146484375, :y2 586.15625, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 176, :x2 0, :y2 192, :width 1305.6, :height 1689.6} {:x1 0, :y1 192, :x2 0, :y2 208, :width 1305.6, :height 1689.6} {:x1 259.553955078125, :y1 496.515625, :x2 1151.989990234375, :y2 524.515625, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 527.34375, :x2 1152.00146484375, :y2 555.34375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 558.15625, :x2 905.02490234375, :y2 586.15625, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "If an application in user mode attempts to execute a privileged instruction, then the CPU doesn’t execute the instruction, but switches to supervisor mode so that supervisor-mode code can terminate the application, because it did something it shouldn’t be doing."}, :properties {:color "green"}} {:id #uuid "635a0b0e-48aa-4876-b617-b18df66f63e5", :page 10, :position {:bounding {:x1 336, :y1 115, :x2 969, :y2 388, :width 1305.6, :height 1689.6}, :rects (), :page 10}, :content {:text "[:span]", :image 1666845453514}, :properties {:color "yellow"}} {:id #uuid "635a0b31-278a-45e3-9f2e-a7cdda59f97c", :page 23, :position {:bounding {:x1 441.246337890625, :y1 588.96875, :x2 1020.5118408203125, :y2 616.96875, :width 1305.6, :height 1689.6}, :rects ({:x1 441.246337890625, :y1 588.96875, :x2 1020.5118408203125, :y2 616.96875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "An application can execute only user-mode instructions "}, :properties {:color "blue"}} {:id #uuid "635a0b35-e33b-49ff-9e2d-166c808bf242", :page 23, :position {:bounding {:x1 308.7044677734375, :y1 619.796875, :x2 702.8250732421875, :y2 647.796875, :width 1305.6, :height 1689.6}, :rects ({:x1 308.7044677734375, :y1 619.796875, :x2 702.8250732421875, :y2 647.796875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "and is said to be running in user space"}, :properties {:color "yellow"}} {:id #uuid "635a0b6f-79c0-4a3c-87ca-4a14765bce5f", :page 23, :position {:bounding {:x1 0, :y1 240, :x2 1151.982666015625, :y2 678.609375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 240, :x2 0, :y2 256, :width 1305.6, :height 1689.6} {:x1 775.6971435546875, :y1 619.796875, :x2 1151.982666015625, :y2 647.796875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 650.609375, :x2 921.802001953125, :y2 678.609375, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "the software in supervisor mode can also execute privileged instructions and is said to be running in kernel space"}, :properties {:color "blue"}} {:id #uuid "635a0b93-19af-4903-9c8c-d921c58fe4f5", :page 23, :position {:bounding {:x1 0, :y1 256, :x2 1151.5799560546875, :y2 709.421875, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 1305.6, :height 1689.6} {:x1 928.23388671875, :y1 650.609375, :x2 1151.5799560546875, :y2 678.609375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 681.421875, :x2 757.984375, :y2 709.421875, :width 1305.6, :height 1689.6}), :page 23}, :content {:text " The software running in kernel space (or in supervisor mode) is called the kernel."}, :properties {:color "red"}} {:id #uuid "635a0c03-fc27-4195-9213-1945027ab93c", :page 23, :position {:bounding {:x1 191.046875, :y1 712.890625, :x2 738.589111328125, :y2 740.890625, :width 1305.6, :height 1689.6}, :rects ({:x1 191.046875, :y1 712.890625, :x2 738.589111328125, :y2 740.890625, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "An application that wants to invoke a kernel function "}, :properties {:color "yellow"}} {:id #uuid "635a0c08-c9c4-4d51-9741-ce6e814e8291", :page 23, :position {:bounding {:x1 0, :y1 288, :x2 1152.0032958984375, :y2 771.703125, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 1305.6, :height 1689.6} {:x1 1100.718994140625, :y1 712.890625, :x2 1152.0032958984375, :y2 740.890625, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 743.703125, :x2 394.8343505859375, :y2 771.703125, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "must transition to the kernel. "}, :properties {:color "yellow"}} {:id #uuid "635a0c3e-4892-43aa-bc37-ac424ee820c2", :page 23, :position {:bounding {:x1 0, :y1 304, :x2 1152.003173828125, :y2 802.53125, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 1305.6, :height 1689.6} {:x1 394.820068359375, :y1 743.703125, :x2 1152.003173828125, :y2 771.703125, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 774.53125, :x2 958.65478515625, :y2 802.53125, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "CPUs provide a special instruction that switches the CPU from user mode to supervisor mode and enters the kernel at an entry point specified by the kerne"}, :properties {:color "blue"}} {:id #uuid "635a0c62-b7af-43c7-b56e-bf185084be30", :page 23, :position {:bounding {:x1 0, :y1 320, :x2 1152.0013427734375, :y2 837.703125, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 1305.6, :height 1689.6} {:x1 976.2091064453125, :y1 774.53125, :x2 1152.0013427734375, :y2 802.53125, :width 1305.6, :height 1689.6} {:x1 190.296875, :y1 803.703125, :x2 265.328125, :y2 837.703125, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 805.34375, :x2 547.1593017578125, :y2 833.34375, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "(RISC-V provides the ecall instruction for this purpose.)"}, :properties {:color "yellow"}} {:id #uuid "635a0c90-fe10-4990-bbd4-2533a423b78d", :page 23, :position {:bounding {:x1 0, :y1 336, :x2 1151.99462890625, :y2 894.984375, :width 1305.6, :height 1689.6}, :rects ({:x1 0, :y1 336, :x2 0, :y2 352, :width 1305.6, :height 1689.6} {:x1 0, :y1 352, :x2 0, :y2 368, :width 1305.6, :height 1689.6} {:x1 553.4776611328125, :y1 805.34375, :x2 1151.9896240234375, :y2 833.34375, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 836.171875, :x2 1151.99462890625, :y2 864.171875, :width 1305.6, :height 1689.6} {:x1 153.59375, :y1 866.984375, :x2 786.116455078125, :y2 894.984375, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "Once the CPU has switched to supervisor mode, the kernel can then validate the arguments of the system call, decide whether the application is allowed to perform the requested operation, and then deny it or execute it."}, :properties {:color "red"}} {:id #uuid "635a0cf3-04e5-4d1a-b47e-ded1f5b14acf", :page 23, :position {:bounding {:x1 153.59375, :y1 1040.328125, :x2 549.6150512695312, :y2 1081.328125, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 1040.328125, :x2 549.6150512695312, :y2 1081.328125, :width 1305.6, :height 1689.6}), :page 23}, :content {:text "2.3 Kernel organization"}, :properties {:color "yellow"}} {:id #uuid "635a0d00-18fc-4b8e-bc59-36a5b668f721", :page 24, :position {:bounding {:x1 153.59375, :y1 1010.5625, :x2 601.0717163085938, :y2 1051.5625, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 1010.5625, :x2 601.0717163085938, :y2 1051.5625, :width 1305.6, :height 1689.6}), :page 24}, :content {:text "2.4 Code: xv6 organization"}, :properties {:color "blue"}} {:id #uuid "635a0d0c-9ed3-4550-92ef-b75becc64f69", :page 24, :position {:bounding {:x1 153.59375, :y1 1225.609375, :x2 502.6751708984375, :y2 1266.609375, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 1225.609375, :x2 502.6751708984375, :y2 1266.609375, :width 1305.6, :height 1689.6}), :page 24}, :content {:text "2.5 Process overview"}, :properties {:color "yellow"}} {:id #uuid "635a0d1b-49e1-4af0-a6cd-e3b109bc0249", :page 27, :position {:bounding {:x1 153.59375, :y1 514.78125, :x2 849.66796875, :y2 555.78125, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 514.78125, :x2 849.66796875, :y2 555.78125, :width 1305.6, :height 1689.6}), :page 27}, :content {:text "2.6 Code: starting xv6 and the first process"}, :properties {:color "yellow"}} {:id #uuid "635a0d2b-8cc2-4da5-b924-cdb3fe07b96e", :page 28, :position {:bounding {:x1 153.59375, :y1 325.421875, :x2 408.24908447265625, :y2 366.421875, :width 1305.6, :height 1689.6}, :rects ({:x1 153.59375, :y1 325.421875, :x2 408.24908447265625, :y2 366.421875, :width 1305.6, :height 1689.6}), :page 28}, :content {:text "2.7 Real world"}, :properties {:color "yellow"}}], :extra {:page 10}}