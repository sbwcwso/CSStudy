{:highlights [{:id #uuid "63be00bb-d942-4a96-9279-0a3fa39f4e3a", :page 13, :position {:bounding {:x1 120, :y1 101, :x2 207.160888671875, :y2 128, :width 839.9999999999999, :height 1110}, :rects ({:x1 120, :y1 101, :x2 207.160888671875, :y2 128, :width 839.9999999999999, :height 1110}), :page 13}, :content {:text "Preface"}, :properties {:color "yellow"}} {:id #uuid "63be00d0-b91a-4f33-9f28-7aeed97fdbdc", :page 17, :position {:bounding {:x1 120, :y1 101, :x2 325.45965576171875, :y2 128, :width 839.9999999999999, :height 1110}, :rects ({:x1 120, :y1 101, :x2 325.45965576171875, :y2 128, :width 839.9999999999999, :height 1110}), :page 17}, :content {:text "1 List Processing"}, :properties {:color "yellow"}} {:id #uuid "63be0ad3-c6e3-4a7c-b63a-a2c9bc745b74", :page 17, :position {:bounding {:x1 144, :y1 185.78125, :x2 699.5535888671875, :y2 207.78125, :width 1008, :height 1332}, :rects ({:x1 144, :y1 185.78125, :x2 699.5535888671875, :y2 207.78125, :width 1008, :height 1332}), :page 17}, :content {:text "To the untutored eye, Lisp is a strange programming language."}, :properties {:color "yellow"}} {:id #uuid "63be124a-862d-4535-8a66-89a85217a366", :page 17, :position {:bounding {:x1 124.796875, :y1 336.484375, :x2 264.6102294921875, :y2 359.484375, :width 873.6, :height 1154.4}, :rects ({:x1 124.796875, :y1 336.484375, :x2 264.6102294921875, :y2 359.484375, :width 873.6, :height 1154.4}), :page 17}, :content {:text "1.1 Lisp Lists"}, :properties {:color "yellow"}} {:id #uuid "63be128c-d0e1-439e-aaca-85a8d1d7acd2", :page 17, :position {:bounding {:x1 124.796875, :y1 370.390625, :x2 616.5149536132812, :y2 390.390625, :width 873.6, :height 1154.4}, :rects ({:x1 124.796875, :y1 370.390625, :x2 616.5149536132812, :y2 390.390625, :width 873.6, :height 1154.4}), :page 17}, :content {:text "In Lisp, a list looks like this: '(rose violet daisy buttercup)"}, :properties {:color "red"}} {:id #uuid "63be12e6-3179-42f2-92ab-06485edf3ada", :page 17, :position {:bounding {:x1 0, :y1 352, :x2 748.7982788085938, :y2 679.8125, :width 873.6, :height 1154.4}, :rects ({:x1 0, :y1 352, :x2 0, :y2 368, :width 873.6, :height 1154.4} {:x1 0, :y1 368, :x2 0, :y2 384, :width 873.6, :height 1154.4} {:x1 150.6875, :y1 618.375, :x2 748.7848510742188, :y2 638.375, :width 873.6, :height 1154.4} {:x1 124.796875, :y1 639.09375, :x2 748.7982788085938, :y2 659.09375, :width 873.6, :height 1154.4} {:x1 124.796875, :y1 659.8125, :x2 242.16763305664062, :y2 679.8125, :width 873.6, :height 1154.4}), :page 17}, :content {:text "In Lisp, both data and programs are represented the same way; that is, they are both lists of words, numbers, or other lists, separated by whitespace and surrounded by parentheses."}, :properties {:color "yellow"}} {:id #uuid "63be12f8-8a06-4d4e-9310-4ac2a8353128", :page 17, :position {:bounding {:x1 150.6875, :y1 744.171875, :x2 546.5362548828125, :y2 764.171875, :width 873.6, :height 1154.4}, :rects ({:x1 150.6875, :y1 744.171875, :x2 546.5362548828125, :y2 764.171875, :width 873.6, :height 1154.4}), :page 17}, :content {:text "Here is another list, this time with a list inside of it:"}, :properties {:color "yellow"}} {:id #uuid "63be12fd-2e29-402e-957e-0e993a1fc59b", :page 17, :position {:bounding {:x1 162.234375, :y1 764.71875, :x2 472.3022155761719, :y2 786.71875, :width 873.6, :height 1154.4}, :rects ({:x1 162.234375, :y1 764.71875, :x2 472.3022155761719, :y2 786.71875, :width 873.6, :height 1154.4}), :page 17}, :content {:text "'(this list has (a list inside of it))"}, :properties {:color "red"}} {:id #uuid "63be137e-bd7f-46a6-99fa-7a7d816f6c10", :page 17, :position {:bounding {:x1 124.796875, :y1 873.515625, :x2 273.88494873046875, :y2 893.515625, :width 873.6, :height 1154.4}, :rects ({:x1 124.796875, :y1 873.515625, :x2 273.88494873046875, :y2 893.515625, :width 873.6, :height 1154.4}), :page 17}, :content {:text "1.1.1 Lisp Atoms"}, :properties {:color "yellow"}} {:id #uuid "63be1407-37b8-411c-bbc7-5b2a3add4105", :page 18, :position {:bounding {:x1 150.6875, :y1 165.078125, :x2 607.5602416992188, :y2 185.078125, :width 873.6, :height 1154.4}, :rects ({:x1 150.6875, :y1 165.078125, :x2 607.5602416992188, :y2 185.078125, :width 873.6, :height 1154.4}), :page 18}, :content {:text "In a list, atoms are separated from each other by whitespace"}, :properties {:color "yellow"}} {:id #uuid "63be168e-7bc0-4dc9-8560-7f174152d6b2", :page 18, :position {:bounding {:x1 0, :y1 592, :x2 806.3965454101562, :y2 1082.109375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 592, :x2 0, :y2 608, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1038.78125, :x2 806.3965454101562, :y2 1059.78125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1061.109375, :x2 270.2193603515625, :y2 1082.109375, :width 940.8, :height 1243.1999999999998}), :page 18}, :content {:text "In Lisp, all of the quoted text including the punctuation mark and the blank spaces is a single atom."}, :properties {:color "yellow"}} {:id #uuid "63be1693-78d9-4b25-98bd-65178ccd815b", :page 18, :position {:bounding {:x1 174.71875, :y1 1003.375, :x2 640.4437255859375, :y2 1026.375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 1003.375, :x2 640.4437255859375, :y2 1026.375, :width 940.8, :height 1243.1999999999998}), :page 18}, :content {:text "'(this list includes \"text between quotation marks.\")"}, :properties {:color "red"}} {:id #uuid "63be1722-d647-4e4b-b611-672e2cf2e695", :page 19, :position {:bounding {:x1 134.390625, :y1 120.046875, :x2 373.1933288574219, :y2 141.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 120.046875, :x2 373.1933288574219, :y2 141.046875, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "1.1.2 Whitespace in Lists"}, :properties {:color "yellow"}} {:id #uuid "63be175d-0575-4ec7-a0bb-5f4a74c7e1f0", :page 19, :position {:bounding {:x1 0, :y1 160, :x2 806.3995971679688, :y2 373.328125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 160, :x2 0, :y2 176, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 330.015625, :x2 806.3995971679688, :y2 351.015625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 352.328125, :x2 202.1727752685547, :y2 373.328125, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "Extra whitespace and newlines are designed to make a list more readable by humans."}, :properties {:color "yellow"}} {:id #uuid "63be1763-6b4d-41d3-a72e-33c9a298d0c0", :page 19, :position {:bounding {:x1 215.25, :y1 352.328125, :x2 806.3942260742188, :y2 373.328125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 215.25, :y1 352.328125, :x2 806.3942260742188, :y2 373.328125, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "When Lisp reads the expression, it gets rid of all the extra whitespace"}, :properties {:color "red"}} {:id #uuid "63be17ab-898a-4e74-872d-b4977cc11e3e", :page 19, :position {:bounding {:x1 134.390625, :y1 579.234375, :x2 515.732666015625, :y2 600.234375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 579.234375, :x2 515.732666015625, :y2 600.234375, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "1.1.3 GNU Emacs Helps You Type Lists"}, :properties {:color "yellow"}} {:id #uuid "63be17b4-4613-4ac9-aebc-206bbf0cfd4c", :page 19, :position {:bounding {:x1 134.390625, :y1 910.765625, :x2 350.4784240722656, :y2 935.765625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 910.765625, :x2 350.4784240722656, :y2 935.765625, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "1.2 Run a Program"}, :properties {:color "yellow"}} {:id #uuid "63be17ee-e2e0-48b0-8ef1-59d4371a592c", :page 19, :position {:bounding {:x1 134.390625, :y1 947.28125, :x2 547.6939086914062, :y2 968.28125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 947.28125, :x2 547.6939086914062, :y2 968.28125, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "A list in Lisp—any list—is a program ready to run."}, :properties {:color "yellow"}} {:id #uuid "63be17fa-b2a4-4949-8177-3baf420cd965", :page 19, :position {:bounding {:x1 0, :y1 544, :x2 805.3579711914062, :y2 990.609375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 544, :x2 0, :y2 560, :width 940.8, :height 1243.1999999999998} {:x1 552.9296264648438, :y1 947.28125, :x2 805.3579711914062, :y2 968.28125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 969.609375, :x2 645.8257446289062, :y2 990.609375, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "If you run it (for which the Lisp jargon is evaluate), the computer will do one of three things:"}, :properties {:color "red"}} {:id #uuid "63be1f0c-33e0-4d6d-ae84-99ff01d278ab", :page 19, :position {:bounding {:x1 0, :y1 560, :x2 806.4044799804688, :y2 1012.921875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 560, :x2 0, :y2 576, :width 940.8, :height 1243.1999999999998} {:x1 657.140625, :y1 969.609375, :x2 806.4044799804688, :y2 990.609375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 991.921875, :x2 353.1815490722656, :y2 1012.921875, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "do nothing except return to you the list itself; "}, :properties {:color "yellow"}} {:id #uuid "63be1f14-cf0e-4c22-8810-27a57cf26066", :page 19, :position {:bounding {:x1 362.546142578125, :y1 991.921875, :x2 581.3685913085938, :y2 1012.921875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 362.546142578125, :y1 991.921875, :x2 581.3685913085938, :y2 1012.921875, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "end you an error message"}, :properties {:color "yellow"}} {:id #uuid "63be1f1c-bc97-453a-973a-db2261d2e90b", :page 19, :position {:bounding {:x1 0, :y1 576, :x2 806.402587890625, :y2 1035.234375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 576, :x2 0, :y2 592, :width 940.8, :height 1243.1999999999998} {:x1 612.6154174804688, :y1 991.921875, :x2 806.402587890625, :y2 1012.921875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1014.234375, :x2 465.83013916015625, :y2 1035.234375, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text " treat the first symbol in the list as a command to do something."}, :properties {:color "red"}} {:id #uuid "63be1ff4-072f-4e67-b1c9-756f5cc89e91", :page 19, :position {:bounding {:x1 0, :y1 640, :x2 806.4097290039062, :y2 1126.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 640, :x2 0, :y2 656, :width 940.8, :height 1243.1999999999998} {:x1 444.5851745605469, :y1 1083.421875, :x2 806.4097290039062, :y2 1104.421875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1105.734375, :x2 599.3106689453125, :y2 1126.734375, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "when it precedes a list, it tells Lisp to do nothing with the list, other than take it as it is written."}, :properties {:color "yellow"}} {:id #uuid "63be1fff-b958-4261-ae4e-0d1e93299334", :page 19, :position {:bounding {:x1 0, :y1 656, :x2 806.4009399414062, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 656, :x2 0, :y2 672, :width 940.8, :height 1243.1999999999998} {:x1 610.5, :y1 1105.734375, :x2 806.4009399414062, :y2 1126.734375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1128.046875, :x2 806.3969116210938, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}), :page 19}, :content {:text "But if there is no quote preceding a list, the first item of the list is special: it is a command for the computer"}, :properties {:color "red"}} {:id #uuid "63be2009-0509-4e02-9adc-feafc3c0cb32", :page 20, :position {:bounding {:x1 217.7666473388672, :y1 120.046875, :x2 597.9005126953125, :y2 141.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 217.7666473388672, :y1 120.046875, :x2 597.9005126953125, :y2 141.046875, :width 940.8, :height 1243.1999999999998}), :page 20}, :content {:text "In Lisp, these commands are called functions."}, :properties {:color "yellow"}} {:id #uuid "63be20c6-1184-4ecb-ac6f-51b0bafbbbe5", :page 20, :position {:bounding {:x1 0, :y1 64, :x2 806.4053955078125, :y2 255.25, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 64, :x2 0, :y2 80, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 80, :x2 0, :y2 96, :width 940.8, :height 1243.1999999999998} {:x1 584.3681640625, :y1 189.625, :x2 806.4002075195312, :y2 210.625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 211.9375, :x2 806.4053955078125, :y2 232.9375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 234.25, :x2 434.328125, :y2 255.25, :width 940.8, :height 1243.1999999999998}), :page 20}, :content {:text "ere is how you can evaluate such a list: place your cursor immediately after the right hand parenthesis of the following list and then type C-x C-e:"}, :properties {:color "yellow"}} {:id #uuid "63be20fb-245a-4f6c-8bae-fa733dbe971a", :page 20, :position {:bounding {:x1 134.390625, :y1 691.640625, :x2 481.62628173828125, :y2 716.640625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 691.640625, :x2 481.62628173828125, :y2 716.640625, :width 940.8, :height 1243.1999999999998}), :page 20}, :content {:text "1.3 Generate an Error Message"}, :properties {:color "yellow"}} {:id #uuid "63be21ac-ea4e-45ab-ac61-03e53e613e4b", :page 22, :position {:bounding {:x1 134.390625, :y1 409.046875, :x2 623.0203857421875, :y2 434.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 409.046875, :x2 623.0203857421875, :y2 434.046875, :width 940.8, :height 1243.1999999999998}), :page 22}, :content {:text "1.4 Symbol Names and Function Definitions"}, :properties {:color "yellow"}} {:id #uuid "63be21e1-0b52-4b42-acd3-6b2f50e7091e", :page 21, :position {:bounding {:x1 0, :y1 304, :x2 806.3817749023438, :y2 551.703125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 304, :x2 0, :y2 320, :width 940.8, :height 1243.1999999999998} {:x1 183.265625, :y1 505.671875, :x2 806.3817749023438, :y2 526.671875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 526.703125, :x2 276.25, :y2 551.703125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 530.703125, :x2 276.25, :y2 549.296875, :width 940.8, :height 1243.1999999999998}), :page 21}, :content {:text "When you typed C-x C-e, you made an interactive call to the command eval-last-sexp."}, :properties {:color "red"}} {:id #uuid "63be21f5-27b9-44be-963a-9459ded3601e", :page 21, :position {:bounding {:x1 290.625, :y1 526.703125, :x2 612.4163818359375, :y2 551.703125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 290.625, :y1 526.703125, :x2 612.4163818359375, :y2 551.703125, :width 940.8, :height 1243.1999999999998} {:x1 329.6875, :y1 530.703125, :x2 340.84375, :y2 549.296875, :width 940.8, :height 1243.1999999999998}), :page 21}, :content {:text "eval is an abbreviation for “evaluate”"}, :properties {:color "yellow"}} {:id #uuid "63be21fc-555e-4e34-8d9b-62b59ed3d5fb", :page 21, :position {:bounding {:x1 0, :y1 320, :x2 806.3997192382812, :y2 571.3125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 320, :x2 0, :y2 336, :width 940.8, :height 1243.1999999999998} {:x1 658.769775390625, :y1 528, :x2 806.3997192382812, :y2 553, :width 940.8, :height 1243.1999999999998} {:x1 658.78125, :y1 530.703125, :x2 806.3997192382812, :y2 549.296875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 550.3125, :x2 409.8439636230469, :y2 571.3125, :width 940.8, :height 1243.1999999999998}), :page 21}, :content {:text "sexp is an abbreviation for “symbolic expression”"}, :properties {:color "yellow"}} {:id #uuid "63be2370-a560-4801-b9e5-34bff1572f2f", :page 22, :position {:bounding {:x1 134.390625, :y1 957.640625, :x2 405.27349853515625, :y2 982.640625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 957.640625, :x2 405.27349853515625, :y2 982.640625, :width 940.8, :height 1243.1999999999998}), :page 22}, :content {:text "1.5 The Lisp Interpreter"}, :properties {:color "yellow"}} {:id #uuid "63be237e-b68a-492e-9ce6-ec6e68df9946", :page 23, :position {:bounding {:x1 134.390625, :y1 914.515625, :x2 337.0224609375, :y2 935.515625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 914.515625, :x2 337.0224609375, :y2 935.515625, :width 940.8, :height 1243.1999999999998}), :page 23}, :content {:text "1.5.1 Byte Compiling"}, :properties {:color "yellow"}} {:id #uuid "63be2389-ccc7-42fe-97b9-20ea33bec134", :page 24, :position {:bounding {:x1 134.390625, :y1 248.171875, :x2 295.940185546875, :y2 273.171875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 248.171875, :x2 295.940185546875, :y2 273.171875, :width 940.8, :height 1243.1999999999998}), :page 24}, :content {:text "1.6 Evaluation"}, :properties {:color "yellow"}} {:id #uuid "63be248f-0a6c-4d45-9438-474fcfba1991", :page 24, :position {:bounding {:x1 134.390625, :y1 748.578125, :x2 397.37420654296875, :y2 769.578125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 748.578125, :x2 397.37420654296875, :y2 769.578125, :width 940.8, :height 1243.1999999999998}), :page 24}, :content {:text "1.6.1 Evaluating Inner Lists"}, :properties {:color "yellow"}} {:id #uuid "63be249f-2a5f-4b54-b858-cd1a1e9bc73f", :page 25, :position {:bounding {:x1 134.390625, :y1 543.5, :x2 279.82525634765625, :y2 568.5, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 543.5, :x2 279.82525634765625, :y2 568.5, :width 940.8, :height 1243.1999999999998}), :page 25}, :content {:text "1.7 Variables"}, :properties {:color "yellow"}} {:id #uuid "63be24da-957e-4903-9cd7-f112d3cbc451", :page 26, :position {:bounding {:x1 134.390625, :y1 303.84375, :x2 645.2146606445312, :y2 324.84375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 303.84375, :x2 645.2146606445312, :y2 324.84375, :width 940.8, :height 1243.1999999999998}), :page 26}, :content {:text "1.7.1 Error Message for a Symbol Without a Function"}, :properties {:color "yellow"}} {:id #uuid "63be24e5-7fb7-4b3f-9697-6cab3e15315d", :page 26, :position {:bounding {:x1 134.390625, :y1 783.078125, :x2 615.8768310546875, :y2 804.078125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 783.078125, :x2 615.8768310546875, :y2 804.078125, :width 940.8, :height 1243.1999999999998}), :page 26}, :content {:text "1.7.2 Error Message for a Symbol Without a Value"}, :properties {:color "yellow"}} {:id #uuid "63be24f3-3d1a-4d78-b136-035ab20d0537", :page 27, :position {:bounding {:x1 134.390625, :y1 418.328125, :x2 298.62603759765625, :y2 443.328125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 418.328125, :x2 298.62603759765625, :y2 443.328125, :width 940.8, :height 1243.1999999999998}), :page 27}, :content {:text "1.8 Arguments"}, :properties {:color "yellow"}} {:id #uuid "63be250a-d67d-4c9e-a90e-352f3cb2940b", :page 27, :position {:bounding {:x1 134.390625, :y1 792.4375, :x2 411.8648376464844, :y2 813.4375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 792.4375, :x2 411.8648376464844, :y2 813.4375, :width 940.8, :height 1243.1999999999998}), :page 27}, :content {:text "1.8.1 Arguments’ Data Types"}, :properties {:color "yellow"}} {:id #uuid "63be2513-347a-4993-babb-75ac925beb4d", :page 28, :position {:bounding {:x1 134.390625, :y1 704.03125, :x2 635.0719604492188, :y2 725.03125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 704.03125, :x2 635.0719604492188, :y2 725.03125, :width 940.8, :height 1243.1999999999998}), :page 28}, :content {:text "1.8.2 An Argument as the Value of a Variable or List"}, :properties {:color "yellow"}} {:id #uuid "63be251e-f4a9-4ae1-aba9-7522b0e53711", :page 29, :position {:bounding {:x1 134.390625, :y1 120.046875, :x2 484.1639709472656, :y2 141.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 120.046875, :x2 484.1639709472656, :y2 141.046875, :width 940.8, :height 1243.1999999999998}), :page 29}, :content {:text "1.8.3 Variable Number of Arguments"}, :properties {:color "yellow"}} {:id #uuid "63be252d-ac38-48a4-a61e-0c9b81427a6a", :page 29, :position {:bounding {:x1 134.390625, :y1 620.328125, :x2 630.187255859375, :y2 641.328125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 620.328125, :x2 630.187255859375, :y2 641.328125, :width 940.8, :height 1243.1999999999998}), :page 29}, :content {:text "1.8.4 Using the Wrong Type Object as an Argument"}, :properties {:color "yellow"}} {:id #uuid "63be2533-7e40-455e-849f-ec6fe9efb302", :page 30, :position {:bounding {:x1 134.390625, :y1 766.484375, :x2 389.985107421875, :y2 787.484375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 766.484375, :x2 389.985107421875, :y2 787.484375, :width 940.8, :height 1243.1999999999998}), :page 30}, :content {:text "1.8.5 The message Function"}, :properties {:color "yellow"}} {:id #uuid "63be2557-5db4-438d-9178-dee17bcefc74", :page 32, :position {:bounding {:x1 134.390625, :y1 117.015625, :x2 519.1918334960938, :y2 142.015625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 117.015625, :x2 519.1918334960938, :y2 142.015625, :width 940.8, :height 1243.1999999999998}), :page 32}, :content {:text "1.9 Setting the Value of a Variable"}, :properties {:color "yellow"}} {:id #uuid "63be255c-95c5-4b1b-9de9-18d3cf30c300", :page 32, :position {:bounding {:x1 134.390625, :y1 315.171875, :x2 278.87921142578125, :y2 336.171875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 315.171875, :x2 278.87921142578125, :y2 336.171875, :width 940.8, :height 1243.1999999999998}), :page 32}, :content {:text "1.9.1 Using set"}, :properties {:color "yellow"}} {:id #uuid "63be2570-549e-4946-92e7-d642a5a999bf", :page 32, :position {:bounding {:x1 134.390625, :y1 1075.046875, :x2 288.6371154785156, :y2 1096.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 1075.046875, :x2 288.6371154785156, :y2 1096.046875, :width 940.8, :height 1243.1999999999998}), :page 32}, :content {:text "1.9.2 Using setq"}, :properties {:color "yellow"}} {:id #uuid "63be25bc-1508-448e-a227-e1c77c7fa4f8", :page 33, :position {:bounding {:x1 0, :y1 16, :x2 806.387451171875, :y2 163.375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 16, :x2 0, :y2 32, :width 940.8, :height 1243.1999999999998} {:x1 336.46875, :y1 118.75, :x2 806.387451171875, :y2 143.75, :width 940.8, :height 1243.1999999999998} {:x1 375.515625, :y1 122.046875, :x2 806.387451171875, :y2 140.640625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 142.375, :x2 449.47894287109375, :y2 163.375, :width 940.8, :height 1243.1999999999998}), :page 33}, :content {:text "setq. This special form is just like set except that the first argument is quoted automatically"}, :properties {:color "yellow"}} {:id #uuid "63be25c4-792a-4338-af96-c4ab7abefc66", :page 33, :position {:bounding {:x1 0, :y1 48, :x2 806.4054565429688, :y2 208, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 48, :x2 0, :y2 64, :width 940.8, :height 1243.1999999999998} {:x1 471.96875, :y1 164.6875, :x2 806.4054565429688, :y2 185.6875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 187, :x2 538.4126586914062, :y2 208, :width 940.8, :height 1243.1999999999998}), :page 33}, :content {:text "setq permits you to set several different variables to different values, all in one expression."}, :properties {:color "red"}} {:id #uuid "63be25d7-bbf7-4511-9cc8-a81292c3a7df", :page 32, :position {:bounding {:x1 174.71875, :y1 412.734375, :x2 570.147705078125, :y2 435.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 412.734375, :x2 570.147705078125, :y2 435.734375, :width 940.8, :height 1243.1999999999998}), :page 32}, :content {:text "(set 'flowers '(rose violet daisy buttercup))"}, :properties {:color "yellow"}} {:id #uuid "63be25f4-dd74-4b6f-9269-b1c21610ecdd", :page 33, :position {:bounding {:x1 134.390625, :y1 744.640625, :x2 275.1943359375, :y2 765.640625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 744.640625, :x2 275.1943359375, :y2 765.640625, :width 940.8, :height 1243.1999999999998}), :page 33}, :content {:text "1.9.3 Counting"}, :properties {:color "yellow"}} {:id #uuid "63be2602-55f7-4a8f-8a99-38d27b1e302b", :page 34, :position {:bounding {:x1 134.390625, :y1 353.390625, :x2 297.0124816894531, :y2 378.390625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 353.390625, :x2 297.0124816894531, :y2 378.390625, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "1.10 Summary"}, :properties {:color "yellow"}} {:id #uuid "63be262f-fd06-4ffc-ae64-3eb90004657c", :page 34, :position {:bounding {:x1 174.71875, :y1 486.25, :x2 779.0653686523438, :y2 507.25, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 486.25, :x2 779.0653686523438, :y2 507.25, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "Lisp programs are made up of expressions, which are lists or single atoms."}, :properties {:color "yellow"}} {:id #uuid "63be263d-612a-446f-bf87-66889f0d56e9", :page 34, :position {:bounding {:x1 0, :y1 256, :x2 806.4094848632812, :y2 558.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 256, :x2 0, :y2 272, :width 940.8, :height 1243.1999999999998} {:x1 174.69297790527344, :y1 514.734375, :x2 806.4094848632812, :y2 535.734375, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 537.046875, :x2 604.0903930664062, :y2 558.046875, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "Lists are made up of zero or more atoms or inner lists, separated by whitespace and surrounded by parentheses. A list can be empty."}, :properties {:color "yellow"}} {:id #uuid "63be264c-9376-4973-a477-078caea7769f", :page 34, :position {:bounding {:x1 0, :y1 288, :x2 806.4014892578125, :y2 631.171875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 304, :x2 0, :y2 320, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 565.53125, :x2 806.4014892578125, :y2 586.53125, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 587.84375, :x2 806.3936767578125, :y2 608.84375, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 610.171875, :x2 248.7521514892578, :y2 631.171875, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "Atoms are multi-character symbols, like forward-paragraph, single character symbols like +, strings of characters between double quotation marks, or numbers."}, :properties {:color "yellow"}} {:id #uuid "63be264f-bf2b-4cce-aacc-a28505507fd1", :page 34, :position {:bounding {:x1 174.71875, :y1 638.65625, :x2 408.48193359375, :y2 659.65625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 638.65625, :x2 408.48193359375, :y2 659.65625, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "A number evaluates to itself."}, :properties {:color "yellow"}} {:id #uuid "63be2652-e12b-4389-89d4-c79cf8db5dd2", :page 34, :position {:bounding {:x1 174.69297790527344, :y1 667.140625, :x2 621.1255493164062, :y2 688.140625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.69297790527344, :y1 667.140625, :x2 621.1255493164062, :y2 688.140625, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "A string between double quotes also evaluates to itself."}, :properties {:color "yellow"}} {:id #uuid "63be2656-c0c9-4fdb-861e-bf841823656f", :page 34, :position {:bounding {:x1 174.71875, :y1 695.625, :x2 659.2791748046875, :y2 716.625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 695.625, :x2 659.2791748046875, :y2 716.625, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "When you evaluate a symbol by itself, its value is returned."}, :properties {:color "red"}} {:id #uuid "63be265f-dd29-4ab5-99ae-7f9a3f3d4a1b", :page 34, :position {:bounding {:x1 0, :y1 384, :x2 806.4009399414062, :y2 789.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 384, :x2 0, :y2 400, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 400, :x2 0, :y2 416, :width 940.8, :height 1243.1999999999998} {:x1 174.69297790527344, :y1 724.109375, :x2 806.4009399414062, :y2 745.109375, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 746.421875, :x2 806.046142578125, :y2 767.421875, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 768.734375, :x2 610.6278076171875, :y2 789.734375, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "When you evaluate a list, the Lisp interpreter looks at the first symbol in the list and then at the function definition bound to that symbol. Then the instructions in the function definition are carried out."}, :properties {:color "yellow"}} {:id #uuid "63be2663-aa02-465f-ae36-9bd4bb945b5a", :page 34, :position {:bounding {:x1 0, :y1 432, :x2 806.390625, :y2 862.84375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 448, :x2 0, :y2 464, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 797.21875, :x2 805.666748046875, :y2 818.21875, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 819.53125, :x2 806.390625, :y2 840.53125, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 841.84375, :x2 221.27169799804688, :y2 862.84375, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "A single-quote ‘'’ tells the Lisp interpreter that it should return the following expression as written, and not evaluate it as it would if the quote were not there."}, :properties {:color "red"}} {:id #uuid "63be266d-e1cc-4338-9806-34e836d7ad43", :page 34, :position {:bounding {:x1 0, :y1 480, :x2 806.400146484375, :y2 935.96875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 480, :x2 0, :y2 496, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 496, :x2 0, :y2 512, :width 940.8, :height 1243.1999999999998} {:x1 174.69297790527344, :y1 870.328125, :x2 626.609375, :y2 891.328125, :width 940.8, :height 1243.1999999999998} {:x1 637.640625, :y1 870.328125, :x2 806.400146484375, :y2 891.328125, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 892.65625, :x2 806.3980712890625, :y2 913.65625, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 914.96875, :x2 489.5792236328125, :y2 935.96875, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "Arguments are the information passed to a function. The arguments to a function are computed by evaluating the rest of the elements of the list of which the function is the first element."}, :properties {:color "yellow"}} {:id #uuid "63be2677-369e-4c22-b4fd-868f23e26976", :page 34, :position {:bounding {:x1 0, :y1 528, :x2 806.4036865234375, :y2 1009.078125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 528, :x2 0, :y2 544, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 544, :x2 0, :y2 560, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 943.453125, :x2 805.4005126953125, :y2 964.453125, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 965.765625, :x2 806.4036865234375, :y2 986.765625, :width 940.8, :height 1243.1999999999998} {:x1 174.71875, :y1 988.078125, :x2 665.2720947265625, :y2 1009.078125, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "A function always returns a value when it is evaluated (unless it gets an error); in addition, it may also carry out some action that is a side effect. In many cases, a function’s primary purpose is to create a side effect."}, :properties {:color "red"}} {:id #uuid "63be2680-0d34-4133-85f9-75c37ad88946", :page 34, :position {:bounding {:x1 134.390625, :y1 1040.734375, :x2 292.4341735839844, :y2 1065.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 1040.734375, :x2 292.4341735839844, :y2 1065.734375, :width 940.8, :height 1243.1999999999998}), :page 34}, :content {:text "1.11 Exercises"}, :properties {:color "yellow"}} {:id #uuid "63be7999-90f2-459b-ba96-ddd973892c31", :page 36, :position {:bounding {:x1 134.390625, :y1 113.359375, :x2 449.4200439453125, :y2 143.359375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 113.359375, :x2 449.4200439453125, :y2 143.359375, :width 940.8, :height 1243.1999999999998}), :page 36}, :content {:text "2 Practicing Evaluation"}, :properties {:color "yellow"}} {:id #uuid "63be79cd-9389-4a45-8493-61a739c775f9", :page 36, :position {:bounding {:x1 134.390625, :y1 776.40625, :x2 329.66217041015625, :y2 801.40625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 776.40625, :x2 329.66217041015625, :y2 801.40625, :width 940.8, :height 1243.1999999999998}), :page 36}, :content {:text "2.1 Buffer Names"}, :properties {:color "yellow"}} {:id #uuid "63be79f7-59c1-4f8b-af42-01caa0fbd66f", :page 36, :position {:bounding {:x1 0, :y1 448, :x2 806.3946533203125, :y2 856.234375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 448, :x2 0, :y2 464, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 812.921875, :x2 806.3946533203125, :y2 837.921875, :width 940.8, :height 1243.1999999999998} {:x1 427.109375, :y1 814.921875, :x2 806.3946533203125, :y2 833.515625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 835.234375, :x2 386.7957763671875, :y2 856.234375, :width 940.8, :height 1243.1999999999998}), :page 36}, :content {:text "The two functions, buffer-name and buffer-file-name, show the difference between a file and a buffer."}, :properties {:color "yellow"}} {:id #uuid "63be7a55-47a3-418b-8697-c123705b8237", :page 37, :position {:bounding {:x1 0, :y1 192, :x2 806.4076538085938, :y2 442.453125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 192, :x2 0, :y2 208, :width 940.8, :height 1243.1999999999998} {:x1 475.20458984375, :y1 399.140625, :x2 806.4076538085938, :y2 424.140625, :width 940.8, :height 1243.1999999999998} {:x1 616.625, :y1 401.140625, :x2 806.4076538085938, :y2 419.734375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 421.453125, :x2 247.868896484375, :y2 442.453125, :width 940.8, :height 1243.1999999999998}), :page 37}, :content {:text "The symbol nil is from the Latin word for “nothing”; "}, :properties {:color "yellow"}} {:id #uuid "63be7a91-a82b-4253-b1f5-a57589dbcb06", :page 37, :position {:bounding {:x1 140.9092559814453, :y1 443.765625, :x2 793.9982299804688, :y2 464.765625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 140.9092559814453, :y1 443.765625, :x2 793.9982299804688, :y2 464.765625, :width 940.8, :height 1243.1999999999998}), :page 37}, :content {:text "In Lisp, nil is also used to mean “false” and is a synonym for the empty list, ()"}, :properties {:color "yellow"}} {:id #uuid "63be7aa8-d046-4636-b0a8-d3798d243457", :page 37, :position {:bounding {:x1 0, :y1 272, :x2 806.4194946289062, :y2 561.671875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 272, :x2 0, :y2 288, :width 940.8, :height 1243.1999999999998} {:x1 169.19313049316406, :y1 515.65625, :x2 806.4194946289062, :y2 536.65625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 536.671875, :x2 555.362548828125, :y2 561.671875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 540.671875, :x2 453.2404479980469, :y2 559.265625, :width 940.8, :height 1243.1999999999998}), :page 37}, :content {:text "In the expressions, the parentheses tell the Lisp interpreter to treat buffer-name and buffer-file-name as functions"}, :properties {:color "red"}} {:id #uuid "63be7aad-2f55-4784-8595-5c8b0e616c57", :page 37, :position {:bounding {:x1 0, :y1 288, :x2 806.4022216796875, :y2 581.28125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 288, :x2 0, :y2 304, :width 940.8, :height 1243.1999999999998} {:x1 565.9680786132812, :y1 537.96875, :x2 806.4022216796875, :y2 558.96875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 560.28125, :x2 671.328125, :y2 581.28125, :width 940.8, :height 1243.1999999999998}), :page 37}, :content {:text "without the parentheses, the interpreter would attempt to evaluate the symbols as variables. "}, :properties {:color "yellow"}} {:id #uuid "63be7abf-0dd3-4e2d-ab29-95ff6b7b14ca", :page 37, :position {:bounding {:x1 0, :y1 432, :x2 806.392333984375, :y2 787.0625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 432, :x2 0, :y2 448, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 743.75, :x2 806.392333984375, :y2 764.75, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 766.0625, :x2 438.5994567871094, :y2 787.0625, :width 940.8, :height 1243.1999999999998}), :page 37}, :content {:text "The word “buffer”, by the way, comes from the meaning of the word as a cushion that deadens the force of a collision."}, :properties {:color "yellow"}} {:id #uuid "63be7cc6-3bf1-4349-944c-aeaf6bec2eed", :page 38, :position {:bounding {:x1 134.390625, :y1 485.375, :x2 349.6365661621094, :y2 510.375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 485.375, :x2 349.6365661621094, :y2 510.375, :width 940.8, :height 1243.1999999999998}), :page 38}, :content {:text "2.2 Getting Buffers"}, :properties {:color "yellow"}} {:id #uuid "63be7cd6-f732-41cb-83ad-e93726bfcdf3", :page 38, :position {:bounding {:x1 0, :y1 400, :x2 806.057861328125, :y2 770.296875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 400, :x2 0, :y2 416, :width 940.8, :height 1243.1999999999998} {:x1 359.6869812011719, :y1 726.984375, :x2 806.057861328125, :y2 747.984375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 749.296875, :x2 299.078125, :y2 770.296875, :width 940.8, :height 1243.1999999999998}), :page 38}, :content {:text "To get a buffer itself, you need to use a function such as current-buffer."}, :properties {:color "yellow"}} {:id #uuid "63be7d28-c3b1-4790-90ce-eebbb6d7bada", :page 38, :position {:bounding {:x1 0, :y1 656, :x2 806.4081420898438, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 656, :x2 0, :y2 672, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 1105.734375, :x2 806.4081420898438, :y2 1126.734375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1128.046875, :x2 806.3974609375, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}), :page 38}, :content {:text "A related function is other-buffer. This returns the most recently selected buffer other than the one you are in currently, not a printed representation of its"}, :properties {:color "yellow"}} {:id #uuid "63be844b-dde7-493b-addd-02ba82868a8a", :page 39, :position {:bounding {:x1 114, :y1 249.75, :x2 315.6747131347656, :y2 270.75, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 249.75, :x2 315.6747131347656, :y2 270.75, :width 798, :height 1054.5}), :page 39}, :content {:text "2.3 Switching Buffers"}, :properties {:color "yellow"}} {:id #uuid "63be8654-6efb-4a4b-b19c-12b377e03144", :page 39, :position {:bounding {:x1 148.1875, :y1 532.96875, :x2 394.1540222167969, :y2 551.96875, :width 798, :height 1054.5}, :rects ({:x1 148.1875, :y1 532.96875, :x2 394.1540222167969, :y2 551.96875, :width 798, :height 1054.5}), :page 39}, :content {:text "(switch-to-buffer (other-buffer))"}, :properties {:color "yellow"}} {:id #uuid "63be8a69-6288-48bd-8981-442aa269ad97", :page 40, :position {:bounding {:x1 137.65625, :y1 237.4375, :x2 657.6290893554688, :y2 259.4375, :width 798, :height 1054.5}, :rects ({:x1 137.65625, :y1 237.4375, :x2 277.5817565917969, :y2 259.4375, :width 798, :height 1054.5} {:x1 270.15625, :y1 241.4375, :x2 657.6290893554688, :y2 258.4375, :width 798, :height 1054.5}), :page 40}, :content {:text "switch-to-buffer is designed for humans and does two different things"}, :properties {:color "yellow"}} {:id #uuid "63be8a88-dc36-4957-87b2-4ebb799fec4e", :page 40, :position {:bounding {:x1 0, :y1 126, :x2 806.408935546875, :y2 325.265625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 126, :x2 0, :y2 145, :width 940.8, :height 1243.1999999999998} {:x1 794, :y1 281.9375, :x2 806.408935546875, :y2 302.9375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 304.265625, :x2 594.8963012695312, :y2 325.265625, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "it switches the buffer to which Emacs’s attention is directed"}, :properties {:color "red"}} {:id #uuid "63be8b0d-fcbf-42ca-a0f0-309b93f4df11", :page 40, :position {:bounding {:x1 0, :y1 142, :x2 806.4004516601562, :y2 347.578125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 142, :x2 0, :y2 161, :width 940.8, :height 1243.1999999999998} {:x1 640.5067749023438, :y1 304.265625, :x2 806.4004516601562, :y2 325.265625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 326.578125, :x2 482.797607421875, :y2 347.578125, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "it switches the buffer displayed in the window to the new buffer"}, :properties {:color "yellow"}} {:id #uuid "63be8b15-3576-443b-ae42-abd74f2081d4", :page 40, :position {:bounding {:x1 0, :y1 158, :x2 806.4067993164062, :y2 392.203125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 158, :x2 0, :y2 177, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 174, :x2 0, :y2 193, :width 940.8, :height 1243.1999999999998} {:x1 498.882568359375, :y1 326.578125, :x2 806.4067993164062, :y2 351.578125, :width 940.8, :height 1243.1999999999998} {:x1 498.890625, :y1 329.28125, :x2 806.4067993164062, :y2 347.875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 348.890625, :x2 806.39794921875, :y2 369.890625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 371.203125, :x2 198.02891540527344, :y2 392.203125, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "set-buffer, on the other hand, does only one thing: it switches the attention of the computer program to a different buffer. "}, :properties {:color "red"}} {:id #uuid "63be8bff-c97e-4f21-8208-fa2717f60d23", :page 40, :position {:bounding {:x1 134.390625, :y1 584.578125, :x2 590.3359985351562, :y2 609.578125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 584.578125, :x2 590.3359985351562, :y2 609.578125, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "2.4 Buffer Size and the Location of Point"}, :properties {:color "yellow"}} {:id #uuid "63be8c1a-0a3f-408d-909f-fa885ab64028", :page 40, :position {:bounding {:x1 162.28125, :y1 693.734375, :x2 699.94287109375, :y2 714.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 162.28125, :y1 693.734375, :x2 699.94287109375, :y2 714.734375, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "The function buffer-size tells you the size of the current buffe"}, :properties {:color "yellow"}} {:id #uuid "63be8c26-b3b1-4dd0-8cd5-5ff3e78a70ac", :page 40, :position {:bounding {:x1 162.28125, :y1 819.546875, :x2 662.670166015625, :y2 840.546875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 162.28125, :y1 819.546875, :x2 662.670166015625, :y2 840.546875, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "In Emacs, the current position of the cursor is called point"}, :properties {:color "yellow"}} {:id #uuid "63be8c92-55de-478d-ae76-2e48705b1eaa", :page 40, :position {:bounding {:x1 0, :y1 446, :x2 806.3997192382812, :y2 885.1875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 446, :x2 0, :y2 465, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 462, :x2 0, :y2 481, :width 940.8, :height 1243.1999999999998} {:x1 682.5625, :y1 819.546875, :x2 806.3997192382812, :y2 840.546875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 840.578125, :x2 806.3995361328125, :y2 865.578125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 844.578125, :x2 806.3995361328125, :y2 863.171875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 864.1875, :x2 708.6942138671875, :y2 885.1875, :width 940.8, :height 1243.1999999999998}), :page 40}, :content {:text "The expression(point) returns a number that tells you where the cursor is located as a count of the number of characters from the beginning of the buffer up to point."}, :properties {:color "red"}} {:id #uuid "63be8cac-a56f-4f0f-ad83-a6c2cba46c0e", :page 41, :position {:bounding {:x1 0, :y1 190, :x2 806.394287109375, :y2 413.390625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 190, :x2 0, :y2 209, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 370.078125, :x2 806.394287109375, :y2 395.078125, :width 940.8, :height 1243.1999999999998} {:x1 265.390625, :y1 372.078125, :x2 806.394287109375, :y2 390.671875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 392.390625, :x2 635.8865356445312, :y2 413.390625, :width 940.8, :height 1243.1999999999998}), :page 41}, :content {:text "The function point-min is somewhat similar to point, but it returns the value of the minimum permissible value of point in the current buffer. "}, :properties {:color "yellow"}} {:id #uuid "63be8cb1-1ab8-46b0-bb90-f3e14e979c1f", :page 41, :position {:bounding {:x1 0, :y1 206, :x2 806.0586547851562, :y2 435.703125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 206, :x2 0, :y2 225, :width 940.8, :height 1243.1999999999998} {:x1 635.8707275390625, :y1 392.390625, :x2 806.0586547851562, :y2 413.390625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 414.703125, :x2 372.80181884765625, :y2 435.703125, :width 940.8, :height 1243.1999999999998}), :page 41}, :content {:text "This is the number 1 unless narrowing is in effect. "}, :properties {:color "red"}} {:id #uuid "63be8cc1-5f65-4616-b2af-fb110683dac0", :page 41, :position {:bounding {:x1 0, :y1 254, :x2 806.400390625, :y2 502.65625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 254, :x2 0, :y2 273, :width 940.8, :height 1243.1999999999998} {:x1 463.0752868652344, :y1 459.34375, :x2 806.400390625, :y2 484.34375, :width 940.8, :height 1243.1999999999998} {:x1 748.328125, :y1 461.34375, :x2 806.400390625, :y2 479.9375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 481.65625, :x2 739.7381591796875, :y2 502.65625, :width 940.8, :height 1243.1999999999998}), :page 41}, :content {:text "Likewise, the function point-max returns the value of the maximum permissible value of point in the current buffer."}, :properties {:color "yellow"}} {:id #uuid "63be93af-27bc-4c97-a467-c165be80f3ce", :page 41, :position {:bounding {:x1 134.390625, :y1 532.546875, :x2 269.9627990722656, :y2 557.546875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 532.546875, :x2 269.9627990722656, :y2 557.546875, :width 940.8, :height 1243.1999999999998}), :page 41}, :content {:text "2.5 Exercise"}, :properties {:color "yellow"}} {:id #uuid "63bf5417-973d-41d6-acac-62f6e51cdafa", :page 42, :position {:bounding {:x1 120, :y1 101, :x2 562.0982055664062, :y2 128, :width 839.9999999999999, :height 1110}, :rects ({:x1 120, :y1 101, :x2 562.0982055664062, :y2 128, :width 839.9999999999999, :height 1110}), :page 42}, :content {:text "3 How To Write Function Definitions"}, :properties {:color "yellow"}} {:id #uuid "63bf547d-46e9-462e-a15c-47e6f260781f", :page 42, :position {:bounding {:x1 134.390625, :y1 632.421875, :x2 366.0369567871094, :y2 663.421875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 230.25, :y1 632.421875, :x2 301.0625, :y2 663.421875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 634.578125, :x2 366.0369567871094, :y2 659.578125, :width 940.8, :height 1243.1999999999998}), :page 42}, :content {:text "3.1 The defun Macro"}, :properties {:color "yellow"}} {:id #uuid "63bf54d5-30e5-4d8b-856c-9dae004a0dea", :page 43, :position {:bounding {:x1 0, :y1 46, :x2 806.389404296875, :y2 215.703125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 46, :x2 0, :y2 65, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 172.390625, :x2 806.389404296875, :y2 193.390625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 194.703125, :x2 448.7742614746094, :y2 215.703125, :width 940.8, :height 1243.1999999999998}), :page 43}, :content {:text "It is helpful to think of the five parts of a function definition as being organized in a template, with slots for each part:"}, :properties {:color "yellow"}} {:id #uuid "63bf5569-7af4-4c75-8c04-0b39f24a3ec9", :page 44, :position {:bounding {:x1 0, :y1 302, :x2 806.3914184570312, :y2 576.421875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 302, :x2 0, :y2 321, :width 940.8, :height 1243.1999999999998} {:x1 229.7267303466797, :y1 533.109375, :x2 806.3914184570312, :y2 554.109375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 555.421875, :x2 345.6105041503906, :y2 576.421875, :width 940.8, :height 1243.1999999999998}), :page 44}, :content {:text "Installing a function is the process that tells the Lisp interpreter the definition of the function. "}, :properties {:color "red"}} {:id #uuid "63bf556e-495f-467a-898f-e9ab13edea72", :page 44, :position {:bounding {:x1 134.390625, :y1 616.375, :x2 490.2586669921875, :y2 641.375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 616.375, :x2 490.2586669921875, :y2 641.375, :width 940.8, :height 1243.1999999999998}), :page 44}, :content {:text "3.2 Install a Function Definition"}, :properties {:color "yellow"}} {:id #uuid "63bf55dd-8687-46a2-ae45-c54e64a63d60", :page 45, :position {:bounding {:x1 134.390625, :y1 266.984375, :x2 465.4451599121094, :y2 287.984375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 266.984375, :x2 465.4451599121094, :y2 287.984375, :width 940.8, :height 1243.1999999999998}), :page 45}, :content {:text "3.2.1 Change a Function Definition"}, :properties {:color "yellow"}} {:id #uuid "63bf5612-eb2d-4b6f-9cf7-b12fc9102846", :page 45, :position {:bounding {:x1 0, :y1 414, :x2 806.3963012695312, :y2 790.109375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 414, :x2 0, :y2 433, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 746.796875, :x2 806.3963012695312, :y2 767.796875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 769.109375, :x2 744.5433349609375, :y2 790.109375, :width 940.8, :height 1243.1999999999998}), :page 45}, :content {:text "In summary, this is how you write code in Emacs Lisp: you write a function; install it; test it; and then make fixes or enhancements and install it again."}, :properties {:color "yellow"}} {:id #uuid "63bf5655-3971-4300-aa2a-bfa345910845", :page 45, :position {:bounding {:x1 134.390625, :y1 820.015625, :x2 490.5393371582031, :y2 845.015625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 820.015625, :x2 490.5393371582031, :y2 845.015625, :width 940.8, :height 1243.1999999999998}), :page 45}, :content {:text "3.3 Make a Function Interactive"}, :properties {:color "yellow"}} {:id #uuid "63bf5680-0de2-4a53-ad2a-cfeddfb68856", :page 45, :position {:bounding {:x1 0, :y1 558, :x2 806.0538330078125, :y2 1035.609375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 558, :x2 0, :y2 577, :width 940.8, :height 1243.1999999999998} {:x1 722.8190307617188, :y1 992.296875, :x2 806.0538330078125, :y2 1013.296875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1014.609375, :x2 506.7722473144531, :y2 1035.609375, :width 940.8, :height 1243.1999999999998}), :page 45}, :content {:text " you often call an interactive function for its side effects"}, :properties {:color "yellow"}} {:id #uuid "63bf570c-7365-45a4-85d2-e790817fbf08", :page 46, :position {:bounding {:x1 134.390625, :y1 236.71875, :x2 764.9133911132812, :y2 257.71875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 236.71875, :x2 764.9133911132812, :y2 257.71875, :width 940.8, :height 1243.1999999999998}), :page 46}, :content {:text "You can install this code by placing your cursor after it and typing C-x C-e."}, :properties {:color "yellow"}} {:id #uuid "63bf5727-4353-40f1-a4a1-54785b880ac4", :page 46, :position {:bounding {:x1 0, :y1 110, :x2 806.40576171875, :y2 327.359375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 110, :x2 0, :y2 129, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 126, :x2 0, :y2 145, :width 940.8, :height 1243.1999999999998} {:x1 551.3637084960938, :y1 259.03125, :x2 806.0662231445312, :y2 280.03125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 281.34375, :x2 806.40576171875, :y2 302.34375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 302.359375, :x2 168.859375, :y2 327.359375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 306.359375, :x2 168.859375, :y2 324.953125, :width 940.8, :height 1243.1999999999998}), :page 46}, :content {:text "Then, you can use this code by typing C-u and a number and then typing M-x multiply-by-seven and pressing RET."}, :properties {:color "red"}} {:id #uuid "63bf57b7-eb82-44c6-9775-9c47025194dd", :page 46, :position {:bounding {:x1 134.390625, :y1 761.765625, :x2 498.3083801269531, :y2 782.765625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 761.765625, :x2 498.3083801269531, :y2 782.765625, :width 940.8, :height 1243.1999999999998}), :page 46}, :content {:text "3.3.1 An Interactive multiply-by-seven"}, :properties {:color "yellow"}} {:id #uuid "63bf57df-6650-4600-bacb-650f62e2b524", :page 46, :position {:bounding {:x1 0, :y1 542, :x2 806.40234375, :y2 1014.65625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 542, :x2 0, :y2 561, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 971.34375, :x2 806.40234375, :y2 992.34375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 993.65625, :x2 403.1334228515625, :y2 1014.65625, :width 940.8, :height 1243.1999999999998}), :page 46}, :content {:text "The \"p\" tells Emacs to pass the prefix argument to the function and use its value for the argument of the function."}, :properties {:color "yellow"}} {:id #uuid "63bf585a-9a98-467d-838b-796ab5ae0405", :page 47, :position {:bounding {:x1 134.390625, :y1 730.5625, :x2 543.9283447265625, :y2 761.5625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 417.59375, :y1 730.5625, :x2 543.9283447265625, :y2 761.5625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 732.71875, :x2 417.6014709472656, :y2 757.71875, :width 940.8, :height 1243.1999999999998}), :page 47}, :content {:text "3.4 Different Options for interactive"}, :properties {:color "yellow"}} {:id #uuid "63bf58ec-3b83-4bcd-abfc-b0c8f626e214", :page 47, :position {:bounding {:x1 162.28125, :y1 926.28125, :x2 686.7239990234375, :y2 947.28125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 162.28125, :y1 926.28125, :x2 686.7239990234375, :y2 947.28125, :width 940.8, :height 1243.1999999999998}), :page 47}, :content {:text "Consider the function zap-to-char. Its interactive expression is"}, :properties {:color "yellow"}} {:id #uuid "63bf58f1-51fc-471d-8147-6b083f69598e", :page 47, :position {:bounding {:x1 174.71875, :y1 947.8125, :x2 464.7035827636719, :y2 970.8125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 947.8125, :x2 464.7035827636719, :y2 970.8125, :width 940.8, :height 1243.1999999999998}), :page 47}, :content {:text "(interactive \"p\\ncZap to char: \")"}, :properties {:color "red"}} {:id #uuid "63bf5931-9d0e-483e-85ee-8deda4c2a5b3", :page 48, :position {:bounding {:x1 162.28125, :y1 120.046875, :x2 737.7228393554688, :y2 141.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 162.28125, :y1 120.046875, :x2 737.7228393554688, :y2 141.046875, :width 940.8, :height 1243.1999999999998}), :page 48}, :content {:text "The ‘c’ tells the function the name of the character to which to delete."}, :properties {:color "yellow"}} {:id #uuid "63bf5d2f-1315-4189-b5d4-cb6a725600e6", :page 48, :position {:bounding {:x1 0, :y1 30, :x2 806.40625, :y2 189.03125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 30, :x2 0, :y2 49, :width 940.8, :height 1243.1999999999998} {:x1 289.6817321777344, :y1 145.71875, :x2 806.3805847167969, :y2 166.71875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 168.03125, :x2 806.40625, :y2 189.03125, :width 940.8, :height 1243.1999999999998}), :page 48}, :content {:text "a function with two or more arguments can have information passed to each argument by adding parts to the string that follows interactive."}, :properties {:color "yellow"}} {:id #uuid "63bf5d65-63f2-4e34-bb60-7ac0087d871d", :page 48, :position {:bounding {:x1 0, :y1 78, :x2 806.3862915039062, :y2 255.984375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 78, :x2 0, :y2 97, :width 940.8, :height 1243.1999999999998} {:x1 462.46875, :y1 212.671875, :x2 806.3862915039062, :y2 233.671875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 234.984375, :x2 499.515625, :y2 255.984375, :width 940.8, :height 1243.1999999999998}), :page 48}, :content {:text "In the string, each part is separated from the next part by a ‘\\n’, which is a newline. "}, :properties {:color "yellow"}} {:id #uuid "63bf5ebc-0edd-4be8-89db-315949027872", :page 48, :position {:bounding {:x1 134.390625, :y1 750.078125, :x2 461.6015319824219, :y2 775.078125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 750.078125, :x2 461.6015319824219, :y2 775.078125, :width 940.8, :height 1243.1999999999998}), :page 48}, :content {:text "3.5 Install Code Permanently"}, :properties {:color "yellow"}} {:id #uuid "63bf5edf-966a-45d9-af89-4f4d50428804", :page 49, :position {:bounding {:x1 134.390625, :y1 381.28125, :x2 213.48858642578125, :y2 412.28125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 179.03125, :y1 381.28125, :x2 213.48858642578125, :y2 412.28125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 383.4375, :x2 179.037841796875, :y2 408.4375, :width 940.8, :height 1243.1999999999998}), :page 49}, :content {:text "3.6 let"}, :properties {:color "yellow"}} {:id #uuid "63bf5f09-7072-435d-ae1e-aa8654e7c46f", :page 49, :position {:bounding {:x1 0, :y1 430, :x2 806.3944091796875, :y2 807.328125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 430, :x2 0, :y2 449, :width 940.8, :height 1243.1999999999998} {:x1 496.125, :y1 764.015625, :x2 806.3944091796875, :y2 785.015625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 786.328125, :x2 715.8040161132812, :y2 807.328125, :width 940.8, :height 1243.1999999999998}), :page 49}, :content {:text "let creates a name for a local variable that overshadows any use of the same name outside the let expression."}, :properties {:color "yellow"}} {:id #uuid "63bf5fd2-7649-4f6b-81b8-6288b0ffd6e5", :page 50, :position {:bounding {:x1 134.390625, :y1 254.34375, :x2 469.36065673828125, :y2 275.34375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 254.34375, :x2 469.36065673828125, :y2 275.34375, :width 940.8, :height 1243.1999999999998}), :page 50}, :content {:text "3.6.1 The Parts of a let Expression"}, :properties {:color "yellow"}} {:id #uuid "63bf5ff4-181b-4e5d-9c3b-0367a4a44111", :page 50, :position {:bounding {:x1 174.71875, :y1 419.171875, :x2 359.2554626464844, :y2 442.171875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 419.171875, :x2 359.2554626464844, :y2 442.171875, :width 940.8, :height 1243.1999999999998} {:x1 209.859375, :y1 423.171875, :x2 324.098388671875, :y2 439.90625, :width 940.8, :height 1243.1999999999998}), :page 50}, :content {:text "(let varlist body...)"}, :properties {:color "yellow"}} {:id #uuid "63bf6102-7dd3-4388-9de0-bddd4fb6e09f", :page 50, :position {:bounding {:x1 134.390625, :y1 797.40625, :x2 401.53253173828125, :y2 818.40625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 797.40625, :x2 401.53253173828125, :y2 818.40625, :width 940.8, :height 1243.1999999999998}), :page 50}, :content {:text "3.6.2 Sample let Expression"}, :properties {:color "yellow"}} {:id #uuid "63bf617c-2b06-4ff7-a4d4-02d0365b888d", :page 51, :position {:bounding {:x1 134.390625, :y1 391.640625, :x2 583.946533203125, :y2 412.640625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 391.640625, :x2 583.946533203125, :y2 412.640625, :width 940.8, :height 1243.1999999999998}), :page 51}, :content {:text "3.6.3 Uninitialized Variables in a let Statement"}, :properties {:color "yellow"}} {:id #uuid "63bf61c4-87d7-4281-b6a8-a29a38a250d4", :page 51, :position {:bounding {:x1 0, :y1 206, :x2 806.4109497070312, :y2 465.640625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 206, :x2 0, :y2 225, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 422.328125, :x2 806.4109497070312, :y2 443.328125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 444.640625, :x2 557.9260864257812, :y2 465.640625, :width 940.8, :height 1243.1999999999998}), :page 51}, :content {:text "If you do not bind the variables in a let statement to specific initial values, they will automatically be bound to an initial value of nil"}, :properties {:color "yellow"}} {:id #uuid "63bf629f-37eb-49e4-b762-223d63dc4948", :page 51, :position {:bounding {:x1 134.390625, :y1 953.328125, :x2 404.7300109863281, :y2 984.328125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 230.25, :y1 953.328125, :x2 266.609375, :y2 984.328125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 955.484375, :x2 404.7300109863281, :y2 980.484375, :width 940.8, :height 1243.1999999999998}), :page 51}, :content {:text "3.7 The if Special Form"}, :properties {:color "yellow"}} {:id #uuid "63bf640c-84e8-47ca-8231-a17ae9b12578", :page 52, :position {:bounding {:x1 134.390625, :y1 1097.359375, :x2 547.2099609375, :y2 1118.359375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 1097.359375, :x2 547.2099609375, :y2 1118.359375, :width 940.8, :height 1243.1999999999998}), :page 52}, :content {:text "3.7.1 The type-of-animal Function in Detail"}, :properties {:color "yellow"}} {:id #uuid "63bf645c-30d4-4032-b7b3-8f66c6d6d7bc", :page 53, :position {:bounding {:x1 174.71875, :y1 668.703125, :x2 447.12957763671875, :y2 691.703125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 174.71875, :y1 668.703125, :x2 447.12957763671875, :y2 691.703125, :width 940.8, :height 1243.1999999999998}), :page 53}, :content {:text "(equal characteristic \"fierce\")"}, :properties {:color "yellow"}} {:id #uuid "63bf6463-79bf-468b-bbe9-3ccf9dc11921", :page 53, :position {:bounding {:x1 0, :y1 430, :x2 806.392578125, :y2 737.09375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 430, :x2 0, :y2 449, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 693.78125, :x2 806.392578125, :y2 714.78125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 716.09375, :x2 332.7947998046875, :y2 737.09375, :width 940.8, :height 1243.1999999999998}), :page 53}, :content {:text "In Lisp, equal is a function that determines whether its first argument is equal to its second argument. "}, :properties {:color "red"}} {:id #uuid "63bf64df-5206-4b47-ae1c-9e42c73a558d", :page 53, :position {:bounding {:x1 134.390625, :y1 1002.265625, :x2 447.0103759765625, :y2 1027.265625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 1002.265625, :x2 447.0103759765625, :y2 1027.265625, :width 940.8, :height 1243.1999999999998}), :page 53}, :content {:text "3.8 If–then–else Expressions"}, :properties {:color "yellow"}} {:id #uuid "63bf657e-a6c0-46a0-aef1-0ddadc87cbf1", :page 54, :position {:bounding {:x1 134.390625, :y1 1024.578125, :x2 569.9083251953125, :y2 1049.578125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 1024.578125, :x2 569.9083251953125, :y2 1049.578125, :width 940.8, :height 1243.1999999999998}), :page 54}, :content {:text "3.9 Truth and Falsehood in Emacs Lisp"}, :properties {:color "yellow"}} {:id #uuid "63bf6610-b281-40e6-b8bd-d1928e546500", :page 55, :position {:bounding {:x1 0, :y1 14, :x2 806.4015502929688, :y2 163.375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 14, :x2 0, :y2 33, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 120.046875, :x2 806.4015502929688, :y2 141.046875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 142.375, :x2 357.5856628417969, :y2 163.375, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text "The expression that tests for truth is interpreted as true if the result of evaluating it is a value that is not nil."}, :properties {:color "yellow"}} {:id #uuid "63bf661b-054f-4afd-90ac-eb68369eecdd", :page 55, :position {:bounding {:x1 162.28125, :y1 261.75, :x2 562.1258544921875, :y2 282.75, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 162.28125, :y1 261.75, :x2 562.1258544921875, :y2 282.75, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text "In Emacs Lisp, the symbol nil has two meanings"}, :properties {:color "yellow"}} {:id #uuid "63bf6621-7949-47a9-ba3c-a708f9cc17f5", :page 55, :position {:bounding {:x1 567.2150268554688, :y1 261.75, :x2 806.39013671875, :y2 282.75, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 567.2150268554688, :y1 261.75, :x2 806.39013671875, :y2 282.75, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text " First, it means the empty list."}, :properties {:color "red"}} {:id #uuid "63bf6628-b1ec-4c48-9131-670e3a5331dd", :page 55, :position {:bounding {:x1 134.390625, :y1 284.0625, :x2 806.39990234375, :y2 305.0625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 284.0625, :x2 806.39990234375, :y2 305.0625, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text "Second, it means false and is the value returned when a true-or-false-test tests false."}, :properties {:color "green"}} {:id #uuid "63bf66c2-cbc8-4a2c-bfc6-dc1e7d2051d5", :page 55, :position {:bounding {:x1 0, :y1 478, :x2 806.4005737304688, :y2 839.59375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 478, :x2 0, :y2 497, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 796.265625, :x2 806.4005737304688, :y2 817.265625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 818.59375, :x2 658.2969970703125, :y2 839.59375, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text "Incidentally, if some other useful value is not available for a test that returns true, then the Lisp interpreter will return the symbol t for true."}, :properties {:color "yellow"}} {:id #uuid "63bf69a0-a0b8-411b-a098-4079fba42086", :page 55, :position {:bounding {:x1 134.390625, :y1 996.21875, :x2 352.3566589355469, :y2 1027.21875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 191.578125, :y1 996.21875, :x2 352.3566589355469, :y2 1027.21875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 998.375, :x2 191.60072326660156, :y2 1023.375, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text "3.10 save-excursion"}, :properties {:color "yellow"}} {:id #uuid "63bf6a0b-d28c-4119-b3a3-faeb5e079f1b", :page 55, :position {:bounding {:x1 0, :y1 654, :x2 806.4100341796875, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 654, :x2 0, :y2 673, :width 940.8, :height 1243.1999999999998} {:x1 222.01756286621094, :y1 1105.734375, :x2 806.4100341796875, :y2 1126.734375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1128.046875, :x2 707.89013671875, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}), :page 55}, :content {:text "It saves the location of point, executes the body of the function, and then restores point to its previous position if its location was changed"}, :properties {:color "yellow"}} {:id #uuid "63bf6a48-508b-4f69-9bfd-6a446813f977", :page 56, :position {:bounding {:x1 0, :y1 158, :x2 806.38916015625, :y2 369.109375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 158, :x2 0, :y2 177, :width 940.8, :height 1243.1999999999998} {:x1 162.28125, :y1 325.78125, :x2 806.38916015625, :y2 346.78125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 348.109375, :x2 484.3650207519531, :y2 369.109375, :width 940.8, :height 1243.1999999999998}), :page 56}, :content {:text "The mark is another position in the buffer; its value can be set with a command such as C-SPC (set-mark-command). "}, :properties {:color "yellow"}} {:id #uuid "63bf6a65-c9bd-41a0-93c5-b043c014e95d", :page 56, :position {:bounding {:x1 0, :y1 174, :x2 806.4030151367188, :y2 413.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 174, :x2 0, :y2 193, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 190, :x2 0, :y2 209, :width 940.8, :height 1243.1999999999998} {:x1 489.4538879394531, :y1 348.109375, :x2 806.4030151367188, :y2 369.109375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 370.421875, :x2 806.3911743164062, :y2 391.421875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 392.734375, :x2 625.9170532226562, :y2 413.734375, :width 940.8, :height 1243.1999999999998}), :page 56}, :content {:text "f a mark has been set, you can use the command C-x C-x (exchange-point-and-mark) to cause the cursor to jump to the mark and set the mark to be the previous position of point."}, :properties {:color "red"}} {:id #uuid "63bf6a9c-cc51-467a-8784-0cfefed563a9", :page 56, :position {:bounding {:x1 0, :y1 206, :x2 806.39453125, :y2 436.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 206, :x2 0, :y2 225, :width 940.8, :height 1243.1999999999998} {:x1 631.2015991210938, :y1 392.734375, :x2 806.39453125, :y2 413.734375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 415.046875, :x2 754.1363525390625, :y2 436.046875, :width 940.8, :height 1243.1999999999998}), :page 56}, :content {:text "In addition, if you set another mark, the position of the previous mark is saved in the mark ring."}, :properties {:color "yellow"}} {:id #uuid "63bf6aa4-ca76-455e-98fd-bd3647ade343", :page 56, :position {:bounding {:x1 0, :y1 238, :x2 806.0590209960938, :y2 480.6875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 238, :x2 0, :y2 257, :width 940.8, :height 1243.1999999999998} {:x1 447.6986389160156, :y1 437.375, :x2 806.0590209960938, :y2 458.375, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 459.6875, :x2 434.8445739746094, :y2 480.6875, :width 940.8, :height 1243.1999999999998}), :page 56}, :content {:text "You can jump the cursor to a saved mark by typing C-u C-SPC one or more times."}, :properties {:color "blue"}} {:id #uuid "63bf6ad8-52f7-45df-bcf1-cf5709c155a3", :page 56, :position {:bounding {:x1 162.28125, :y1 484.4375, :x2 719.948486328125, :y2 505.4375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 162.28125, :y1 484.4375, :x2 719.948486328125, :y2 505.4375, :width 940.8, :height 1243.1999999999998}), :page 56}, :content {:text "The part of the buffer between point and mark is called the region. "}, :properties {:color "red"}} {:id #uuid "63bf6ba1-d00b-43d8-91a1-520afa89ea02", :page 56, :position {:bounding {:x1 0, :y1 542, :x2 806.388427734375, :y2 916.90625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 542, :x2 0, :y2 561, :width 940.8, :height 1243.1999999999998} {:x1 518.9158325195312, :y1 873.59375, :x2 806.388427734375, :y2 898.59375, :width 940.8, :height 1243.1999999999998} {:x1 518.921875, :y1 876.296875, :x2 806.388427734375, :y2 894.890625, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 895.90625, :x2 407.3360900878906, :y2 916.90625, :width 940.8, :height 1243.1999999999998}), :page 56}, :content {:text "save-excursion keeps track of the current buffer, and restores it, too"}, :properties {:color "red"}} {:id #uuid "63bf6eb4-a5d7-4acf-8402-b5c5f7aad42d", :page 56, :position {:bounding {:x1 114, :y1 854.84375, :x2 500.1454772949219, :y2 876.84375, :width 798, :height 1054.5}, :rects ({:x1 292.296875, :y1 854.84375, :x2 417.71875, :y2 876.84375, :width 798, :height 1054.5} {:x1 114, :y1 857.25, :x2 500.1454772949219, :y2 874.25, :width 798, :height 1054.5}), :page 56}, :content {:text "3.10.1 Template for a save-excursion Expression"}, :properties {:color "yellow"}} {:id #uuid "63bf6f32-2441-4d44-b7d2-5cec69ed398e", :page 57, :position {:bounding {:x1 114, :y1 452.953125, :x2 230.37030029296875, :y2 473.953125, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 452.953125, :x2 230.37030029296875, :y2 473.953125, :width 798, :height 1054.5}), :page 57}, :content {:text "3.11 Review"}, :properties {:color "yellow"}} {:id #uuid "63bf6ff8-01ef-4af1-8c1f-71b75000255e", :page 57, :position {:bounding {:x1 114, :y1 555.9375, :x2 229.94496154785156, :y2 577.9375, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 555.9375, :x2 229.94496154785156, :y2 577.9375, :width 798, :height 1054.5}), :page 57}, :content {:text "eval-last-sexp"}, :properties {:color "yellow"}} {:id #uuid "63bf7008-44d1-49ae-9c68-17543c2746b8", :page 57, :position {:bounding {:x1 0, :y1 366, :x2 683.9874877929688, :y2 613.203125, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 366, :x2 0, :y2 385, :width 798, :height 1054.5} {:x1 205.1875, :y1 577.265625, :x2 683.9874877929688, :y2 594.265625, :width 798, :height 1054.5} {:x1 205.1875, :y1 596.203125, :x2 245.5126953125, :y2 613.203125, :width 798, :height 1054.5}), :page 57}, :content {:text "Evaluate the last symbolic expression before the current location of point."}, :properties {:color "yellow"}} {:id #uuid "63bf700c-89d3-4726-8455-8cf68d827a9b", :page 57, :position {:bounding {:x1 0, :y1 382, :x2 684.0066528320312, :y2 651.0625, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 382, :x2 0, :y2 401, :width 798, :height 1054.5} {:x1 0, :y1 398, :x2 0, :y2 417, :width 798, :height 1054.5} {:x1 258.10430908203125, :y1 596.203125, :x2 684.0039672851562, :y2 613.203125, :width 798, :height 1054.5} {:x1 205.1875, :y1 615.125, :x2 684.0066528320312, :y2 632.125, :width 798, :height 1054.5} {:x1 205.1875, :y1 634.0625, :x2 304.5554504394531, :y2 651.0625, :width 798, :height 1054.5}), :page 57}, :content {:text "The value is printed in the echo area unless the function is invoked with an argument; in that case, the output is printed in the current buffer."}, :properties {:color "red"}} {:id #uuid "63bf7011-4002-4ded-864e-cd7a62dbaf54", :page 57, :position {:bounding {:x1 308.7331237792969, :y1 631.65625, :x2 628.5625, :y2 653.65625, :width 798, :height 1054.5}, :rects ({:x1 569.21875, :y1 631.65625, :x2 624.1624755859375, :y2 653.65625, :width 798, :height 1054.5} {:x1 308.7331237792969, :y1 634.0625, :x2 628.5625, :y2 651.0625, :width 798, :height 1054.5}), :page 57}, :content {:text "This command is normally bound to C-x C-e."}, :properties {:color "yellow"}} {:id #uuid "63bf707c-2036-4835-b479-517258c2d9f1", :page 57, :position {:bounding {:x1 114, :y1 667.203125, :x2 155.42063903808594, :y2 689.203125, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 667.203125, :x2 155.42063903808594, :y2 689.203125, :width 798, :height 1054.5}), :page 57}, :content {:text "defun"}, :properties {:color "yellow"}} {:id #uuid "63bf7093-50b5-49e3-80e3-a8bdc16c841d", :page 57, :position {:bounding {:x1 0, :y1 430, :x2 683.9935913085938, :y2 724.46875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 430, :x2 0, :y2 449, :width 798, :height 1054.5} {:x1 0, :y1 446, :x2 0, :y2 465, :width 798, :height 1054.5} {:x1 205.1875, :y1 669.609375, :x2 683.7088012695312, :y2 686.609375, :width 798, :height 1054.5} {:x1 205.1875, :y1 688.546875, :x2 683.9935913085938, :y2 705.546875, :width 798, :height 1054.5} {:x1 205.1875, :y1 707.46875, :x2 664.0455932617188, :y2 724.46875, :width 798, :height 1054.5}), :page 57}, :content {:text "Define function. This macro has up to five parts: the name, a template for the arguments that will be passed to the function, documentation, an optional interactive declaration, and the body of the definition."}, :properties {:color "yellow"}} {:id #uuid "63bf70a1-ccad-413b-ba94-aabe7c27bf23", :page 57, :position {:bounding {:x1 0, :y1 478, :x2 683.9895629882812, :y2 772.359375, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 478, :x2 0, :y2 497, :width 798, :height 1054.5} {:x1 543.203125, :y1 731.421875, :x2 683.9895629882812, :y2 753.421875, :width 798, :height 1054.5} {:x1 205.1875, :y1 733.828125, :x2 683.9895629882812, :y2 750.828125, :width 798, :height 1054.5} {:x1 205.1875, :y1 750.359375, :x2 251.85748291015625, :y2 772.359375, :width 798, :height 1054.5} {:x1 205.1875, :y1 754.359375, :x2 338.0128479003906, :y2 770.140625, :width 798, :height 1054.5}), :page 57}, :content {:text "For example, in Emacs the function definition of dired-unmark-allmarks is as follows."}, :properties {:color "red"}} {:id #uuid "63bf71b1-36a1-452a-a95a-41cc502287f6", :page 57, :position {:bounding {:x1 114, :y1 860.46875, :x2 205.10353088378906, :y2 882.46875, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 860.46875, :x2 205.10353088378906, :y2 882.46875, :width 798, :height 1054.5}), :page 57}, :content {:text "interactive"}, :properties {:color "yellow"}} {:id #uuid "63bf71bf-c8af-4da8-ac05-f16aa4ce9918", :page 57, :position {:bounding {:x1 205.1875, :y1 881.8125, :x2 683.9956665039062, :y2 898.8125, :width 798, :height 1054.5}, :rects ({:x1 205.1875, :y1 881.8125, :x2 683.9956665039062, :y2 898.8125, :width 798, :height 1054.5}), :page 57}, :content {:text "Declare to the interpreter that the function can be used interactively."}, :properties {:color "red"}} {:id #uuid "63bf71c5-f728-4a98-8ea6-8642124c9b50", :page 57, :position {:bounding {:x1 0, :y1 606, :x2 683.9896240234375, :y2 955.59375, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 606, :x2 0, :y2 625, :width 798, :height 1054.5} {:x1 0, :y1 622, :x2 0, :y2 641, :width 798, :height 1054.5} {:x1 205.1875, :y1 900.734375, :x2 683.9896240234375, :y2 917.734375, :width 798, :height 1054.5} {:x1 205.1875, :y1 919.671875, :x2 683.9856567382812, :y2 936.671875, :width 798, :height 1054.5} {:x1 205.1875, :y1 938.59375, :x2 257.6315002441406, :y2 955.59375, :width 798, :height 1054.5}), :page 57}, :content {:text "This special form may be followed by a string with one or more parts that pass the information to the arguments of the function, in sequence"}, :properties {:color "yellow"}} {:id #uuid "63bf71da-0740-4dc6-a2f0-21532146eed6", :page 57, :position {:bounding {:x1 0, :y1 638, :x2 683.693359375, :y2 974.53125, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 638, :x2 0, :y2 657, :width 798, :height 1054.5} {:x1 262.0506591796875, :y1 938.59375, :x2 683.693359375, :y2 955.59375, :width 798, :height 1054.5} {:x1 205.1875, :y1 957.53125, :x2 261.6502990722656, :y2 974.53125, :width 798, :height 1054.5}), :page 57}, :content {:text " These parts may also tell the interpreter to prompt for information. "}, :properties {:color "red"}} {:id #uuid "63bf71e2-d2d4-4fd5-afba-151a16a38a6e", :page 57, :position {:bounding {:x1 261.63458251953125, :y1 955.125, :x2 613.3665161132812, :y2 977.125, :width 798, :height 1054.5}, :rects ({:x1 588.015625, :y1 955.125, :x2 604.5811157226562, :y2 977.125, :width 798, :height 1054.5} {:x1 261.63458251953125, :y1 957.53125, :x2 613.3665161132812, :y2 974.53125, :width 798, :height 1054.5}), :page 57}, :content {:text "Parts of the string are separated by newlines, ‘\\n’."}, :properties {:color "green"}} {:id #uuid "63bf71ee-8130-482d-8512-44ca3a1b1032", :page 58, :position {:bounding {:x1 205.1875, :y1 108.765625, :x2 409.6028747558594, :y2 125.765625, :width 798, :height 1054.5}, :rects ({:x1 205.1875, :y1 108.765625, :x2 409.6028747558594, :y2 125.765625, :width 798, :height 1054.5}), :page 58}, :content {:text "Common code characters are:"}, :properties {:color "red"}} {:id #uuid "63bf7203-e189-4fb4-bed8-502329c170e6", :page 58, :position {:bounding {:x1 205.1875, :y1 139.515625, :x2 513.4265747070312, :y2 161.515625, :width 798, :height 1054.5}, :rects ({:x1 205.1875, :y1 139.515625, :x2 296.4693298339844, :y2 161.515625, :width 798, :height 1054.5} {:x1 213.46875, :y1 143.515625, :x2 513.4265747070312, :y2 160.515625, :width 798, :height 1054.5}), :page 58}, :content {:text "b The name of an existing buffer."}, :properties {:color "yellow"}} {:id #uuid "63bf7206-a85b-4280-8a11-fdd5f199a5c9", :page 58, :position {:bounding {:x1 205.1875, :y1 172.671875, :x2 493.67095947265625, :y2 194.671875, :width 798, :height 1054.5}, :rects ({:x1 205.1875, :y1 172.671875, :x2 296.4693298339844, :y2 194.671875, :width 798, :height 1054.5} {:x1 213.46875, :y1 176.671875, :x2 493.67095947265625, :y2 193.671875, :width 798, :height 1054.5}), :page 58}, :content {:text "f The name of an existing file."}, :properties {:color "yellow"}} {:id #uuid "63bf724b-bd80-432a-b3ab-713a5d81b6c8", :page 58, :position {:bounding {:x1 0, :y1 62, :x2 684.0068969726562, :y2 244.171875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 62, :x2 0, :y2 81, :width 798, :height 1054.5} {:x1 205.1875, :y1 205.828125, :x2 296.4693298339844, :y2 227.828125, :width 798, :height 1054.5} {:x1 618.734375, :y1 205.828125, :x2 632.2198486328125, :y2 227.828125, :width 798, :height 1054.5} {:x1 213.46875, :y1 209.828125, :x2 684.0068969726562, :y2 226.828125, :width 798, :height 1054.5} {:x1 296.390625, :y1 227.171875, :x2 335.0404968261719, :y2 244.171875, :width 798, :height 1054.5}), :page 58}, :content {:text "p The numeric prefix argument. (Note that this p is lower case.)"}, :properties {:color "yellow"}} {:id #uuid "63bf724e-557b-4a9f-b894-da6cad2ea94e", :page 58, :position {:bounding {:x1 0, :y1 94, :x2 684.0027465820312, :y2 315.1875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 94, :x2 0, :y2 113, :width 798, :height 1054.5} {:x1 0, :y1 110, :x2 0, :y2 129, :width 798, :height 1054.5} {:x1 205.1875, :y1 257.921875, :x2 296.4693298339844, :y2 279.921875, :width 798, :height 1054.5} {:x1 213.46875, :y1 261.921875, :x2 684.0027465820312, :y2 278.921875, :width 798, :height 1054.5} {:x1 296.390625, :y1 279.25, :x2 683.9998168945312, :y2 296.25, :width 798, :height 1054.5} {:x1 296.390625, :y1 298.1875, :x2 558.4702758789062, :y2 315.1875, :width 798, :height 1054.5}), :page 58}, :content {:text "r Point and the mark, as two numeric arguments, smallest first. This is the only code letter that specifies two successive arguments rather than one."}, :properties {:color "yellow"}} {:id #uuid "63bf79ce-a869-4d99-a739-7148fff42b1d", :page 58, :position {:bounding {:x1 114, :y1 381.015625, :x2 138.85511779785156, :y2 403.015625, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 381.015625, :x2 138.85511779785156, :y2 403.015625, :width 798, :height 1054.5}), :page 58}, :content {:text "let"}, :properties {:color "yellow"}} {:id #uuid "63bf79ed-3b3b-4daf-9679-811ade8aca3b", :page 58, :position {:bounding {:x1 0, :y1 174, :x2 684.0013427734375, :y2 457.21875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 174, :x2 0, :y2 193, :width 798, :height 1054.5} {:x1 0, :y1 190, :x2 0, :y2 209, :width 798, :height 1054.5} {:x1 0, :y1 206, :x2 0, :y2 225, :width 798, :height 1054.5} {:x1 205.155517578125, :y1 381.015625, :x2 205.26513671875, :y2 403.015625, :width 798, :height 1054.5} {:x1 629.75, :y1 381.015625, :x2 658.582763671875, :y2 403.015625, :width 798, :height 1054.5} {:x1 205.1875, :y1 383.421875, :x2 684.0013427734375, :y2 400.421875, :width 798, :height 1054.5} {:x1 427.65625, :y1 399.953125, :x2 456.4478454589844, :y2 421.953125, :width 798, :height 1054.5} {:x1 205.1875, :y1 402.359375, :x2 683.9996337890625, :y2 419.359375, :width 798, :height 1054.5} {:x1 514.796875, :y1 418.875, :x2 544.2715454101562, :y2 440.875, :width 798, :height 1054.5} {:x1 205.1875, :y1 421.28125, :x2 684.000732421875, :y2 438.28125, :width 798, :height 1054.5} {:x1 205.1875, :y1 440.21875, :x2 316.3683776855469, :y2 457.21875, :width 798, :height 1054.5}), :page 58}, :content {:text "Declare that a list of variables is for use within the body of the let and give them an initial value, either nil or a specified value; then evaluate the rest of the expressions in the body of the let and return the value of the last one. "}, :properties {:color "yellow"}} {:id #uuid "63bf7a00-1771-402a-ae1c-a8969c1b1b30", :page 58, :position {:bounding {:x1 0, :y1 222, :x2 684.0037231445312, :y2 497.671875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 222, :x2 0, :y2 241, :width 798, :height 1054.5} {:x1 0, :y1 238, :x2 0, :y2 257, :width 798, :height 1054.5} {:x1 477.453125, :y1 437.8125, :x2 502.3082580566406, :y2 459.8125, :width 798, :height 1054.5} {:x1 316.3522644042969, :y1 440.21875, :x2 683.9845581054688, :y2 457.21875, :width 798, :height 1054.5} {:x1 205.1875, :y1 459.140625, :x2 684.0037231445312, :y2 476.140625, :width 798, :height 1054.5} {:x1 304.75, :y1 475.671875, :x2 329.6051330566406, :y2 497.671875, :width 798, :height 1054.5} {:x1 205.1875, :y1 478.078125, :x2 333.984375, :y2 495.078125, :width 798, :height 1054.5}), :page 58}, :content {:text "Inside the body of the let, the Lisp interpreter does not see the values of the variables of the same names that are bound outside of the let."}, :properties {:color "red"}} {:id #uuid "63bf7ad2-ae6f-4c86-8c05-8059c24ba203", :page 58, :position {:bounding {:x1 114, :y1 623.921875, :x2 229.94496154785156, :y2 645.921875, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 623.921875, :x2 229.94496154785156, :y2 645.921875, :width 798, :height 1054.5}), :page 58}, :content {:text "save-excursion"}, :properties {:color "yellow"}} {:id #uuid "63bf7adb-6cd1-49fc-b7b0-4e1636f54253", :page 58, :position {:bounding {:x1 0, :y1 382, :x2 683.9957275390625, :y2 681.1875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 382, :x2 0, :y2 401, :width 798, :height 1054.5} {:x1 205.1875, :y1 645.265625, :x2 683.9957275390625, :y2 662.265625, :width 798, :height 1054.5} {:x1 205.1875, :y1 664.1875, :x2 413.4837951660156, :y2 681.1875, :width 798, :height 1054.5}), :page 58}, :content {:text "Record the values of point and the current buffer before evaluating the body of this special form."}, :properties {:color "yellow"}} {:id #uuid "63bf7ae7-7123-4849-b0da-d28365133b03", :page 58, :position {:bounding {:x1 0, :y1 398, :x2 683.9967041015625, :y2 700.109375, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 398, :x2 0, :y2 417, :width 798, :height 1054.5} {:x1 423.328125, :y1 664.1875, :x2 683.9967041015625, :y2 681.1875, :width 798, :height 1054.5} {:x1 205.1875, :y1 683.109375, :x2 275.39154052734375, :y2 700.109375, :width 798, :height 1054.5}), :page 58}, :content {:text "Restore the value of point and buffer afterward."}, :properties {:color "red"}} {:id #uuid "63bf7baa-6416-4a80-8afc-8b86b6fab2f0", :page 58, :position {:bounding {:x1 114, :y1 812.40625, :x2 130.56552124023438, :y2 834.40625, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 812.40625, :x2 130.56552124023438, :y2 834.40625, :width 798, :height 1054.5}), :page 58}, :content {:text "if"}, :properties {:color "yellow"}} {:id #uuid "63bf7bc9-cacb-4ca9-9320-8d8e94b5d60a", :page 58, :position {:bounding {:x1 0, :y1 510, :x2 683.9938354492188, :y2 850.734375, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 510, :x2 0, :y2 529, :width 798, :height 1054.5} {:x1 205.1875, :y1 814.8125, :x2 683.9938354492188, :y2 831.8125, :width 798, :height 1054.5} {:x1 205.1875, :y1 833.734375, :x2 663.0764770507812, :y2 850.734375, :width 798, :height 1054.5}), :page 58}, :content {:text "Evaluate the first argument to the function; if it is true, evaluate the second argument; else evaluate the third argument, if there is one."}, :properties {:color "yellow"}} {:id #uuid "63bf7be0-1009-4077-a055-8d3bd1130284", :page 58, :position {:bounding {:x1 205.1875, :y1 857.375, :x2 497.1349792480469, :y2 879.375, :width 798, :height 1054.5}, :rects ({:x1 236.859375, :y1 857.375, :x2 257.92657470703125, :y2 879.375, :width 798, :height 1054.5} {:x1 205.1875, :y1 859.78125, :x2 497.1349792480469, :y2 876.78125, :width 798, :height 1054.5}), :page 58}, :content {:text "The if special form is called a conditional."}, :properties {:color "red"}} {:id #uuid "63bf7c68-3dc1-4941-9616-a5ee8dff916b", :page 59, :position {:bounding {:x1 0, :y1 14, :x2 130.56552124023438, :y2 180.328125, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 14, :x2 0, :y2 33, :width 798, :height 1054.5} {:x1 0, :y1 30, :x2 0, :y2 49, :width 798, :height 1054.5} {:x1 0, :y1 46, :x2 0, :y2 65, :width 798, :height 1054.5} {:x1 114, :y1 101.546875, :x2 123.46875, :y2 123.546875, :width 798, :height 1054.5} {:x1 114, :y1 120.46875, :x2 123.46875, :y2 142.46875, :width 798, :height 1054.5} {:x1 114, :y1 124.46875, :x2 123.46875, :y2 140.25, :width 798, :height 1054.5} {:x1 114, :y1 139.40625, :x2 130.56552124023438, :y2 161.40625, :width 798, :height 1054.5} {:x1 114, :y1 143.40625, :x2 130.56552124023438, :y2 159.1875, :width 798, :height 1054.5} {:x1 114, :y1 158.328125, :x2 130.56552124023438, :y2 180.328125, :width 798, :height 1054.5} {:x1 114, :y1 162.328125, :x2 130.56552124023438, :y2 178.109375, :width 798, :height 1054.5}), :page 59}, :content {:text "<><=>="}, :properties {:color "yellow"}} {:id #uuid "63bf7cda-c141-4330-9c4f-d44e7d0929a5", :page 59, :position {:bounding {:x1 0, :y1 126, :x2 684.004150390625, :y2 291.3125, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 126, :x2 0, :y2 145, :width 798, :height 1054.5} {:x1 0, :y1 142, :x2 0, :y2 161, :width 798, :height 1054.5} {:x1 600.976806640625, :y1 236.453125, :x2 683.9917602539062, :y2 253.453125, :width 798, :height 1054.5} {:x1 205.1875, :y1 255.375, :x2 684.004150390625, :y2 272.375, :width 798, :height 1054.5} {:x1 205.1875, :y1 274.3125, :x2 318.9149169921875, :y2 291.3125, :width 798, :height 1054.5}), :page 59}, :content {:text "In all cases, both arguments must be numbers or markers (markers indicate positions in buffers)."}, :properties {:color "yellow"}} {:id #uuid "63bf7ce4-c454-49aa-94c4-9b25a31f9319", :page 59, :position {:bounding {:x1 0, :y1 62, :x2 684.0039672851562, :y2 196.65625, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 62, :x2 0, :y2 81, :width 798, :height 1054.5} {:x1 237.09375, :y1 158.328125, :x2 250.11961364746094, :y2 180.328125, :width 798, :height 1054.5} {:x1 205.1875, :y1 160.734375, :x2 684.0039672851562, :y2 177.734375, :width 798, :height 1054.5} {:x1 205.1875, :y1 179.65625, :x2 311.4375, :y2 196.65625, :width 798, :height 1054.5}), :page 59}, :content {:text "The < function tests whether its first argument is smaller than its second argument. "}, :properties {:color "red"}} {:id #uuid "63bf7d5e-ecac-4cf5-ae43-4a32d815735b", :page 59, :position {:bounding {:x1 0, :y1 206, :x2 155.42063903808594, :y2 375.53125, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 206, :x2 0, :y2 225, :width 798, :height 1054.5} {:x1 114, :y1 334.59375, :x2 155.42063903808594, :y2 356.59375, :width 798, :height 1054.5} {:x1 114, :y1 353.53125, :x2 130.56552124023438, :y2 375.53125, :width 798, :height 1054.5} {:x1 114, :y1 357.53125, :x2 130.56552124023438, :y2 373.3125, :width 798, :height 1054.5}), :page 59}, :content {:text "equal eq"}, :properties {:color "yellow"}} {:id #uuid "63bf7d85-5c6c-4d83-831f-49fc30a68850", :page 59, :position {:bounding {:x1 0, :y1 238, :x2 684.001953125, :y2 429.71875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 238, :x2 0, :y2 257, :width 798, :height 1054.5} {:x1 0, :y1 254, :x2 0, :y2 273, :width 798, :height 1054.5} {:x1 480.765625, :y1 372.453125, :x2 527.9443359375, :y2 394.453125, :width 798, :height 1054.5} {:x1 522.171875, :y1 376.453125, :x2 684.001953125, :y2 393.453125, :width 798, :height 1054.5} {:x1 205.1875, :y1 393.796875, :x2 683.986083984375, :y2 410.796875, :width 798, :height 1054.5} {:x1 205.1875, :y1 412.71875, :x2 311.70318603515625, :y2 429.71875, :width 798, :height 1054.5}), :page 59}, :content {:text "equal returns true if the two objects have a similar structure and contents, such as two copies of the same book."}, :properties {:color "yellow"}} {:id #uuid "63bf7d88-38ca-411c-96f6-91b1eff930d1", :page 59, :position {:bounding {:x1 0, :y1 270, :x2 683.9983520507812, :y2 448.65625, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 270, :x2 0, :y2 289, :width 798, :height 1054.5} {:x1 450.5625, :y1 410.3125, :x2 467.1280212402344, :y2 432.3125, :width 798, :height 1054.5} {:x1 445.953125, :y1 412.71875, :x2 683.9983520507812, :y2 429.71875, :width 798, :height 1054.5} {:x1 205.1875, :y1 431.65625, :x2 405.1325988769531, :y2 448.65625, :width 798, :height 1054.5}), :page 59}, :content {:text " eq, returns true if both arguments are actually the same object."}, :properties {:color "red"}} {:id #uuid "63bf7f0d-397a-4cfe-8cfb-bafbe27ad3dd", :page 59, :position {:bounding {:x1 0, :y1 302, :x2 213.3794403076172, :y2 529.265625, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 302, :x2 0, :y2 321, :width 798, :height 1054.5} {:x1 0, :y1 318, :x2 0, :y2 337, :width 798, :height 1054.5} {:x1 0, :y1 334, :x2 0, :y2 353, :width 798, :height 1054.5} {:x1 114, :y1 450.46875, :x2 171.9724884033203, :y2 472.46875, :width 798, :height 1054.5} {:x1 114, :y1 469.40625, :x2 213.3794403076172, :y2 491.40625, :width 798, :height 1054.5} {:x1 114, :y1 473.40625, :x2 213.3794403076172, :y2 489.1875, :width 798, :height 1054.5} {:x1 114, :y1 488.328125, :x2 171.9724884033203, :y2 510.328125, :width 798, :height 1054.5} {:x1 114, :y1 492.328125, :x2 171.9724884033203, :y2 508.109375, :width 798, :height 1054.5} {:x1 114, :y1 507.265625, :x2 213.3794403076172, :y2 529.265625, :width 798, :height 1054.5}), :page 59}, :content {:text "string< string-lessp string= string-equal"}, :properties {:color "yellow"}} {:id #uuid "63bf9d66-5df7-4c54-a9e1-30a72c3b7bc1", :page 59, :position {:bounding {:x1 0, :y1 366, :x2 684.0130004882812, :y2 564.53125, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 366, :x2 0, :y2 385, :width 798, :height 1054.5} {:x1 236.75, :y1 526.1875, :x2 345.609375, :y2 548.1875, :width 798, :height 1054.5} {:x1 205.1875, :y1 528.59375, :x2 684.0130004882812, :y2 545.59375, :width 798, :height 1054.5} {:x1 205.1875, :y1 547.53125, :x2 390.86968994140625, :y2 564.53125, :width 798, :height 1054.5}), :page 59}, :content {:text "The string-lessp function tests whether its first argument is smaller than the second argument"}, :properties {:color "yellow"}} {:id #uuid "63bf9d69-16ae-4762-b487-844b102e8acf", :page 59, :position {:bounding {:x1 0, :y1 382, :x2 682.2215576171875, :y2 586.046875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 382, :x2 0, :y2 401, :width 798, :height 1054.5} {:x1 398.8519287109375, :y1 547.53125, :x2 682.2215576171875, :y2 564.53125, :width 798, :height 1054.5} {:x1 286.25, :y1 564.046875, :x2 352.5120849609375, :y2 586.046875, :width 798, :height 1054.5} {:x1 379.765625, :y1 564.046875, :x2 437.73809814453125, :y2 586.046875, :width 798, :height 1054.5} {:x1 205.1875, :y1 566.453125, :x2 442.125, :y2 583.453125, :width 798, :height 1054.5}), :page 59}, :content {:text "A shorter, alternative name for the same function (a defalias) is string<."}, :properties {:color "red"}} {:id #uuid "63bf9fcd-7888-4a33-ad7f-c6aaa5a6a8e2", :page 59, :position {:bounding {:x1 0, :y1 414, :x2 684.000732421875, :y2 625.796875, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 414, :x2 0, :y2 433, :width 798, :height 1054.5} {:x1 334.75, :y1 587.46875, :x2 443.59375, :y2 609.46875, :width 798, :height 1054.5} {:x1 205.1875, :y1 589.875, :x2 684.000732421875, :y2 606.875, :width 798, :height 1054.5} {:x1 205.1875, :y1 608.796875, :x2 512.945556640625, :y2 625.796875, :width 798, :height 1054.5}), :page 59}, :content {:text "The arguments to string-lessp must be strings or symbols; the ordering is lexicographic, so case is significant."}, :properties {:color "yellow"}} {:id #uuid "63bfa95a-b1ef-4aba-b78c-4df1fcd09e88", :page 59, :position {:bounding {:x1 0, :y1 430, :x2 683.7008056640625, :y2 644.734375, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 430, :x2 0, :y2 449, :width 798, :height 1054.5} {:x1 516.9461669921875, :y1 608.796875, :x2 683.7008056640625, :y2 625.796875, :width 798, :height 1054.5} {:x1 205.1875, :y1 627.734375, :x2 538.43505859375, :y2 644.734375, :width 798, :height 1054.5}), :page 59}, :content {:text "The print names of symbols are used instead of the symbols themselves."}, :properties {:color "red"}} {:id #uuid "63bfa971-92a4-46af-98e9-ea1ae16194dd", :page 59, :position {:bounding {:x1 205.1875, :y1 691.09375, :x2 603.0963134765625, :y2 713.09375, :width 798, :height 1054.5}, :rects ({:x1 205.1875, :y1 691.09375, :x2 308.1104736328125, :y2 713.09375, :width 798, :height 1054.5} {:x1 304.5625, :y1 695.09375, :x2 603.0963134765625, :y2 712.09375, :width 798, :height 1054.5}), :page 59}, :content {:text "string-equal provides the corresponding test for equality"}, :properties {:color "yellow"}} {:id #uuid "63bfa97b-e3eb-4f4b-881a-cbb2a1d08373", :page 59, :position {:bounding {:x1 0, :y1 494, :x2 683.9951782226562, :y2 732.015625, :width 798, :height 1054.5}, :rects ({:x1 0, :y1 494, :x2 0, :y2 513, :width 798, :height 1054.5} {:x1 607.3783569335938, :y1 693.5, :x2 683.9951782226562, :y2 710.5, :width 798, :height 1054.5} {:x1 343.59375, :y1 710.015625, :x2 401.56622314453125, :y2 732.015625, :width 798, :height 1054.5} {:x1 205.1875, :y1 712.421875, :x2 401.56622314453125, :y2 729.421875, :width 798, :height 1054.5}), :page 59}, :content {:text " Its shorter, alternative name is string="}, :properties {:color "red"}} {:id #uuid "63bfaaf0-9469-46f9-b4fb-e975f21f4989", :page 59, :position {:bounding {:x1 114, :y1 756.859375, :x2 171.9724884033203, :y2 778.859375, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 756.859375, :x2 171.9724884033203, :y2 778.859375, :width 798, :height 1054.5}), :page 59}, :content {:text "message"}, :properties {:color "yellow"}} {:id #uuid "63bfaaf4-a535-4f9f-9d5b-6e556c2669d8", :page 59, :position {:bounding {:x1 205.1768341064453, :y1 756.859375, :x2 440.60565185546875, :y2 778.859375, :width 798, :height 1054.5}, :rects ({:x1 205.1768341064453, :y1 756.859375, :x2 205.2317352294922, :y2 778.859375, :width 798, :height 1054.5} {:x1 205.1875, :y1 759.265625, :x2 440.60565185546875, :y2 776.265625, :width 798, :height 1054.5}), :page 59}, :content {:text "Print a message in the echo area"}, :properties {:color "red"}} {:id #uuid "63bfab44-b0d1-4998-8b7e-66e343f2415c", :page 59, :position {:bounding {:x1 0, :y1 542, :x2 806.0423583984375, :y2 959.9375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 542, :x2 0, :y2 561, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 558, :x2 0, :y2 577, :width 940.8, :height 1243.1999999999998} {:x1 524.6900634765625, :y1 894.3125, :x2 806.0423583984375, :y2 915.3125, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 916.625, :x2 805.64013671875, :y2 941.625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 918.625, :x2 805.64013671875, :y2 937.21875, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 938.9375, :x2 387.46875, :y2 959.9375, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text " The first argument is a string that can contain ‘%s’, ‘%d’, or ‘%c’ to print the value of arguments that follow the string. "}, :properties {:color "yellow"}} {:id #uuid "63bfab4a-9e09-4488-ab1a-5ca01c63ae4f", :page 59, :position {:bounding {:x1 0, :y1 574, :x2 805.6541748046875, :y2 982.25, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 574, :x2 0, :y2 593, :width 940.8, :height 1243.1999999999998} {:x1 394.75, :y1 938.9375, :x2 805.6541748046875, :y2 963.9375, :width 940.8, :height 1243.1999999999998} {:x1 595.265625, :y1 941.640625, :x2 805.6541748046875, :y2 960.234375, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 961.25, :x2 305.64190673828125, :y2 982.25, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "The argument used by ‘%s’ must be a string or a symbol;"}, :properties {:color "red"}} {:id #uuid "63bfab68-0afa-4c4b-a8c0-a84a4b27492a", :page 59, :position {:bounding {:x1 310.7600402832031, :y1 961.25, :x2 683.203125, :y2 982.25, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 310.7600402832031, :y1 961.25, :x2 683.203125, :y2 982.25, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "the argument used by ‘%d’ must be a number."}, :properties {:color "yellow"}} {:id #uuid "63bfab6d-080a-4149-badf-2250c25b88e6", :page 59, :position {:bounding {:x1 0, :y1 590, :x2 805.3560791015625, :y2 1008.5625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 590, :x2 0, :y2 609, :width 940.8, :height 1243.1999999999998} {:x1 688.082275390625, :y1 961.25, :x2 805.3560791015625, :y2 982.25, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 983.5625, :x2 606.7269897460938, :y2 1008.5625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 985.5625, :x2 493.71875, :y2 1004.15625, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "The argument used by ‘%c’ must be an ascii code number"}, :properties {:color "red"}} {:id #uuid "63bfab74-52c4-467a-84c8-9b59bd791fcd", :page 59, :position {:bounding {:x1 0, :y1 606, :x2 806.4044799804688, :y2 1026.890625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 606, :x2 0, :y2 625, :width 940.8, :height 1243.1999999999998} {:x1 612.0146484375, :y1 983.5625, :x2 806.4044799804688, :y2 1004.5625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 1005.890625, :x2 504.8447265625, :y2 1026.890625, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text " it will be printed as the character with that ascii code. "}, :properties {:color "yellow"}} {:id #uuid "63bfac7a-bf3e-496c-bd71-811a82c7d083", :page 59, :position {:bounding {:x1 0, :y1 654, :x2 173.4496307373047, :y2 1107.125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 654, :x2 0, :y2 673, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1059.796875, :x2 173.4496307373047, :y2 1084.796875, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1082.125, :x2 163.6917266845703, :y2 1107.125, :width 940.8, :height 1243.1999999999998} {:x1 134.390625, :y1 1086.125, :x2 163.6917266845703, :y2 1104.71875, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "setq set"}, :properties {:color "yellow"}} {:id #uuid "63bfac83-9711-4b4b-b2c3-e80efdab433c", :page 59, :position {:bounding {:x1 0, :y1 670, :x2 806.3859252929688, :y2 1126.734375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 670, :x2 0, :y2 689, :width 940.8, :height 1243.1999999999998} {:x1 241.87387084960938, :y1 1082.125, :x2 806.3859252929688, :y2 1107.125, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 1085.421875, :x2 806.3859252929688, :y2 1104.015625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 1105.734375, :x2 442.0965270996094, :y2 1126.734375, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "The setq special form sets the value of its first argument to the value of the second argument"}, :properties {:color "yellow"}} {:id #uuid "63bfac88-84c4-4d52-bea6-83519cc93e5f", :page 59, :position {:bounding {:x1 0, :y1 686, :x2 806.0380249023438, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 686, :x2 0, :y2 705, :width 940.8, :height 1243.1999999999998} {:x1 452.3199462890625, :y1 1105.734375, :x2 806.0380249023438, :y2 1126.734375, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 1128.046875, :x2 316.3097839355469, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "The first argument is automatically quoted by setq. "}, :properties {:color "red"}} {:id #uuid "63bfac97-8dd3-4aa6-9eec-d3846967aab5", :page 59, :position {:bounding {:x1 316.2944030761719, :y1 1128.046875, :x2 732.1680908203125, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 316.2944030761719, :y1 1128.046875, :x2 732.1680908203125, :y2 1149.046875, :width 940.8, :height 1243.1999999999998}), :page 59}, :content {:text "It does the same for succeeding pairs of arguments"}, :properties {:color "yellow"}} {:id #uuid "63bfaca4-1004-4790-a3a2-5963a1249c46", :page 60, :position {:bounding {:x1 0, :y1 14, :x2 806.404296875, :y2 185.6875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 14, :x2 0, :y2 33, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 30, :x2 0, :y2 49, :width 940.8, :height 1243.1999999999998} {:x1 320.984375, :y1 118.75, :x2 806.404296875, :y2 143.75, :width 940.8, :height 1243.1999999999998} {:x1 350.265625, :y1 122.046875, :x2 806.404296875, :y2 140.640625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 142.375, :x2 806.3912353515625, :y2 163.375, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 164.6875, :x2 511.42657470703125, :y2 185.6875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "set, takes only two arguments and evaluates both of them before setting the value returned by its first argument to the value returned by its second argument."}, :properties {:color "yellow"}} {:id #uuid "63bfadb0-eb23-4c28-8fdf-84ba8cc62373", :page 60, :position {:bounding {:x1 134.390625, :y1 196.859375, :x2 241.79605102539062, :y2 221.859375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 196.859375, :x2 241.79605102539062, :y2 221.859375, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "buffer-name"}, :properties {:color "yellow"}} {:id #uuid "63bfadb8-275f-46d5-a8ae-3b24211b1fb9", :page 60, :position {:bounding {:x1 241.90625, :y1 220.46875, :x2 771.365234375, :y2 241.46875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 241.90625, :y1 220.46875, :x2 771.365234375, :y2 241.46875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Without an argument, return the name of the buffer, as a string."}, :properties {:color "yellow"}} {:id #uuid "63bfade5-50db-4611-8d80-802dc19cc6c2", :page 60, :position {:bounding {:x1 134.390625, :y1 252.65625, :x2 290.6129455566406, :y2 277.65625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 252.65625, :x2 290.6129455566406, :y2 277.65625, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "buffer-file-name"}, :properties {:color "yellow"}} {:id #uuid "63bfade9-e1f6-4298-8b17-e6c8f8b8921b", :page 60, :position {:bounding {:x1 241.90625, :y1 276.265625, :x2 806.391357421875, :y2 297.265625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 241.90625, :y1 276.265625, :x2 806.391357421875, :y2 297.265625, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Without an argument, return the name of the file the buffer is visiting."}, :properties {:color "red"}} {:id #uuid "63bfae0b-da89-4dfa-8c27-ce4733aadd47", :page 60, :position {:bounding {:x1 134.390625, :y1 308.4375, :x2 271.0834655761719, :y2 333.4375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 308.4375, :x2 271.0834655761719, :y2 333.4375, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "current-buffer"}, :properties {:color "yellow"}} {:id #uuid "63bfae0e-510e-4fb1-9dc4-56e1eddf197c", :page 60, :position {:bounding {:x1 0, :y1 142, :x2 806.4037475585938, :y2 375.375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 142, :x2 0, :y2 161, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 332.0625, :x2 806.4037475585938, :y2 353.0625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 354.375, :x2 471.1341857910156, :y2 375.375, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Return the buffer in which Emacs is active; it may not be the buffer that is visible on the screen."}, :properties {:color "red"}} {:id #uuid "63bfae3b-2448-4fde-a600-fed1a5c1a364", :page 60, :position {:bounding {:x1 134.390625, :y1 386.546875, :x2 251.553955078125, :y2 411.546875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 386.546875, :x2 251.553955078125, :y2 411.546875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "other-buffer"}, :properties {:color "yellow"}} {:id #uuid "63bfae42-3d48-47a9-915b-56db1efa5b47", :page 60, :position {:bounding {:x1 0, :y1 190, :x2 806.3896484375, :y2 453.484375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 190, :x2 0, :y2 209, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 410.171875, :x2 806.3896484375, :y2 431.171875, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 432.484375, :x2 804.2182006835938, :y2 453.484375, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Return the most recently selected buffer (other than the buffer passed to other-buffer as an argument and other than the current buffer)."}, :properties {:color "yellow"}} {:id #uuid "63bfae6e-a9b2-4a1e-ae72-90171a4f0ac5", :page 60, :position {:bounding {:x1 134.390625, :y1 464.65625, :x2 290.6129455566406, :y2 489.65625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 464.65625, :x2 290.6129455566406, :y2 489.65625, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "switch-to-buffer"}, :properties {:color "yellow"}} {:id #uuid "63bfae76-ae59-459b-9a88-936bb290dcc7", :page 60, :position {:bounding {:x1 0, :y1 238, :x2 806.3843383789062, :y2 531.59375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 238, :x2 0, :y2 257, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 488.265625, :x2 806.3843383789062, :y2 509.265625, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 510.59375, :x2 699.875, :y2 531.59375, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Select a buffer for Emacs to be active in and display it in the current window so users can look at it. Usually bound to C-x b."}, :properties {:color "yellow"}} {:id #uuid "63bfaedb-0135-4c05-92e5-e33ae6da2298", :page 60, :position {:bounding {:x1 134.390625, :y1 542.765625, :x2 232.0244598388672, :y2 567.765625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 542.765625, :x2 232.0244598388672, :y2 567.765625, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "set-buffer"}, :properties {:color "yellow"}} {:id #uuid "63bfaee4-c7c8-40a8-b7ea-ec40989aa39e", :page 60, :position {:bounding {:x1 0, :y1 286, :x2 806.3820190429688, :y2 609.6875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 286, :x2 0, :y2 305, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 566.375, :x2 806.3820190429688, :y2 587.375, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 588.6875, :x2 572.5171508789062, :y2 609.6875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Switch Emacs’s attention to a buffer on which programs will run. Don’t alter what the window is showing."}, :properties {:color "yellow"}} {:id #uuid "63bfaf25-3ec7-4427-a26f-b569b0da384e", :page 60, :position {:bounding {:x1 134.390625, :y1 620.875, :x2 241.79605102539062, :y2 645.875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 620.875, :x2 241.79605102539062, :y2 645.875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "buffer-size"}, :properties {:color "yellow"}} {:id #uuid "63bfaf2a-8c8f-48f5-8b1c-be8aafaf8b1d", :page 60, :position {:bounding {:x1 241.90625, :y1 644.484375, :x2 685.3438720703125, :y2 665.484375, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 241.90625, :y1 644.484375, :x2 685.3438720703125, :y2 665.484375, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Return the number of characters in the current buffer."}, :properties {:color "red"}} {:id #uuid "63bfaf59-310a-4609-a585-03808146ba86", :page 60, :position {:bounding {:x1 134.390625, :y1 676.65625, :x2 183.20753479003906, :y2 701.65625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 676.65625, :x2 183.20753479003906, :y2 701.65625, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "point"}, :properties {:color "yellow"}} {:id #uuid "63bfaf60-cc7f-4986-a667-73f1123b4da7", :page 60, :position {:bounding {:x1 0, :y1 350, :x2 806.3901977539062, :y2 721.28125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 350, :x2 0, :y2 369, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 677.953125, :x2 806.3901977539062, :y2 698.953125, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 700.28125, :x2 793.975830078125, :y2 721.28125, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Return the value of the current position of the cursor, as an integer counting the number of characters from the beginning of the buffer."}, :properties {:color "red"}} {:id #uuid "63bfaf88-3d05-4f41-a7dd-901df8bf233e", :page 60, :position {:bounding {:x1 134.390625, :y1 732.453125, :x2 222.26654052734375, :y2 757.453125, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 732.453125, :x2 222.26654052734375, :y2 757.453125, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "point-min"}, :properties {:color "yellow"}} {:id #uuid "63bfaf8c-38b7-4162-bbd2-de7df8973117", :page 60, :position {:bounding {:x1 0, :y1 382, :x2 806.3804931640625, :y2 777.0625, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 382, :x2 0, :y2 401, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 733.75, :x2 806.3804931640625, :y2 754.75, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 756.0625, :x2 554.5513305664062, :y2 777.0625, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Return the minimum permissible value of point in the current buffer. This is 1, unless narrowing is in effect."}, :properties {:color "red"}} {:id #uuid "63bfaf8f-36cc-4d8a-9186-dcab270564a0", :page 60, :position {:bounding {:x1 134.390625, :y1 788.25, :x2 222.26654052734375, :y2 813.25, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 788.25, :x2 222.26654052734375, :y2 813.25, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "point-max"}, :properties {:color "yellow"}} {:id #uuid "63bfaf92-ba33-40e4-ae19-b95aa6937da3", :page 60, :position {:bounding {:x1 0, :y1 414, :x2 806.4143676757812, :y2 855.171875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 0, :y1 414, :x2 0, :y2 433, :width 940.8, :height 1243.1999999999998} {:x1 0, :y1 430, :x2 0, :y2 449, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 789.546875, :x2 806.3856201171875, :y2 810.546875, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 811.859375, :x2 806.4143676757812, :y2 832.859375, :width 940.8, :height 1243.1999999999998} {:x1 241.90625, :y1 834.171875, :x2 289.947021484375, :y2 855.171875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "Return the value of the maximum permissible value of point in the current buffer. This is the end of the buffer, unless narrowing is in effect."}, :properties {:color "red"}} {:id #uuid "63bfafed-c428-49cb-9bce-64a186020663", :page 60, :position {:bounding {:x1 134.390625, :y1 883.671875, :x2 292.4344787597656, :y2 908.671875, :width 940.8, :height 1243.1999999999998}, :rects ({:x1 134.390625, :y1 883.671875, :x2 292.4344787597656, :y2 908.671875, :width 940.8, :height 1243.1999999999998}), :page 60}, :content {:text "3.12 Exercises"}, :properties {:color "yellow"}} {:id #uuid "63c49fc8-f683-43f1-940a-1dd9d3a29cf3", :page 61, :position {:bounding {:x1 114, :y1 95.84375, :x2 497.3182678222656, :y2 121.84375, :width 798, :height 1054.5}, :rects ({:x1 114, :y1 95.84375, :x2 497.3182678222656, :y2 121.84375, :width 798, :height 1054.5}), :page 61}, :content {:text "4 A Few Buffer-Related Functions"}, :properties {:color "yellow"}} {:id #uuid "63c4a092-42b4-4640-8b12-6642006209c2", :page 61, :position {:bounding {:x1 144, :y1 353.75, :x2 501.5407409667969, :y2 380.75, :width 1008, :height 1332}, :rects ({:x1 144, :y1 353.75, :x2 501.5407409667969, :y2 380.75, :width 1008, :height 1332}), :page 61}, :content {:text "4.1 Finding More Information"}, :properties {:color "yellow"}} {:id #uuid "63c4a0d9-212c-4a80-adea-19854f0ed6c8", :page 61, :position {:bounding {:x1 0, :y1 158, :x2 864.0165405273438, :y2 490.359375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 158, :x2 0, :y2 177, :width 1008, :height 1332} {:x1 0, :y1 174, :x2 0, :y2 193, :width 1008, :height 1332} {:x1 604.8186645507812, :y1 416.796875, :x2 864.0165405273438, :y2 438.796875, :width 1008, :height 1332} {:x1 644.25, :y1 439.453125, :x2 704.671875, :y2 466.453125, :width 1008, :height 1332} {:x1 144, :y1 440.703125, :x2 863.9971923828125, :y2 462.703125, :width 1008, :height 1332} {:x1 370.0625, :y1 463.359375, :x2 401.4555969238281, :y2 490.359375, :width 1008, :height 1332} {:x1 144, :y1 464.609375, :x2 413.93487548828125, :y2 486.609375, :width 1008, :height 1332}), :page 61}, :content {:text "you can get the full documentation of any Emacs Lisp function at any time by typing C-h f and then the name of the function (and then RET)."}, :properties {:color "yellow"}} {:id #uuid "63c4a0ea-6cf6-4967-a641-d1b5463a91ca", :page 61, :position {:bounding {:x1 0, :y1 190, :x2 863.9990234375, :y2 514.265625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 190, :x2 0, :y2 209, :width 1008, :height 1332} {:x1 506.53057861328125, :y1 464.609375, :x2 863.9990234375, :y2 486.609375, :width 1008, :height 1332} {:x1 308.4375, :y1 487.265625, :x2 363.5594482421875, :y2 514.265625, :width 1008, :height 1332} {:x1 758.796875, :y1 487.265625, :x2 790.18994140625, :y2 514.265625, :width 1008, :height 1332} {:x1 144, :y1 488.515625, :x2 803.485107421875, :y2 510.515625, :width 1008, :height 1332}), :page 61}, :content {:text "you can get the full documentation for a variable by typing C-h v and then the name of the variable (and then RET)."}, :properties {:color "red"}} {:id #uuid "63c4a0f5-cd7a-4855-a4cb-cdd518cfc0f1", :page 61, :position {:bounding {:x1 224.3433380126953, :y1 513.25, :x2 851.0714721679688, :y2 540.25, :width 1008, :height 1332}, :rects ({:x1 224.359375, :y1 513.25, :x2 414.140625, :y2 540.25, :width 1008, :height 1332} {:x1 224.3433380126953, :y1 514.5, :x2 851.0714721679688, :y2 536.5, :width 1008, :height 1332}), :page 61}, :content {:text "describe-function will tell you the location of the function definition."}, :properties {:color "green"}} {:id #uuid "63c4a14d-ae45-4090-84ce-7baef030f0cd", :page 61, :position {:bounding {:x1 0, :y1 286, :x2 863.9925842285156, :y2 663.921875, :width 1008, :height 1332}, :rects ({:x1 0, :y1 286, :x2 0, :y2 305, :width 1008, :height 1332} {:x1 311.3476867675781, :y1 614.265625, :x2 863.9925842285156, :y2 636.265625, :width 1008, :height 1332} {:x1 212.5625, :y1 636.921875, :x2 444.1875, :y2 663.921875, :width 1008, :height 1332} {:x1 144, :y1 638.171875, :x2 635.5087890625, :y2 660.171875, :width 1008, :height 1332}), :page 61}, :content {:text " if you want to see a function in its original source file, you can use the xref-find-definitions function to jump to it."}, :properties {:color "yellow"}} {:id #uuid "63c4a290-58d8-44eb-8b3c-612d75777bda", :page 61, :position {:bounding {:x1 173.875, :y1 782.453125, :x2 671.61181640625, :y2 809.453125, :width 1008, :height 1332}, :rects ({:x1 272.34375, :y1 782.453125, :x2 498.7915954589844, :y2 809.453125, :width 1008, :height 1332} {:x1 640.21875, :y1 782.453125, :x2 671.61181640625, :y2 809.453125, :width 1008, :height 1332} {:x1 173.875, :y1 783.703125, :x2 638.96875, :y2 805.703125, :width 1008, :height 1332}), :page 61}, :content {:text "To use the xref-find-definitions command, type M-."}, :properties {:color "yellow"}} {:id #uuid "63c4a2f2-a992-4b75-a6a4-0e987e5ae271", :page 61, :position {:bounding {:x1 0, :y1 494, :x2 863.6021728515625, :y2 976.828125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 494, :x2 0, :y2 513, :width 1008, :height 1332} {:x1 480.83465576171875, :y1 927.171875, :x2 863.6021728515625, :y2 949.171875, :width 1008, :height 1332} {:x1 144, :y1 949.828125, :x2 182.0220184326172, :y2 976.828125, :width 1008, :height 1332} {:x1 206.421875, :y1 949.828125, :x2 292.94195556640625, :y2 976.828125, :width 1008, :height 1332} {:x1 144, :y1 953.828125, :x2 303.9137268066406, :y2 975.828125, :width 1008, :height 1332}), :page 61}, :content {:text "To switch back to your current buffer, type M-, or C-x b RET. "}, :properties {:color "yellow"}} {:id #uuid "63c4a30c-f548-4318-b78c-9f9a08f40ac7", :page 61, :position {:bounding {:x1 472.109375, :y1 854.1875, :x2 833.9158935546875, :y2 881.1875, :width 1008, :height 1332}, :rects ({:x1 473.828125, :y1 854.1875, :x2 651.6629638671875, :y2 881.1875, :width 1008, :height 1332} {:x1 795.375, :y1 854.1875, :x2 826.76806640625, :y2 881.1875, :width 1008, :height 1332} {:x1 472.109375, :y1 855.4375, :x2 833.9158935546875, :y2 877.4375, :width 1008, :height 1332}), :page 61}, :content {:text "mark-whole-buffer, and then type RET."}, :properties {:color "yellow"}} {:id #uuid "63c4a5e6-d941-4c82-a33a-075dee0762d4", :page 62, :position {:bounding {:x1 144, :y1 205.15625, :x2 706.2587890625, :y2 238.15625, :width 1008, :height 1332}, :rects ({:x1 346.9375, :y1 205.15625, :x2 595.0625, :y2 238.15625, :width 1008, :height 1332} {:x1 144, :y1 207.265625, :x2 706.2587890625, :y2 234.265625, :width 1008, :height 1332}), :page 62}, :content {:text "4.2 A Simplified beginning-of-buffer Definition"}, :properties {:color "yellow"}} {:id #uuid "63c4a646-1e21-4fe5-bdeb-c2fe3cf308e6", :page 62, :position {:bounding {:x1 0, :y1 78, :x2 864.012939453125, :y2 340.125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 78, :x2 0, :y2 97, :width 1008, :height 1332} {:x1 0, :y1 94, :x2 0, :y2 113, :width 1008, :height 1332} {:x1 666.65625, :y1 270.296875, :x2 864.012939453125, :y2 292.296875, :width 1008, :height 1332} {:x1 240.5, :y1 292.953125, :x2 446.07708740234375, :y2 319.953125, :width 1008, :height 1332} {:x1 144, :y1 294.203125, :x2 863.9894409179688, :y2 316.203125, :width 1008, :height 1332} {:x1 144, :y1 318.125, :x2 514.0564575195312, :y2 340.125, :width 1008, :height 1332}), :page 62}, :content {:text "Used as an interactive command, beginning-of-buffer moves the cursor to the beginning of the buffer, leaving the mark at the previous position."}, :properties {:color "yellow"}} {:id #uuid "63c4a64a-4862-4db8-b3c5-e3b2e5cf9977", :page 62, :position {:bounding {:x1 519.697265625, :y1 316.875, :x2 764.0625, :y2 343.875, :width 1008, :height 1332}, :rects ({:x1 731.1875, :y1 316.875, :x2 764.0625, :y2 343.875, :width 1008, :height 1332} {:x1 519.697265625, :y1 318.125, :x2 752.1116333007812, :y2 340.125, :width 1008, :height 1332}), :page 62}, :content {:text "It is generally bound to M-<"}, :properties {:color "red"}} {:id #uuid "63c4a6db-5b64-4c7d-bccb-d7313848db9d", :page 62, :position {:bounding {:x1 0, :y1 654, :x2 864.009033203125, :y2 1230.765625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 654, :x2 0, :y2 673, :width 1008, :height 1332} {:x1 0, :y1 670, :x2 0, :y2 689, :width 1008, :height 1332} {:x1 541.734375, :y1 1159.703125, :x2 656.8104248046875, :y2 1186.703125, :width 1008, :height 1332} {:x1 541.706298828125, :y1 1160.953125, :x2 864.009033203125, :y2 1182.953125, :width 1008, :height 1332} {:x1 144, :y1 1184.859375, :x2 864.0011596679688, :y2 1206.859375, :width 1008, :height 1332} {:x1 144, :y1 1208.765625, :x2 409.3887939453125, :y2 1230.765625, :width 1008, :height 1332}), :page 62}, :content {:text "(push-mark). When this expression is evaluated by the Lisp interpreter, it sets a mark at the current position of the cursor, wherever that may be."}, :properties {:color "yellow"}} {:id #uuid "63c4a6ee-a764-494c-9b31-c9fd85eb48ca", :page 63, :position {:bounding {:x1 0, :y1 14, :x2 863.6322631835938, :y2 174.6875, :width 1008, :height 1332}, :rects ({:x1 0, :y1 14, :x2 0, :y2 33, :width 1008, :height 1332} {:x1 319.875, :y1 127.515625, :x2 556.656494140625, :y2 154.515625, :width 1008, :height 1332} {:x1 556.640625, :y1 128.765625, :x2 863.6322631835938, :y2 150.765625, :width 1008, :height 1332} {:x1 144, :y1 152.6875, :x2 808.5006103515625, :y2 174.6875, :width 1008, :height 1332}), :page 63}, :content {:text "(goto-char (point-min)). This expression jumps the cursor to the minimum point in the buffer, that is, to the beginning of the buffer"}, :properties {:color "red"}} {:id #uuid "63c4a734-f621-4b60-9e7e-0646fa8ccb40", :page 63, :position {:bounding {:x1 0, :y1 110, :x2 864.0093994140625, :y2 328.375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 110, :x2 0, :y2 129, :width 1008, :height 1332} {:x1 310.810546875, :y1 278.71875, :x2 864.0093994140625, :y2 300.71875, :width 1008, :height 1332} {:x1 321.71875, :y1 301.375, :x2 391.1206970214844, :y2 328.375, :width 1008, :height 1332} {:x1 144, :y1 302.625, :x2 396.65625, :y2 324.625, :width 1008, :height 1332}), :page 63}, :content {:text "Consequently, you can, if you wish, go back to where you were originally by typing C-x C-x."}, :properties {:color "yellow"}} {:id #uuid "63c4a8dd-ee4f-4674-8f7f-7ae1621998fc", :page 63, :position {:bounding {:x1 144, :y1 797.515625, :x2 612.0481567382812, :y2 830.515625, :width 1008, :height 1332}, :rects ({:x1 402.875, :y1 797.515625, :x2 612.0481567382812, :y2 830.515625, :width 1008, :height 1332} {:x1 144, :y1 799.609375, :x2 402.902099609375, :y2 826.609375, :width 1008, :height 1332}), :page 63}, :content {:text "4.3 The Definition of mark-whole-buffer"}, :properties {:color "yellow"}} {:id #uuid "63c4a923-0e9d-4e4a-8b95-33fd4824c3fc", :page 63, :position {:bounding {:x1 0, :y1 478, :x2 864.0138549804688, :y2 986.78125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 478, :x2 0, :y2 497, :width 1008, :height 1332} {:x1 657.113037109375, :y1 940.859375, :x2 864.0138549804688, :y2 962.859375, :width 1008, :height 1332} {:x1 144, :y1 964.78125, :x2 864.0042114257812, :y2 986.78125, :width 1008, :height 1332}), :page 63}, :content {:text " it marks a whole buffer as a region by putting point at the beginning and a mark at the end of the buffer."}, :properties {:color "yellow"}} {:id #uuid "63c4a930-3077-4de1-8c1c-269aa0751f81", :page 63, :position {:bounding {:x1 144, :y1 987.4375, :x2 410.15625, :y2 1014.4375, :width 1008, :height 1332}, :rects ({:x1 356.140625, :y1 987.4375, :x2 404.6312255859375, :y2 1014.4375, :width 1008, :height 1332} {:x1 144, :y1 988.6875, :x2 410.15625, :y2 1010.6875, :width 1008, :height 1332}), :page 63}, :content {:text "It is generally bound to C-x h."}, :properties {:color "red"}} {:id #uuid "63c4ab60-027a-4502-9726-5aa32b4424fd", :page 64, :position {:bounding {:x1 144, :y1 440.5625, :x2 467.3348388671875, :y2 467.5625, :width 1008, :height 1332}, :rects ({:x1 289.5, :y1 440.5625, :x2 467.3348388671875, :y2 467.5625, :width 1008, :height 1332} {:x1 144, :y1 441.8125, :x2 289.50384521484375, :y2 463.8125, :width 1008, :height 1332}), :page 64}, :content {:text "4.3.1 Body of mark-whole-buffer"}, :properties {:color "yellow"}} {:id #uuid "63c4ac03-a144-4f30-b6a4-c3eabaed2321", :page 64, :position {:bounding {:x1 187.1875, :y1 1085.796875, :x2 460.2162780761719, :y2 1109.796875, :width 1008, :height 1332}, :rects ({:x1 187.1875, :y1 1085.796875, :x2 460.2162780761719, :y2 1109.796875, :width 1008, :height 1332}), :page 64}, :content {:text "(push-mark (point-max) nil t)"}, :properties {:color "yellow"}} {:id #uuid "63c4ac13-2df4-438e-9624-9d49f0dbbfbe", :page 64, :position {:bounding {:x1 0, :y1 670, :x2 864.0038452148438, :y2 1230.765625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 670, :x2 0, :y2 689, :width 1008, :height 1332} {:x1 0, :y1 686, :x2 0, :y2 705, :width 1008, :height 1332} {:x1 609.53125, :y1 1159.703125, :x2 715.640625, :y2 1186.703125, :width 1008, :height 1332} {:x1 732.640625, :y1 1159.703125, :x2 764.03369140625, :y2 1186.703125, :width 1008, :height 1332} {:x1 373.90625, :y1 1160.953125, :x2 863.9967041015625, :y2 1182.953125, :width 1008, :height 1332} {:x1 144, :y1 1184.859375, :x2 864.0038452148438, :y2 1206.859375, :width 1008, :height 1332} {:x1 144, :y1 1208.765625, :x2 202.3923797607422, :y2 1230.765625, :width 1008, :height 1332}), :page 64}, :content {:text " The second argument to push-mark is nil. This tells the function it should display a message that says “Mark set” when it pushes the mark. "}, :properties {:color "red"}} {:id #uuid "63c4ac2b-2be8-4519-ac55-35e78f439c28", :page 64, :position {:bounding {:x1 202.37576293945312, :y1 1207.515625, :x2 864.0101318359375, :y2 1234.515625, :width 1008, :height 1332}, :rects ({:x1 410.328125, :y1 1207.515625, :x2 422.28125, :y2 1234.515625, :width 1008, :height 1332} {:x1 527.875, :y1 1207.515625, :x2 633.984375, :y2 1234.515625, :width 1008, :height 1332} {:x1 202.37576293945312, :y1 1208.765625, :x2 864.0101318359375, :y2 1230.765625, :width 1008, :height 1332}), :page 64}, :content {:text "The third argument is t. This tells push-mark to activate the mark when"}, :properties {:color "yellow"}} {:id #uuid "63c4ac31-5ac3-42b3-94d7-bd8946b40394", :page 65, :position {:bounding {:x1 144, :y1 128.765625, :x2 455.072021484375, :y2 150.765625, :width 1008, :height 1332}, :rects ({:x1 144, :y1 128.765625, :x2 455.072021484375, :y2 150.765625, :width 1008, :height 1332}), :page 65}, :content {:text "Transient Mark mode is turned on."}, :properties {:color "yellow"}} {:id #uuid "63c4ac3f-0558-4594-a87c-4780ba618805", :page 65, :position {:bounding {:x1 0, :y1 14, :x2 863.6362915039062, :y2 174.6875, :width 1008, :height 1332}, :rects ({:x1 0, :y1 14, :x2 0, :y2 33, :width 1008, :height 1332} {:x1 460.3757629394531, :y1 128.765625, :x2 863.6362915039062, :y2 150.765625, :width 1008, :height 1332} {:x1 144, :y1 152.6875, :x2 452.51458740234375, :y2 174.6875, :width 1008, :height 1332}), :page 65}, :content {:text "Transient Mark mode highlights the currently active region. It is often turned off."}, :properties {:color "red"}} {:id #uuid "63c4ac9f-4795-4859-9904-546c1ba619ae", :page 65, :position {:bounding {:x1 0, :y1 94, :x2 864.0078735351562, :y2 321.21875, :width 1008, :height 1332}, :rects ({:x1 0, :y1 94, :x2 0, :y2 113, :width 1008, :height 1332} {:x1 0, :y1 110, :x2 0, :y2 129, :width 1008, :height 1332} {:x1 766.7022705078125, :y1 251.40625, :x2 862.881103515625, :y2 273.40625, :width 1008, :height 1332} {:x1 144, :y1 275.3125, :x2 864.0078735351562, :y2 297.3125, :width 1008, :height 1332} {:x1 144, :y1 299.21875, :x2 605.0921020507812, :y2 321.21875, :width 1008, :height 1332}), :page 65}, :content {:text "As a result of this, point is placed at the beginning of the buffer and mark is set at the end of the buffer. The whole buffer is, therefore, the region."}, :properties {:color "yellow"}} {:id #uuid "63c4afdb-4106-484c-9105-f0dbef9e782e", :page 65, :position {:bounding {:x1 144, :y1 358.15625, :x2 599.743896484375, :y2 391.15625, :width 1008, :height 1332}, :rects ({:x1 402.875, :y1 358.15625, :x2 599.743896484375, :y2 391.15625, :width 1008, :height 1332} {:x1 144, :y1 360.25, :x2 402.902099609375, :y2 387.25, :width 1008, :height 1332}), :page 65}, :content {:text "4.4 The Definition of append-to-buffer"}, :properties {:color "yellow"}} {:id #uuid "63c4aff2-55b5-405d-a499-394588b3da6c", :page 65, :position {:bounding {:x1 0, :y1 174, :x2 864.0054779052734, :y2 469.203125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 174, :x2 0, :y2 193, :width 1008, :height 1332} {:x1 244.3063201904297, :y1 423.296875, :x2 864.0054779052734, :y2 445.296875, :width 1008, :height 1332} {:x1 144, :y1 447.203125, :x2 679.1123046875, :y2 469.203125, :width 1008, :height 1332}), :page 65}, :content {:text "What it does is copy the region (that is, the part of the buffer between point and mark) from the current buffer to a specified buffer."}, :properties {:color "yellow"}} {:id #uuid "63c4b017-af79-4ef6-af8e-d5b6500c86eb", :page 65, :position {:bounding {:x1 0, :y1 206, :x2 864.0099487304688, :y2 520.09375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 206, :x2 0, :y2 225, :width 1008, :height 1332} {:x1 213.03125, :y1 472.9375, :x2 392.34375, :y2 499.9375, :width 1008, :height 1332} {:x1 547.171875, :y1 472.9375, :x2 799.71875, :y2 499.9375, :width 1008, :height 1332} {:x1 173.875, :y1 474.1875, :x2 864.0099487304688, :y2 496.1875, :width 1008, :height 1332} {:x1 144, :y1 498.09375, :x2 300.88665771484375, :y2 520.09375, :width 1008, :height 1332}), :page 65}, :content {:text "The append-to-buffer command uses the insert-buffer-substring function to copy the region"}, :properties {:color "yellow"}} {:id #uuid "63c4b01b-b02e-45fc-ac4d-3ef3fdc5f769", :page 65, :position {:bounding {:x1 0, :y1 222, :x2 864.0055541992188, :y2 544.015625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 222, :x2 0, :y2 241, :width 1008, :height 1332} {:x1 315.0625, :y1 496.84375, :x2 567.609375, :y2 523.84375, :width 1008, :height 1332} {:x1 315.03338623046875, :y1 498.09375, :x2 864.0055541992188, :y2 520.09375, :width 1008, :height 1332} {:x1 144, :y1 522.015625, :x2 648.4588623046875, :y2 544.015625, :width 1008, :height 1332}), :page 65}, :content {:text "insert-buffer-substring is described by its name: it takes a substring from a buffer, and inserts it into another buffer."}, :properties {:color "red"}} {:id #uuid "63c4b254-e2a3-4a2f-8955-cbf0fb0e22de", :page 66, :position {:bounding {:x1 144, :y1 517, :x2 648.6664428710938, :y2 544, :width 1008, :height 1332}, :rects ({:x1 249.359375, :y1 517, :x2 428.6875, :y2 544, :width 1008, :height 1332} {:x1 144, :y1 518.25, :x2 648.6664428710938, :y2 540.25, :width 1008, :height 1332}), :page 66}, :content {:text "4.4.1 The append-to-buffer Interactive Expression"}, :properties {:color "yellow"}} {:id #uuid "63c4b2b3-0800-4444-a343-c82a4059e25c", :page 66, :position {:bounding {:x1 0, :y1 382, :x2 864.005615234375, :y2 814.78125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 382, :x2 0, :y2 401, :width 1008, :height 1332} {:x1 144, :y1 768.875, :x2 864.005615234375, :y2 790.875, :width 1008, :height 1332} {:x1 144, :y1 792.78125, :x2 491.80975341796875, :y2 814.78125, :width 1008, :height 1332}), :page 66}, :content {:text "This expression is not one with letters standing for parts, as described earlier. Instead, it starts a list with these parts:"}, :properties {:color "yellow"}} {:id #uuid "63c4b2fd-fa03-4ecf-af22-d5a7a587ea3e", :page 66, :position {:bounding {:x1 0, :y1 414, :x2 864.0004272460938, :y2 876.59375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 414, :x2 0, :y2 433, :width 1008, :height 1332} {:x1 173.875, :y1 826.921875, :x2 864.0004272460938, :y2 848.921875, :width 1008, :height 1332} {:x1 351.28125, :y1 849.59375, :x2 466.3572998046875, :y2 876.59375, :width 1008, :height 1332} {:x1 144, :y1 850.84375, :x2 471.875, :y2 872.84375, :width 1008, :height 1332}), :page 66}, :content {:text "The first part of the list is an expression to read the name of a buffer and return it as a string. That is read-buffer."}, :properties {:color "yellow"}} {:id #uuid "63c4b305-b60d-4535-9474-31c14c9c2bdd", :page 66, :position {:bounding {:x1 0, :y1 430, :x2 864.0115356445312, :y2 900.5, :width 1008, :height 1332}, :rects ({:x1 0, :y1 430, :x2 0, :y2 449, :width 1008, :height 1332} {:x1 485.2284851074219, :y1 850.84375, :x2 864.0115356445312, :y2 872.84375, :width 1008, :height 1332} {:x1 245.296875, :y1 873.5, :x2 443.06707763671875, :y2 900.5, :width 1008, :height 1332} {:x1 144, :y1 874.75, :x2 453.25341796875, :y2 896.75, :width 1008, :height 1332}), :page 66}, :content {:text "The function requires a prompt as its first argument, ‘\"Append to buffer: \"’."}, :properties {:color "red"}} {:id #uuid "63c4b312-4bfd-4be2-8e85-9fdd34465856", :page 66, :position {:bounding {:x1 0, :y1 446, :x2 863.9983520507812, :y2 920.65625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 446, :x2 0, :y2 465, :width 1008, :height 1332} {:x1 464.58154296875, :y1 874.75, :x2 863.9983520507812, :y2 896.75, :width 1008, :height 1332} {:x1 144, :y1 898.65625, :x2 546.5572509765625, :y2 920.65625, :width 1008, :height 1332}), :page 66}, :content {:text "ts second argument tells the command what value to provide if you don’t specify anything."}, :properties {:color "yellow"}} {:id #uuid "63c4b34d-5031-4f1f-b815-6697f7961367", :page 66, :position {:bounding {:x1 0, :y1 510, :x2 863.9949951171875, :y2 1040.53125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 510, :x2 0, :y2 529, :width 1008, :height 1332} {:x1 378.828125, :y1 989.625, :x2 504.3594055175781, :y2 1016.625, :width 1008, :height 1332} {:x1 173.875, :y1 990.875, :x2 863.9949951171875, :y2 1012.875, :width 1008, :height 1332} {:x1 144, :y1 1013.53125, :x2 290.4554443359375, :y2 1040.53125, :width 1008, :height 1332} {:x1 144, :y1 1017.53125, :x2 610.4375, :y2 1039.53125, :width 1008, :height 1332}), :page 66}, :content {:text "The first argument to other-buffer, the exception, is yet another function, current-buffer. That is not going to be returned. "}, :properties {:color "yellow"}} {:id #uuid "63c4b355-50ce-4a0b-8ff3-a03d411a8b3b", :page 66, :position {:bounding {:x1 0, :y1 526, :x2 864.004150390625, :y2 1064.4375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 526, :x2 0, :y2 545, :width 1008, :height 1332} {:x1 617.21875, :y1 1014.78125, :x2 864.004150390625, :y2 1036.78125, :width 1008, :height 1332} {:x1 287, :y1 1037.4375, :x2 298.953125, :y2 1064.4375, :width 1008, :height 1332} {:x1 394.40625, :y1 1037.4375, :x2 531.890625, :y2 1064.4375, :width 1008, :height 1332} {:x1 144, :y1 1038.6875, :x2 793.7872924804688, :y2 1060.6875, :width 1008, :height 1332}), :page 66}, :content {:text "The second argument is the symbol for true, t. that tells other-buffer that it may show visible buffers"}, :properties {:color "red"}} {:id #uuid "63c4b374-c706-4c63-9ff1-3de657cebd8d", :page 66, :position {:bounding {:x1 187.1875, :y1 1127.109375, :x2 497.8777770996094, :y2 1151.109375, :width 1008, :height 1332}, :rects ({:x1 187.1875, :y1 1127.109375, :x2 497.8777770996094, :y2 1151.109375, :width 1008, :height 1332}), :page 66}, :content {:text "(other-buffer (current-buffer) t)"}, :properties {:color "yellow"}} {:id #uuid "63c4b384-da8e-4864-ac83-200f253e6cda", :page 66, :position {:bounding {:x1 0, :y1 606, :x2 864.0067749023438, :y2 1210.609375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 606, :x2 0, :y2 625, :width 1008, :height 1332} {:x1 655.21875, :y1 1159.703125, :x2 709.015625, :y2 1186.703125, :width 1008, :height 1332} {:x1 173.875, :y1 1160.953125, :x2 296.859375, :y2 1182.953125, :width 1008, :height 1332} {:x1 316.796875, :y1 1160.953125, :x2 423.125, :y2 1182.953125, :width 1008, :height 1332} {:x1 443.0625, :y1 1160.953125, :x2 582.140625, :y2 1182.953125, :width 1008, :height 1332} {:x1 602.078125, :y1 1160.953125, :x2 709.015625, :y2 1182.953125, :width 1008, :height 1332} {:x1 722.515625, :y1 1160.953125, :x2 864.0067749023438, :y2 1182.953125, :width 1008, :height 1332} {:x1 144, :y1 1183.609375, :x2 346.883544921875, :y2 1210.609375, :width 1008, :height 1332} {:x1 393.5625, :y1 1183.609375, :x2 519.09375, :y2 1210.609375, :width 1008, :height 1332} {:x1 144, :y1 1187.609375, :x2 524.625, :y2 1209.609375, :width 1008, :height 1332}), :page 66}, :content {:text "The second and third arguments to the list expression are(region-beginning) and (region-end)."}, :properties {:color "yellow"}} {:id #uuid "63c4b38b-d7e8-44f5-8921-fc053bf17b03", :page 66, :position {:bounding {:x1 0, :y1 622, :x2 864.017333984375, :y2 1230.765625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 622, :x2 0, :y2 641, :width 1008, :height 1332} {:x1 557.328125, :y1 1184.859375, :x2 864.017333984375, :y2 1206.859375, :width 1008, :height 1332} {:x1 144, :y1 1208.765625, :x2 550.8236694335938, :y2 1230.765625, :width 1008, :height 1332}), :page 66}, :content {:text "These two functions specify the beginning and end of the text to be appended."}, :properties {:color "red"}} {:id #uuid "63c4b75c-4fc0-4950-b2f2-a7ca633e631f", :page 67, :position {:bounding {:x1 144, :y1 391.421875, :x2 503.69207763671875, :y2 418.421875, :width 1008, :height 1332}, :rects ({:x1 336.3125, :y1 391.421875, :x2 503.69207763671875, :y2 418.421875, :width 1008, :height 1332} {:x1 144, :y1 392.671875, :x2 336.3177490234375, :y2 414.671875, :width 1008, :height 1332}), :page 67}, :content {:text "4.4.2 The Body of append-to-buffer"}, :properties {:color "yellow"}} {:id #uuid "63c4ba50-8cdc-4c7b-8532-21d67b671a7b", :page 68, :position {:bounding {:x1 144, :y1 127.515625, :x2 550.7545776367188, :y2 154.515625, :width 1008, :height 1332}, :rects ({:x1 202.546875, :y1 127.515625, :x2 360.953125, :y2 154.515625, :width 1008, :height 1332} {:x1 383.375, :y1 127.515625, :x2 550.7545776367188, :y2 154.515625, :width 1008, :height 1332} {:x1 144, :y1 128.765625, :x2 383.3729553222656, :y2 150.765625, :width 1008, :height 1332}), :page 68}, :content {:text "4.4.3 save-excursion in append-to-buffer"}, :properties {:color "yellow"}} {:id #uuid "63c4baf2-a1a9-4bdd-9ea3-212d7f2fce09", :page 68, :position {:bounding {:x1 0, :y1 574, :x2 863.993408203125, :y2 1086.8125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 574, :x2 0, :y2 593, :width 1008, :height 1332} {:x1 0, :y1 590, :x2 0, :y2 609, :width 1008, :height 1332} {:x1 619.578125, :y1 1015.75, :x2 667.0193481445312, :y2 1042.75, :width 1008, :height 1332} {:x1 577.9086303710938, :y1 1016.984375, :x2 863.993408203125, :y2 1038.984375, :width 1008, :height 1332} {:x1 199.40625, :y1 1039.65625, :x2 211.359375, :y2 1066.65625, :width 1008, :height 1332} {:x1 144, :y1 1040.90625, :x2 863.273193359375, :y2 1062.90625, :width 1008, :height 1332} {:x1 144, :y1 1064.8125, :x2 299.65875244140625, :y2 1086.8125, :width 1008, :height 1332}), :page 68}, :content {:text "The let* function is different. It has a ‘*’ in its name. It enables Emacs to set each variable in its varlist in sequence, one after another."}, :properties {:color "red"}} {:id #uuid "63c4bb17-1860-4ca4-8a23-5b89ce69bd5d", :page 68, :position {:bounding {:x1 0, :y1 622, :x2 863.9889526367188, :y2 1146.828125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 622, :x2 0, :y2 641, :width 1008, :height 1332} {:x1 173.875, :y1 1100.921875, :x2 863.9889526367188, :y2 1122.921875, :width 1008, :height 1332} {:x1 144, :y1 1124.828125, :x2 595.6076049804688, :y2 1146.828125, :width 1008, :height 1332}), :page 68}, :content {:text "Its critical feature is that variables later in the varlist can make use of the values to which Emacs set variables earlier in the varlist."}, :properties {:color "yellow"}} {:id #uuid "63c4bbd4-a7cc-492d-af85-412b875ebea9", :page 69, :position {:bounding {:x1 187.1875, :y1 475.6875, :x2 582.6126708984375, :y2 499.6875, :width 1008, :height 1332}, :rects ({:x1 187.1875, :y1 475.6875, :x2 582.6126708984375, :y2 499.6875, :width 1008, :height 1332}), :page 69}, :content {:text "(insert-buffer-substring oldbuf start end)"}, :properties {:color "red"}} {:id #uuid "63c4bbdf-17d7-4890-9e05-7c907744400a", :page 69, :position {:bounding {:x1 0, :y1 238, :x2 863.98876953125, :y2 551.203125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 238, :x2 0, :y2 257, :width 1008, :height 1332} {:x1 185.890625, :y1 504.046875, :x2 438.453125, :y2 531.046875, :width 1008, :height 1332} {:x1 144, :y1 505.296875, :x2 863.98876953125, :y2 527.296875, :width 1008, :height 1332} {:x1 144, :y1 529.203125, :x2 723.0619506835938, :y2 551.203125, :width 1008, :height 1332}), :page 69}, :content {:text "The insert-buffer-substring function copies a string from the buffer specified as its first argument and inserts the string into the present buffer. "}, :properties {:color "yellow"}} {:id #uuid "63c4bc8e-fa25-4a4c-9289-901149af3037", :page 69, :position {:bounding {:x1 173.875, :y1 888.609375, :x2 625.9933471679688, :y2 915.609375, :width 1008, :height 1332}, :rects ({:x1 296.953125, :y1 888.609375, :x2 476.265625, :y2 915.609375, :width 1008, :height 1332} {:x1 173.875, :y1 889.859375, :x2 625.9933471679688, :y2 911.859375, :width 1008, :height 1332}), :page 69}, :content {:text "In summary, append-to-buffer works as follows:"}, :properties {:color "yellow"}} {:id #uuid "63c4bc93-8e52-4368-bd83-c53914511104", :page 69, :position {:bounding {:x1 0, :y1 478, :x2 863.9987182617188, :y2 939.53125, :width 1008, :height 1332}, :rects ({:x1 0, :y1 478, :x2 0, :y2 497, :width 1008, :height 1332} {:x1 641.2256469726562, :y1 889.859375, :x2 863.9987182617188, :y2 911.859375, :width 1008, :height 1332} {:x1 466.59375, :y1 912.53125, :x2 529.3662109375, :y2 939.53125, :width 1008, :height 1332} {:x1 144, :y1 913.78125, :x2 534.890625, :y2 935.78125, :width 1008, :height 1332}), :page 69}, :content {:text "it saves the value of the current buffer in the variable called oldbuf."}, :properties {:color "red"}} {:id #uuid "63c4bc9b-7e40-483b-9731-876d7d7bf7fe", :page 69, :position {:bounding {:x1 0, :y1 494, :x2 863.984619140625, :y2 959.6875, :width 1008, :height 1332}, :rects ({:x1 0, :y1 494, :x2 0, :y2 513, :width 1008, :height 1332} {:x1 547.4293823242188, :y1 913.78125, :x2 863.984619140625, :y2 935.78125, :width 1008, :height 1332} {:x1 144, :y1 937.6875, :x2 589.6875, :y2 959.6875, :width 1008, :height 1332}), :page 69}, :content {:text "It gets the new buffer (creating one if need be) and switches Emacs’s attention to it. "}, :properties {:color "yellow"}} {:id #uuid "63c4bca5-b4eb-4ce7-8f46-060dbae5324b", :page 69, :position {:bounding {:x1 0, :y1 510, :x2 863.991455078125, :y2 983.59375, :width 1008, :height 1332}, :rects ({:x1 0, :y1 510, :x2 0, :y2 529, :width 1008, :height 1332} {:x1 773, :y1 936.4375, :x2 835.7724609375, :y2 963.4375, :width 1008, :height 1332} {:x1 599.65625, :y1 937.6875, :x2 863.991455078125, :y2 959.6875, :width 1008, :height 1332} {:x1 144, :y1 961.59375, :x2 727.6950073242188, :y2 983.59375, :width 1008, :height 1332}), :page 69}, :content {:text "Using the value of oldbuf, it inserts the region of text from the old buffer into the new buffer; "}, :properties {:color "green"}} {:id #uuid "63c4bcaa-634e-4396-82d5-81caa709fcea", :page 69, :position {:bounding {:x1 0, :y1 526, :x2 864.0123291015625, :y2 1011.265625, :width 1008, :height 1332}, :rects ({:x1 0, :y1 526, :x2 0, :y2 545, :width 1008, :height 1332} {:x1 727.6787109375, :y1 961.59375, :x2 864.0123291015625, :y2 983.59375, :width 1008, :height 1332} {:x1 144, :y1 984.265625, :x2 290.4554443359375, :y2 1011.265625, :width 1008, :height 1332} {:x1 144, :y1 988.265625, :x2 664.3814086914062, :y2 1010.265625, :width 1008, :height 1332}), :page 69}, :content {:text "and then using save-excursion, it brings you back to your original buffer."}, :properties {:color "blue"}} {:id #uuid "63c4bd57-7472-40c5-971e-3acb8141206b", :page 70, :position {:bounding {:x1 0, :y1 478, :x2 863.9979248046875, :y2 963.71875, :width 1008, :height 1332}, :rects ({:x1 0, :y1 478, :x2 0, :y2 497, :width 1008, :height 1332} {:x1 259.1875, :y1 917.8125, :x2 863.9979248046875, :y2 939.8125, :width 1008, :height 1332} {:x1 259.1875, :y1 941.71875, :x2 312.669921875, :y2 963.71875, :width 1008, :height 1332}), :page 70}, :content {:text "Find a named buffer or create one if a buffer of that name does not exist. "}, :properties {:color "red"}} {:id #uuid "63c4c0b3-b5ac-47ef-a5f2-9a23239bda5a", :page 69, :position {:bounding {:x1 144, :y1 1165.765625, :x2 277.5447998046875, :y2 1192.765625, :width 1008, :height 1332}, :rects ({:x1 144, :y1 1165.765625, :x2 277.5447998046875, :y2 1192.765625, :width 1008, :height 1332}), :page 69}, :content {:text "4.5 Review"}, :properties {:color "yellow"}} {:id #uuid "63c4c0c8-fd1d-44d5-bf9b-eb62a273ef51", :page 70, :position {:bounding {:x1 144, :y1 1018.65625, :x2 299.8716125488281, :y2 1045.65625, :width 1008, :height 1332}, :rects ({:x1 144, :y1 1018.65625, :x2 299.8716125488281, :y2 1045.65625, :width 1008, :height 1332}), :page 70}, :content {:text "4.6 Exercises"}, :properties {:color "yellow"}}], :extra {:page 69}}