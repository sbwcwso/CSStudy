{:highlights [{:id #uuid "6357c663-c6c0-4187-a1d3-a62889da91a5", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 890.847900390625, :y2 298.484375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 248.96875, :x2 890.847900390625, :y2 270.96875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 276.484375, :x2 445.7289733886719, :y2 298.484375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "One of the most important skills an intermediate to advanced programmer can have is the ability to tell when your code is correct."}, :properties {:color "yellow"}} {:id #uuid "6357c740-3eb0-44be-afb7-1c19b9416184", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 877.6730346679688, :y2 678.671875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 725.5253295898438, :y1 600.390625, :x2 877.6730346679688, :y2 622.390625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 629.15625, :x2 843.428955078125, :y2 651.15625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 656.671875, :x2 330.3383483886719, :y2 678.671875, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "In the real world, these tests are written by the programmers themselves, rather than some benevolent Josh-Hug-like third party."}, :properties {:color "yellow"}} {:id #uuid "6357c761-272e-460a-b5b6-9e8caa6d31ee", :page 1, :position {:bounding {:x1 98.328125, :y1 705.4375, :x2 636.93017578125, :y2 727.4375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 705.4375, :x2 636.93017578125, :y2 727.4375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "In this chapter, we'll explore how we can write our own tests. "}, :properties {:color "green"}} {:id #uuid "6357c77e-ee8d-415f-bac2-d3f7848d90e6", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 873.8450317382812, :y2 786.46875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 636.9132080078125, :y1 705.4375, :x2 873.8450317382812, :y2 727.4375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 732.953125, :x2 868.5386352539062, :y2 758.953125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 760.46875, :x2 334.0625, :y2 786.46875, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Our goal will be to create a class called Sort that provides a method sort(String[] x) that destructively sorts the strings in the array x ."}, :properties {:color "purple"}} {:id #uuid "6357c7c8-b004-4025-ae3b-355cd1840352", :page 1, :position {:bounding {:x1 91.921875, :y1 358.203125, :x2 203.38929748535156, :y2 381.203125, :width 927.0000000000001, :height 1311.785454369064}, :rects ({:x1 91.921875, :y1 358.203125, :x2 203.38929748535156, :y2 381.203125, :width 927.0000000000001, :height 1311.785454369064}), :page 1}, :content {:text "A New Way"}, :properties {:color "blue"}} {:id #uuid "6357c7d7-6671-4492-972c-802f7853191f", :page 1, :position {:bounding {:x1 0, :y1 0, :x2 813.6506958007812, :y2 802.171875, :width 927.0000000000001, :height 1311.785454369064}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 927.0000000000001, :height 1311.785454369064} {:x1 0, :y1 0, :x2 0, :y2 16, :width 927.0000000000001, :height 1311.785454369064} {:x1 91.921875, :y1 755.453125, :x2 813.6506958007812, :y2 780.453125, :width 927.0000000000001, :height 1311.785454369064} {:x1 91.921875, :y1 781.171875, :x2 677.246337890625, :y2 802.171875, :width 927.0000000000001, :height 1311.785454369064}), :page 1}, :content {:text "As a totally new way of thinking, we'll start by writing testSort() first, and only after we've finished the test, we'll move on to writing the actual sorting code."}, :properties {:color "green"}} {:id #uuid "6357d711-4764-4d72-ac67-1ee5fc5c883c", :page 1, :position {:bounding {:x1 98.328125, :y1 887.484375, :x2 261.30694580078125, :y2 912.484375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 98.328125, :y1 887.484375, :x2 261.30694580078125, :y2 912.484375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "Ad Hoc Testing"}, :properties {:color "blue"}} {:id #uuid "6357d7a9-7ed3-41d6-abe8-11269c32acc7", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 826.6138305664062, :y2 723.9375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 697.9375, :x2 826.6138305664062, :y2 723.9375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 657.875, :y1 700.984375, :x2 661.921875, :y2 719, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "If we run the testSort() method with this blank Sort.sort method, we'd get:"}, :properties {:color "yellow"}} {:id #uuid "6357d826-c6ef-4e24-a73c-ebe91c6ad9f9", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 871.6577758789062, :y2 922.53125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 660.1513061523438, :y1 873.015625, :x2 871.6577758789062, :y2 895.015625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 900.53125, :x2 777.8976440429688, :y2 922.53125, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "many programmers find the creation of these little mini-puzzles for themselves to be almost addictive."}, :properties {:color "purple"}} {:id #uuid "6357d903-c26c-4001-a164-80b83c8106ac", :page 2, :position {:bounding {:x1 0, :y1 0, :x2 878.0611419677734, :y2 1055.09375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 184.3430633544922, :y1 1004.34375, :x2 878.0611419677734, :y2 1026.34375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 1033.09375, :x2 470.2491760253906, :y2 1055.09375, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "You now have the ability to create a judge for your code, whose esteem you can only win by completing the code correctly."}, :properties {:color "purple"}} {:id #uuid "6357d9bf-7c71-40f7-b72a-b5085e83be48", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 888.4263916015625, :y2 122.140625, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 991.5999333333333, :height 1403.1999666666666} {:x1 0, :y1 0, :x2 0, :y2 16, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 72.625, :x2 888.4263916015625, :y2 94.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 98.328125, :y1 100.140625, :x2 885.54248046875, :y2 122.140625, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "While the single test above wasn't a ton of work, writing a suite of such ad hoc tests would be very tedious, as it would entail writing a bunch of different loops and print statements."}, :properties {:color "purple"}} {:id #uuid "6357d9e9-93b1-4c4a-b176-237fcd547246", :page 3, :position {:bounding {:x1 89.140625, :y1 162.546875, :x2 216.482421875, :y2 184.546875, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 89.140625, :y1 162.546875, :x2 216.482421875, :y2 184.546875, :width 898.9999999999998, :height 1272.1630242478834}), :page 3}, :content {:text "JUnit Testing"}, :properties {:color "yellow"}} {:id #uuid "6357d9fe-e6cf-4ad3-8845-ee657f1d4476", :page 3, :position {:bounding {:x1 0, :y1 0, :x2 803.7797241210938, :y2 260.359375, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 898.9999999999998, :height 1272.1630242478834} {:x1 0, :y1 0, :x2 0, :y2 16, :width 898.9999999999998, :height 1272.1630242478834} {:x1 89.140625, :y1 214.28125, :x2 803.7797241210938, :y2 238.28125, :width 898.9999999999998, :height 1272.1630242478834} {:x1 89.140625, :y1 240.359375, :x2 342.52276611328125, :y2 260.359375, :width 898.9999999999998, :height 1272.1630242478834}), :page 3}, :content {:text "The org.junit library provides a number of helpful methods and useful capabilities for simplifying the writing of tests. "}, :properties {:color "blue"}} {:id #uuid "6357da53-313e-4b21-9a82-bc610ed61bd4", :page 3, :position {:bounding {:x1 89.140625, :y1 448.984375, :x2 681.476318359375, :y2 468.984375, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 89.140625, :y1 448.984375, :x2 681.476318359375, :y2 468.984375, :width 898.9999999999998, :height 1272.1630242478834}), :page 3}, :content {:text "This code is much simpler, and does more or less the exact same thing"}, :properties {:color "blue"}} {:id #uuid "6357dae1-dc1d-41e2-bbd0-2fa455cf841b", :page 3, :position {:bounding {:x1 89.140625, :y1 755.53125, :x2 226.3723602294922, :y2 777.53125, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 89.140625, :y1 755.53125, :x2 226.3723602294922, :y2 777.53125, :width 898.9999999999998, :height 1272.1630242478834}), :page 3}, :content {:text "Selection Sort"}, :properties {:color "yellow"}} {:id #uuid "6357db28-0991-4ceb-9220-1c6239fa747d", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 801.24365234375, :y2 355.0625, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 898.9999999999998, :height 1272.1630242478834} {:x1 89.140625, :y1 304.984375, :x2 801.24365234375, :y2 324.984375, :width 898.9999999999998, :height 1272.1630242478834} {:x1 89.140625, :y1 331.0625, :x2 485.20440673828125, :y2 355.0625, :width 898.9999999999998, :height 1272.1630242478834} {:x1 233.375, :y1 333.921875, :x2 237.03125, :y2 350.25, :width 898.9999999999998, :height 1272.1630242478834}), :page 4}, :content {:text "Now that we know how selection sort works, we can write in a few short comments in our blank Sort.sort method to guide our thinking:"}, :properties {:color "blue"}} {:id #uuid "6357db8c-bbb5-4e59-a5ba-50722f24fba3", :page 4, :position {:bounding {:x1 89.140625, :y1 702.234375, :x2 210.50372314453125, :y2 724.234375, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 89.140625, :y1 702.234375, :x2 210.50372314453125, :y2 724.234375, :width 898.9999999999998, :height 1272.1630242478834}), :page 4}, :content {:text "findSmallest"}, :properties {:color "blue"}} {:id #uuid "6357dbc2-e2f4-4137-be0c-9b2091741ab8", :page 4, :position {:bounding {:x1 265.0427551269531, :y1 780.0625, :x2 776.7611083984375, :y2 800.0625, :width 898.9999999999998, :height 1272.1630242478834}, :rects ({:x1 265.0427551269531, :y1 780.0625, :x2 776.7611083984375, :y2 800.0625, :width 898.9999999999998, :height 1272.1630242478834}), :page 4}, :content {:text "we'll start by writing a test before we even complete the method."}, :properties {:color "blue"}} {:id #uuid "6357ddcd-b40d-49ca-83b6-c633dc84851c", :page 5, :position {:bounding {:x1 0, :y1 0, :x2 775.4351501464844, :y2 1038.765625, :width 899, :height 1272.1630242478839}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 899, :height 1272.1630242478839} {:x1 170.64376831054688, :y1 989.8125, :x2 775.4351501464844, :y2 1009.8125, :width 899, :height 1272.1630242478839} {:x1 89.140625, :y1 1014.765625, :x2 193.7602996826172, :y2 1038.765625, :width 899, :height 1272.1630242478839} {:x1 182.03125, :y1 1017.625, :x2 185.6875, :y2 1033.953125, :width 899, :height 1272.1630242478839}), :page 5}, :content {:text " It might have seem rather contrived that I just happened to return the right value x[2] ."}, :properties {:color "purple"}} {:id #uuid "636192cc-73fd-40b2-9eec-887923a105df", :page 4, :position {:bounding {:x1 0, :y1 0, :x2 785.27001953125, :y2 849.234375, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 803.21875, :x2 785.27001953125, :y2 827.21875, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 829.234375, :x2 131.57958984375, :y2 849.234375, :width 896.9999999999999, :height 1269.3328506677994}), :page 4}, :content {:text "First, we'll create a dummy findSmallest method that simply returns some arbitrary value"}, :properties {:color "yellow"}} {:id #uuid "6361949d-4b9c-4964-abc9-e720e0d8d4c4", :page 7, :position {:bounding {:x1 88.9375, :y1 418.984375, :x2 142.13267517089844, :y2 440.984375, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 418.984375, :x2 142.13267517089844, :y2 440.984375, :width 896.9999999999999, :height 1269.3328506677994}), :page 7}, :content {:text "Swap"}, :properties {:color "yellow"}} {:id #uuid "63619598-c7e9-4eb8-8079-e284c75b096d", :page 9, :position {:bounding {:x1 88.9375, :y1 63.75, :x2 300.56097412109375, :y2 85.75, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 63.75, :x2 300.56097412109375, :y2 85.75, :width 896.9999999999999, :height 1269.3328506677994}), :page 9}, :content {:text "Revising findSmallest"}, :properties {:color "yellow"}} {:id #uuid "636195f8-e871-4c2c-9927-02c8a28eb85f", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 800.9852294921875, :y2 708.953125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 378.826171875, :y1 664.0625, :x2 800.9852294921875, :y2 684.0625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 688.953125, :x2 626.8939208984375, :y2 708.953125, :width 896.9999999999999, :height 1269.3328506677994}), :page 9}, :content {:text "Making silly errors like this is normal and really easy to do, so don't sweat it if you find yourself doing something similar."}, :properties {:color "purple"}} {:id #uuid "63619632-c724-4696-9191-dca7223749c1", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 794.3372802734375, :y2 734.96875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 631.8438720703125, :y1 688.953125, :x2 794.3372802734375, :y2 708.953125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 714.96875, :x2 382.2349853515625, :y2 734.96875, :width 896.9999999999999, :height 1269.3328506677994}), :page 9}, :content {:text "Iterating on a design is part of the process of writing code."}, :properties {:color "yellow"}} {:id #uuid "636196d8-0d48-43c1-8de9-7d8fb63840d1", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 790.5132446289062, :y2 667.09375, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 621.078125, :x2 790.5132446289062, :y2 641.078125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 647.09375, :x2 370.96759033203125, :y2 667.09375, :width 896.9999999999999, :height 1269.3328506677994}), :page 10}, :content {:text "All that's left is to somehow selection sort the remaining items, perhaps using recursion. We'll tackle this in the next section."}, :properties {:color "purple"}} {:id #uuid "6361971d-91e6-4970-a5f5-c3d9b11f702c", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 786.3256225585938, :y2 761, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 690.078125, :x2 786.3256225585938, :y2 710.078125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 714.96875, :x2 781.4650268554688, :y2 734.96875, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 741, :x2 240.13059997558594, :y2 761, :width 896.9999999999999, :height 1269.3328506677994}), :page 10}, :content {:text "Reflecting on what we've accomplished, it's worth noting how we created tests first, and used these to build confidence that the actual methods work before we ever tried to use them for anything. "}, :properties {:color "yellow"}} {:id #uuid "63619770-7766-43b3-84f7-850b5c3a54d3", :page 10, :position {:bounding {:x1 0, :y1 0, :x2 801.2318115234375, :y2 785.875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 240.113525390625, :y1 741, :x2 801.2318115234375, :y2 761, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 765.875, :x2 265.6047668457031, :y2 785.875, :width 896.9999999999999, :height 1269.3328506677994}), :page 10}, :content {:text "This is an incredibly important idea, and one that will serve you well if you decide to adopt it."}, :properties {:color "blue"}} {:id #uuid "636197a0-47a3-4584-a951-d5774c6060ef", :page 10, :position {:bounding {:x1 88.9375, :y1 812.671875, :x2 344.6953430175781, :y2 834.671875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 812.671875, :x2 344.6953430175781, :y2 834.671875, :width 896.9999999999999, :height 1269.3328506677994}), :page 10}, :content {:text "Recursive Helper Methods"}, :properties {:color "yellow"}} {:id #uuid "636197e0-12a2-43f9-8a09-5b13cb7a9d47", :page 11, :position {:bounding {:x1 88.9375, :y1 273.765625, :x2 752.9450073242188, :y2 293.765625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 273.765625, :x2 752.9450073242188, :y2 293.765625, :width 896.9999999999999, :height 1269.3328506677994}), :page 11}, :content {:text "This problem of needing to consider only a subset of a larger array is very common. "}, :properties {:color "yellow"}} {:id #uuid "636197fa-202d-45c2-bd3e-c44b4b8b6a62", :page 11, :position {:bounding {:x1 0, :y1 0, :x2 792.1150512695312, :y2 344.671875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 752.9280395507812, :y1 273.765625, :x2 767.1364135742188, :y2 293.765625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 299.78125, :x2 792.1150512695312, :y2 319.78125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 324.671875, :x2 585.81494140625, :y2 344.671875, :width 896.9999999999999, :height 1269.3328506677994}), :page 11}, :content {:text "A typical solution is to create a private helper method that has an additional parameter (or parameters) that delineate which part of the array to consider. "}, :properties {:color "blue"}} {:id #uuid "6361988c-73ea-41ef-b3dd-27543d6765f2", :page 11, :position {:bounding {:x1 88.9375, :y1 991.421875, :x2 401.1572265625, :y2 1013.421875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 991.421875, :x2 401.1572265625, :y2 1013.421875, :width 896.9999999999999, :height 1269.3328506677994}), :page 11}, :content {:text "Debugging and Completing Sort"}, :properties {:color "yellow"}} {:id #uuid "6361a3f2-bef9-4bd3-98e2-18ab56e2f619", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 750.691162109375, :y2 842.453125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 797.5625, :x2 750.691162109375, :y2 821.5625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 822.453125, :x2 141.8974609375, :y2 842.453125, :width 896.9999999999999, :height 1269.3328506677994}), :page 13}, :content {:text "We then modify TestSort so that it runs TestSort.sort and voila, the method works."}, :properties {:color "purple"}} {:id #uuid "6361a437-fffa-400e-8263-fd7cc3aed704", :page 13, :position {:bounding {:x1 88.9375, :y1 894.125, :x2 483.8729248046875, :y2 916.125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 894.125, :x2 483.8729248046875, :y2 916.125, :width 896.9999999999999, :height 1269.3328506677994}), :page 13}, :content {:text "Reflections on the Development Process"}, :properties {:color "yellow"}} {:id #uuid "6361a46d-6338-4fce-923d-ba41a5de98f1", :page 13, :position {:bounding {:x1 0, :y1 0, :x2 783.7371826171875, :y2 1016.671875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 308.33441162109375, :y1 970.640625, :x2 783.7371826171875, :y2 990.640625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 996.671875, :x2 435.2922058105469, :y2 1016.671875, :width 896.9999999999999, :height 1269.3328506677994}), :page 13}, :content {:text "Trying to hold too much in your brain at once is a recipe for disaster at worst, and slow progress at best."}, :properties {:color "purple"}} {:id #uuid "6361a4b0-0e33-4f26-a2c9-938e3a868c2b", :page 13, :position {:bounding {:x1 88.9375, :y1 1039.65625, :x2 601.7562255859375, :y2 1059.65625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 1039.65625, :x2 601.7562255859375, :y2 1059.65625, :width 896.9999999999999, :height 1269.3328506677994}), :page 13}, :content {:text "Having a set of automated tests helps reduce this cognitive load. "}, :properties {:color "yellow"}} {:id #uuid "6361a51b-216f-4d9a-8db2-1eab167229e2", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 784.5827026367188, :y2 205.515625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 159.5, :x2 784.5827026367188, :y2 179.5, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 185.515625, :x2 775.59033203125, :y2 205.515625, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "As an analogy, you could test that a parachute's ripcord works by getting in an airplane, taking off, jumping out, and pulling the ripcord and seeing if the parachute comes out."}, :properties {:color "blue"}} {:id #uuid "6361a5df-38e9-461d-97e7-a3e3dfcca17a", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 791.4248046875, :y2 350.328125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 386.9950256347656, :y1 279.421875, :x2 783.863037109375, :y2 299.421875, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 304.3125, :x2 791.4248046875, :y2 324.3125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 330.328125, :x2 210.01861572265625, :y2 350.328125, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "ests also allow you to gain confidence in the basic pieces of your program, so that if something goes wrong, you have a better idea of where to start looking"}, :properties {:color "yellow"}} {:id #uuid "6361a5fa-5b8d-48e4-9630-575566b9efe2", :page 14, :position {:bounding {:x1 88.9375, :y1 373.3125, :x2 477.2901611328125, :y2 393.3125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 373.3125, :x2 477.2901611328125, :y2 393.3125, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "Lastly, tests make it easier to refactor your code. "}, :properties {:color "yellow"}} {:id #uuid "6361a60d-cc95-4028-bad9-c1ce12f90836", :page 14, :position {:bounding {:x1 88.9375, :y1 469.890625, :x2 204.36322021484375, :y2 491.890625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 469.890625, :x2 204.36322021484375, :y2 491.890625, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "Better JUnit"}, :properties {:color "yellow"}} {:id #uuid "6361a66a-1135-45c9-95b4-091db298c0b4", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 761.2987060546875, :y2 806.25, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 760.21875, :x2 761.2987060546875, :y2 780.21875, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 786.25, :x2 196.21849060058594, :y2 806.25, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "While JUnit certainly improved things, our test code from before was a bit clumsy in several ways."}, :properties {:color "purple"}} {:id #uuid "6361a6af-1239-44e3-a334-ba184fdd8d8f", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 785.4728393554688, :y2 831.140625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 196.2012939453125, :y1 786.25, :x2 785.4728393554688, :y2 806.25, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 811.140625, :x2 566.4428100585938, :y2 831.140625, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text " In the remainder of this section, we'll talk about two major enhancements you can make so that your code is cleaner and easier to use. "}, :properties {:color "yellow"}} {:id #uuid "6361a6be-32b3-437d-af9c-635e10fbaf6b", :page 14, :position {:bounding {:x1 88.9375, :y1 905.03125, :x2 758.8876953125, :y2 925.03125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 905.03125, :x2 758.8876953125, :y2 925.03125, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "The first enhancement is to use what is known as a \"test annotation\". To do this, we:"}, :properties {:color "yellow"}} {:id #uuid "6361a6cb-afcd-4109-af67-fe3773bd349a", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 644.6161499023438, :y2 973.15625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 134.203125, :y1 949.15625, :x2 644.6161499023438, :y2 973.15625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 502, :y1 952, :x2 505.65625, :y2 968.296875, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "Precede each method with @org.junit.Test (no semi-colon)."}, :properties {:color "blue"}} {:id #uuid "6361a6d9-fc23-4c0d-9a21-cc2c6cc94ccb", :page 14, :position {:bounding {:x1 134.203125, :y1 974.046875, :x2 468.3277893066406, :y2 994.046875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 134.203125, :y1 974.046875, :x2 468.3277893066406, :y2 994.046875, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "Change each test method to be non-static."}, :properties {:color "blue"}} {:id #uuid "6361a6e1-b979-41bc-8cea-848ceb34da50", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 570.8013916015625, :y2 1024.0625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 134.203125, :y1 1000.0625, :x2 570.8013916015625, :y2 1024.0625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 516.609375, :y1 1002.90625, :x2 520.265625, :y2 1019.203125, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "Remove our main method from the TestSort class."}, :properties {:color "blue"}} {:id #uuid "6361a760-8504-47d6-978e-19543a105087", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 783.1595458984375, :y2 1087.9375, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 1043.046875, :x2 783.1595458984375, :y2 1063.046875, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 1067.9375, :x2 680.085693359375, :y2 1087.9375, :width 896.9999999999999, :height 1269.3328506677994}), :page 14}, :content {:text "Once we've done these three things, if we re-run our code in JUnit using the Run->Run command, all of the tests execute without having to be manually invoked. "}, :properties {:color "yellow"}} {:id #uuid "6361a783-5a19-4fb3-84a1-98ce2125ac56", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 749.3820190429688, :y2 255.296875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 210.40625, :x2 749.3820190429688, :y2 230.40625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 235.296875, :x2 466.37786865234375, :y2 255.296875, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "The second enhancement will let us use shorter names for some of the very lengthy method names, as well as the annotation name. "}, :properties {:color "yellow"}} {:id #uuid "6361a7a8-c4fb-4c9c-b31c-1e7d3feec268", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 762.8528442382812, :y2 328.3125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 304.3125, :x2 762.8528442382812, :y2 328.3125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 586.234375, :y1 307.15625, :x2 589.890625, :y2 323.453125, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "We first add the import statement import org.junit.Test; to the top of our file. "}, :properties {:color "yellow"}} {:id #uuid "6361a7bb-65ad-46d3-b309-740632f0c9dc", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 804.0620727539062, :y2 354.328125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 762.8359985351562, :y1 304.3125, :x2 804.0620727539062, :y2 324.3125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 330.328125, :x2 750.8125, :y2 354.328125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 739.515625, :y1 333.1875, :x2 743.171875, :y2 349.484375, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "After doing this, we can replace all instances of @org.junit.Test with simply @Test ."}, :properties {:color "blue"}} {:id #uuid "6361a7dd-3798-483e-852f-9b96cedae2aa", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 761.0804443359375, :y2 397.3125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 373.3125, :x2 761.0804443359375, :y2 397.3125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 749.53125, :y1 376.171875, :x2 753.1875, :y2 392.46875, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "We then add our second import statement import static org.junit.Assert.* ."}, :properties {:color "yellow"}} {:id #uuid "6361a7f5-5d47-4b5a-a06a-a1d5604f72d6", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 804.9619750976562, :y2 422.203125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 764.7797241210938, :y1 373.3125, :x2 804.9619750976562, :y2 393.3125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 398.203125, :x2 692.4539184570312, :y2 422.203125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 675.84375, :y1 401.0625, :x2 679.5, :y2 417.359375, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "After doing this, anywhere we can omit anywhere we had org.junit.Assert. . "}, :properties {:color "blue"}} {:id #uuid "6361a810-fe61-4271-adc5-7fbf22bb78bf", :page 15, :position {:bounding {:x1 88.9375, :y1 564.921875, :x2 275.23260498046875, :y2 586.921875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 564.921875, :x2 275.23260498046875, :y2 586.921875, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "Testing Philosophy"}, :properties {:color "yellow"}} {:id #uuid "6361a85e-4a91-4077-b7d8-e2e2c0d0fcf2", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 772.6407470703125, :y2 808.5, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 214.34637451171875, :y1 763.625, :x2 772.6407470703125, :y2 783.625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 788.5, :x2 368.2955017089844, :y2 808.5, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "It also gamifies the assessment process by providing juicy points as an incentive to acheiving correctness. "}, :properties {:color "purple"}} {:id #uuid "6361a916-63be-47a6-808c-e3e55332b666", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 769.0297241210938, :y2 834.53125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 368.2783508300781, :y1 788.5, :x2 735.247802734375, :y2 808.5, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 814.53125, :x2 769.0297241210938, :y2 834.53125, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "This can also backfire if students spend undue amounts of time chasing final points that won't actually affect their grade or learning."}, :properties {:color "purple"}} {:id #uuid "6361a98a-e5de-4c8e-87fe-937183345e4c", :page 15, :position {:bounding {:x1 0, :y1 0, :x2 788.6998291015625, :y2 928.421875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 178.9741973876953, :y1 882.40625, :x2 788.6998291015625, :y2 902.40625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 908.421875, :x2 292.2587890625, :y2 928.421875, :width 896.9999999999999, :height 1269.3328506677994}), :page 15}, :content {:text "One's workflow is hindered by sporadically uploading your code and waiting for the autograder to run."}, :properties {:color "yellow"}} {:id #uuid "6361aa0d-8998-4ef7-99a9-39df2ff3a0a5", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 775.024169921875, :y2 136.515625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 644.29833984375, :y1 90.5, :x2 775.024169921875, :y2 110.5, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 116.515625, :x2 634.77197265625, :y2 136.515625, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Unit testing also forces you to clarify what each unit of code should be accomplishing."}, :properties {:color "yellow"}} {:id #uuid "6361aba2-65be-4100-a8b8-1f19933ed7ec", :page 16, :position {:bounding {:x1 88.9375, :y1 279.421875, :x2 392.6739807128906, :y2 299.421875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 88.9375, :y1 279.421875, :x2 392.6739807128906, :y2 299.421875, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Test-Driven Development (TDD)"}, :properties {:color "blue"}} {:id #uuid "6361abbc-f4b6-4a35-80ce-32d55cd6ac5e", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 773.9605102539062, :y2 368.4375, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 322.40625, :x2 773.9605102539062, :y2 342.40625, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 348.4375, :x2 330.7662658691406, :y2 368.4375, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "TDD is a development process in which we write tests for code before writing the code itself. The steps are as follows:"}, :properties {:color "yellow"}} {:id #uuid "6361abc7-a7d3-4677-90d7-3c8b692585d5", :page 16, :position {:bounding {:x1 134.203125, :y1 391.421875, :x2 313.91552734375, :y2 411.421875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 134.203125, :y1 391.421875, :x2 313.91552734375, :y2 411.421875, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Identify a new feature."}, :properties {:color "blue"}} {:id #uuid "6361abcf-8218-4d8f-9eb7-b88273c0fe8c", :page 16, :position {:bounding {:x1 134.203125, :y1 416.3125, :x2 393.310791015625, :y2 436.3125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 134.203125, :y1 416.3125, :x2 393.310791015625, :y2 436.3125, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Write a unit test for that feature."}, :properties {:color "blue"}} {:id #uuid "6361abd5-22cd-4dad-9420-0a0b4efe0e59", :page 16, :position {:bounding {:x1 134.203125, :y1 442.328125, :x2 347.1006164550781, :y2 462.328125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 134.203125, :y1 442.328125, :x2 347.1006164550781, :y2 462.328125, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Run the test. It should fail."}, :properties {:color "blue"}} {:id #uuid "6361abde-4e3e-4a4c-9623-cb24a233943c", :page 16, :position {:bounding {:x1 134.203125, :y1 467.21875, :x2 382.87481689453125, :y2 487.21875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 134.203125, :y1 467.21875, :x2 382.87481689453125, :y2 487.21875, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Write code that passes the test. "}, :properties {:color "blue"}} {:id #uuid "6361abea-1433-4fa2-9354-8ba8f934aec3", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 735.901123046875, :y2 538.125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 134.203125, :y1 492.109375, :x2 735.901123046875, :y2 512.109375, :width 896.9999999999999, :height 1269.3328506677994} {:x1 134.203125, :y1 518.125, :x2 409.8112487792969, :y2 538.125, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Optional: refactor code to make it faster, cleaner, etc. Except now we have a reference to tests that should pass."}, :properties {:color "blue"}} {:id #uuid "6361ac0f-9377-4aee-9dc5-7765ab52bb22", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 791.9959106445312, :y2 607.140625, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 561.109375, :x2 791.9959106445312, :y2 581.109375, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 587.140625, :x2 468.2867431640625, :y2 607.140625, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Test-Driven Development is not required in this class and may not be your style but unit testing in general is most definitely a good idea."}, :properties {:color "blue"}} {:id #uuid "6361ac35-b911-4d69-a7a1-428afa500b1a", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 739.5205688476562, :y2 729.3125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 250.55224609375, :y1 683.296875, :x2 739.5205688476562, :y2 703.296875, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 709.3125, :x2 163.34469604492188, :y2 729.3125, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "Integration testing verifies that components interact properly together. "}, :properties {:color "blue"}} {:id #uuid "6361ac50-6cea-41e7-9958-aefa99f28ab6", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 797.4287109375, :y2 754.203125, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 0, :y1 0, :x2 0, :y2 16, :width 896.9999999999999, :height 1269.3328506677994} {:x1 431.8321228027344, :y1 709.3125, :x2 797.4287109375, :y2 729.3125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 734.203125, :x2 588.1759643554688, :y2 754.203125, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "You can imagine unit testing as the most nitty gritty, with integration testing a level of abstraction above this."}, :properties {:color "purple"}} {:id #uuid "6361acbd-0ec8-4a9a-adeb-59a25c09af30", :page 16, :position {:bounding {:x1 191.21095275878906, :y1 803.21875, :x2 757.6089019775391, :y2 823.21875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 191.21095275878906, :y1 803.21875, :x2 757.6089019775391, :y2 823.21875, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "And at a high level of abstraction, it's easy to miss subtle or rare errors."}, :properties {:color "yellow"}} {:id #uuid "6361acd9-6968-49b0-8893-dbc9f797ed24", :page 16, :position {:bounding {:x1 0, :y1 0, :x2 760.31787109375, :y2 892.21875, :width 896.9999999999999, :height 1269.3328506677994}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 846.203125, :x2 760.31787109375, :y2 866.203125, :width 896.9999999999999, :height 1269.3328506677994} {:x1 88.9375, :y1 872.21875, :x2 153.2352752685547, :y2 892.21875, :width 896.9999999999999, :height 1269.3328506677994}), :page 16}, :content {:text "As a summary, you should definitely write tests but only when they might be useful!"}, :properties {:color "blue"}}]}